)]}'
{"version": 3, "sources": ["/web/static/lib/luxon/luxon.js", "/web/static/src/env.js", "/web/static/src/core/assets.js", "/web/static/src/core/browser/browser.js", "/web/static/src/core/browser/cookie_service.js", "/web/static/src/core/browser/feature_detection.js", "/web/static/src/core/browser/router_service.js", "/web/static/src/core/browser/title_service.js", "/web/static/src/core/checkbox/checkbox.js", "/web/static/src/core/confirmation_dialog/confirmation_dialog.js", "/web/static/src/core/context.js", "/web/static/src/core/datepicker/datepicker.js", "/web/static/src/core/debug/debug_context.js", "/web/static/src/core/debug/debug_menu_basic.js", "/web/static/src/core/debug/debug_menu_items.js", "/web/static/src/core/debug/debug_providers.js", "/web/static/src/core/debug/debug_utils.js", "/web/static/src/core/debug/profiling/profiling_item.js", "/web/static/src/core/debug/profiling/profiling_service.js", "/web/static/src/core/dialog/dialog.js", "/web/static/src/core/dialog/dialog_container.js", "/web/static/src/core/dialog/dialog_service.js", "/web/static/src/core/domain.js", "/web/static/src/core/dropdown/dropdown.js", "/web/static/src/core/dropdown/dropdown_item.js", "/web/static/src/core/dropdown/dropdown_navigation_hook.js", "/web/static/src/core/effects/effect_container.js", "/web/static/src/core/effects/effect_service.js", "/web/static/src/core/effects/rainbow_man.js", "/web/static/src/core/errors/error_dialogs.js", "/web/static/src/core/errors/error_handlers.js", "/web/static/src/core/errors/error_service.js", "/web/static/src/core/errors/error_utils.js", "/web/static/src/core/file_input/file_input.js", "/web/static/src/core/hotkeys/hotkey_hook.js", "/web/static/src/core/hotkeys/hotkey_service.js", "/web/static/src/core/l10n/dates.js", "/web/static/src/core/l10n/localization.js", "/web/static/src/core/l10n/localization_service.js", "/web/static/src/core/l10n/translation.js", "/web/static/src/core/main_components_container.js", "/web/static/src/core/network/download.js", "/web/static/src/core/network/http_service.js", "/web/static/src/core/network/rpc_service.js", "/web/static/src/core/notifications/notification.js", "/web/static/src/core/notifications/notification_container.js", "/web/static/src/core/notifications/notification_service.js", "/web/static/src/core/orm_service.js", "/web/static/src/core/popover/popover.js", "/web/static/src/core/popover/popover_container.js", "/web/static/src/core/popover/popover_hook.js", "/web/static/src/core/popover/popover_service.js", "/web/static/src/core/position/position_hook.js", "/web/static/src/core/py_js/py.js", "/web/static/src/core/py_js/py_builtin.js", "/web/static/src/core/py_js/py_date.js", "/web/static/src/core/py_js/py_interpreter.js", "/web/static/src/core/py_js/py_parser.js", "/web/static/src/core/py_js/py_tokenizer.js", "/web/static/src/core/py_js/py_utils.js", "/web/static/src/core/registry.js", "/web/static/src/core/scroller_service.js", "/web/static/src/core/tooltip/tooltip.js", "/web/static/src/core/tooltip/tooltip_hook.js", "/web/static/src/core/ui/block_ui.js", "/web/static/src/core/ui/ui_service.js", "/web/static/src/core/user_service.js", "/web/static/src/core/utils/arrays.js", "/web/static/src/core/utils/components.js", "/web/static/src/core/utils/concurrency.js", "/web/static/src/core/utils/functions.js", "/web/static/src/core/utils/hooks.js", "/web/static/src/core/utils/numbers.js", "/web/static/src/core/utils/objects.js", "/web/static/src/core/utils/patch.js", "/web/static/src/core/utils/scrolling.js", "/web/static/src/core/utils/search.js", "/web/static/src/core/utils/strings.js", "/web/static/src/core/utils/timing.js", "/web/static/src/core/utils/ui.js", "/web/static/src/core/utils/urls.js", "/web/static/src/core/utils/xml.js", "/web/static/src/public/error_notifications.js", "/web_editor/static/src/js/frontend/loader_loading.js", "/web/static/src/legacy/utils.js", "/web/static/src/legacy/js/owl_compatibility.js", "/web/static/src/legacy/js/services/session.js", "/web/static/src/legacy/js/public/public_env.js", "/web/static/src/legacy/js/public/public_root.js", "/web/static/src/legacy/js/public/public_root_instance.js", "/web/static/src/legacy/js/public/public_widget.js", "/web/static/src/legacy/legacy_promise_error_handler.js", "/web/static/src/legacy/legacy_rpc_error_handler.js", "/web/static/src/legacy/frontend/keyboard_navigation_mixin.js", "/bus/static/src/js/longpolling_bus.js", "/bus/static/src/js/crosstab_bus.js", "/bus/static/src/js/services/bus_service.js", "/web_tour/static/src/js/public/tour_manager.js", "/web_editor/static/src/js/wysiwyg/dialog.js", "/web_editor/static/src/js/frontend/loader.js", "/auth_signup/static/src/js/signup.js", "/portal/static/src/js/portal.js", "/portal/static/src/js/portal_chatter.js", "/portal/static/src/js/portal_composer.js", "/portal/static/src/js/portal_signature.js", "/portal/static/src/js/portal_sidebar.js", "/account/static/src/js/account_portal_sidebar.js", "/payment/static/lib/jquery.payment/jquery.payment.js", "/payment/static/src/js/checkout_form.js", "/payment/static/src/js/manage_form.js", "/payment/static/src/js/payment_form_mixin.js", "/payment/static/src/js/post_processing.js", "/sale/static/src/js/sale_portal_sidebar.js", "/sale/static/src/js/payment_form.js", "/sale_management/static/src/js/sale_management.js", "/purchase/static/src/js/purchase_datetimepicker.js", "/purchase/static/src/js/purchase_portal_sidebar.js", "/project/static/src/js/portal_rating.js", "/auth_totp_portal/static/src/js/totp_frontend.js", "/portal_rating/static/src/js/portal_chatter.js", "/portal_rating/static/src/js/portal_composer.js", "/portal_rating/static/src/js/portal_rating_composer.js", "/web_unsplash/static/src/js/unsplash_beacon.js"], "mappingsvmQA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtjpNA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtCA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5BA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7DA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/UA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1FA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChBA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnFA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnCA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACdA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChlDA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtCA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACpzRA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC3UA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC3EA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AClRA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxrGA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACzrhzrGA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvFA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1BA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC3XA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChWA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9BA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjGA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7DA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtlhBA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC3CA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrIA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxEA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACzBA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACzvOA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9BA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/EA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9CA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjxQA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACthlhJA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9DA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACXA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxHA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACplJA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrnttBA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5IA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnGA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7DA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvvGA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjBA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxDA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5CA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrCA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjxjxaA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9TA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtrBA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpFA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClFA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzrMA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3EA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzothrhrJA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrHA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9FA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChHA;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9BA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACljzJA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrIA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA", "sourcesContent": ["var luxon = (function (exports) {\n  'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _construct(Parent, args, Class) {\n    if (_isNativeReflectConstruct()) {\n      _construct = Reflect.construct;\n    } else {\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) _setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n\n    return _construct.apply(null, arguments);\n  }\n\n  function _isNativeFunction(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n  }\n\n  function _wrapNativeSuper(Class) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n    _wrapNativeSuper = function _wrapNativeSuper(Class) {\n      if (Class === null || !_isNativeFunction(Class)) return Class;\n\n      if (typeof Class !== \"function\") {\n        throw new TypeError(\"Super expression must either be null or a function\");\n      }\n\n      if (typeof _cache !== \"undefined\") {\n        if (_cache.has(Class)) return _cache.get(Class);\n\n        _cache.set(Class, Wrapper);\n      }\n\n      function Wrapper() {\n        return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n      }\n\n      Wrapper.prototype = Object.create(Class.prototype, {\n        constructor: {\n          value: Wrapper,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      return _setPrototypeOf(Wrapper, Class);\n    };\n\n    return _wrapNativeSuper(Class);\n  }\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o) {\n    var i = 0;\n\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    i = o[Symbol.iterator]();\n    return i.next.bind(i);\n  }\n\n  // these aren't really private, but nor are they really useful to document\n\n  /**\n   * @private\n   */\n  var LuxonError = /*#__PURE__*/function (_Error) {\n    _inheritsLoose(LuxonError, _Error);\n\n    function LuxonError() {\n      return _Error.apply(this, arguments) || this;\n    }\n\n    return LuxonError;\n  }( /*#__PURE__*/_wrapNativeSuper(Error));\n  /**\n   * @private\n   */\n\n\n  var InvalidDateTimeError = /*#__PURE__*/function (_LuxonError) {\n    _inheritsLoose(InvalidDateTimeError, _LuxonError);\n\n    function InvalidDateTimeError(reason) {\n      return _LuxonError.call(this, \"Invalid DateTime: \" + reason.toMessage()) || this;\n    }\n\n    return InvalidDateTimeError;\n  }(LuxonError);\n  /**\n   * @private\n   */\n\n  var InvalidIntervalError = /*#__PURE__*/function (_LuxonError2) {\n    _inheritsLoose(InvalidIntervalError, _LuxonError2);\n\n    function InvalidIntervalError(reason) {\n      return _LuxonError2.call(this, \"Invalid Interval: \" + reason.toMessage()) || this;\n    }\n\n    return InvalidIntervalError;\n  }(LuxonError);\n  /**\n   * @private\n   */\n\n  var InvalidDurationError = /*#__PURE__*/function (_LuxonError3) {\n    _inheritsLoose(InvalidDurationError, _LuxonError3);\n\n    function InvalidDurationError(reason) {\n      return _LuxonError3.call(this, \"Invalid Duration: \" + reason.toMessage()) || this;\n    }\n\n    return InvalidDurationError;\n  }(LuxonError);\n  /**\n   * @private\n   */\n\n  var ConflictingSpecificationError = /*#__PURE__*/function (_LuxonError4) {\n    _inheritsLoose(ConflictingSpecificationError, _LuxonError4);\n\n    function ConflictingSpecificationError() {\n      return _LuxonError4.apply(this, arguments) || this;\n    }\n\n    return ConflictingSpecificationError;\n  }(LuxonError);\n  /**\n   * @private\n   */\n\n  var InvalidUnitError = /*#__PURE__*/function (_LuxonError5) {\n    _inheritsLoose(InvalidUnitError, _LuxonError5);\n\n    function InvalidUnitError(unit) {\n      return _LuxonError5.call(this, \"Invalid unit \" + unit) || this;\n    }\n\n    return InvalidUnitError;\n  }(LuxonError);\n  /**\n   * @private\n   */\n\n  var InvalidArgumentError = /*#__PURE__*/function (_LuxonError6) {\n    _inheritsLoose(InvalidArgumentError, _LuxonError6);\n\n    function InvalidArgumentError() {\n      return _LuxonError6.apply(this, arguments) || this;\n    }\n\n    return InvalidArgumentError;\n  }(LuxonError);\n  /**\n   * @private\n   */\n\n  var ZoneIsAbstractError = /*#__PURE__*/function (_LuxonError7) {\n    _inheritsLoose(ZoneIsAbstractError, _LuxonError7);\n\n    function ZoneIsAbstractError() {\n      return _LuxonError7.call(this, \"Zone is an abstract class\") || this;\n    }\n\n    return ZoneIsAbstractError;\n  }(LuxonError);\n\n  /**\n   * @private\n   */\n  var n = \"numeric\",\n      s = \"short\",\n      l = \"long\";\n  var DATE_SHORT = {\n    year: n,\n    month: n,\n    day: n\n  };\n  var DATE_MED = {\n    year: n,\n    month: s,\n    day: n\n  };\n  var DATE_MED_WITH_WEEKDAY = {\n    year: n,\n    month: s,\n    day: n,\n    weekday: s\n  };\n  var DATE_FULL = {\n    year: n,\n    month: l,\n    day: n\n  };\n  var DATE_HUGE = {\n    year: n,\n    month: l,\n    day: n,\n    weekday: l\n  };\n  var TIME_SIMPLE = {\n    hour: n,\n    minute: n\n  };\n  var TIME_WITH_SECONDS = {\n    hour: n,\n    minute: n,\n    second: n\n  };\n  var TIME_WITH_SHORT_OFFSET = {\n    hour: n,\n    minute: n,\n    second: n,\n    timeZoneName: s\n  };\n  var TIME_WITH_LONG_OFFSET = {\n    hour: n,\n    minute: n,\n    second: n,\n    timeZoneName: l\n  };\n  var TIME_24_SIMPLE = {\n    hour: n,\n    minute: n,\n    hour12: false\n  };\n  /**\n   * {@link toLocaleString}; format like '09:30:23', always 24-hour.\n   */\n\n  var TIME_24_WITH_SECONDS = {\n    hour: n,\n    minute: n,\n    second: n,\n    hour12: false\n  };\n  /**\n   * {@link toLocaleString}; format like '09:30:23 EDT', always 24-hour.\n   */\n\n  var TIME_24_WITH_SHORT_OFFSET = {\n    hour: n,\n    minute: n,\n    second: n,\n    hour12: false,\n    timeZoneName: s\n  };\n  /**\n   * {@link toLocaleString}; format like '09:30:23 Eastern Daylight Time', always 24-hour.\n   */\n\n  var TIME_24_WITH_LONG_OFFSET = {\n    hour: n,\n    minute: n,\n    second: n,\n    hour12: false,\n    timeZoneName: l\n  };\n  /**\n   * {@link toLocaleString}; format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.\n   */\n\n  var DATETIME_SHORT = {\n    year: n,\n    month: n,\n    day: n,\n    hour: n,\n    minute: n\n  };\n  /**\n   * {@link toLocaleString}; format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.\n   */\n\n  var DATETIME_SHORT_WITH_SECONDS = {\n    year: n,\n    month: n,\n    day: n,\n    hour: n,\n    minute: n,\n    second: n\n  };\n  var DATETIME_MED = {\n    year: n,\n    month: s,\n    day: n,\n    hour: n,\n    minute: n\n  };\n  var DATETIME_MED_WITH_SECONDS = {\n    year: n,\n    month: s,\n    day: n,\n    hour: n,\n    minute: n,\n    second: n\n  };\n  var DATETIME_MED_WITH_WEEKDAY = {\n    year: n,\n    month: s,\n    day: n,\n    weekday: s,\n    hour: n,\n    minute: n\n  };\n  var DATETIME_FULL = {\n    year: n,\n    month: l,\n    day: n,\n    hour: n,\n    minute: n,\n    timeZoneName: s\n  };\n  var DATETIME_FULL_WITH_SECONDS = {\n    year: n,\n    month: l,\n    day: n,\n    hour: n,\n    minute: n,\n    second: n,\n    timeZoneName: s\n  };\n  var DATETIME_HUGE = {\n    year: n,\n    month: l,\n    day: n,\n    weekday: l,\n    hour: n,\n    minute: n,\n    timeZoneName: l\n  };\n  var DATETIME_HUGE_WITH_SECONDS = {\n    year: n,\n    month: l,\n    day: n,\n    weekday: l,\n    hour: n,\n    minute: n,\n    second: n,\n    timeZoneName: l\n  };\n\n  /*\n    This is just a junk drawer, containing anything used across multiple classes.\n    Because Luxon is small(ish), this should stay small and we won't worry about splitting\n    it up into, say, parsingUtil.js and basicUtil.js and so on. But they are divided up by feature area.\n  */\n  /**\n   * @private\n   */\n  // TYPES\n\n  function isUndefined(o) {\n    return typeof o === \"undefined\";\n  }\n  function isNumber(o) {\n    return typeof o === \"number\";\n  }\n  function isInteger(o) {\n    return typeof o === \"number\" && o % 1 === 0;\n  }\n  function isString(o) {\n    return typeof o === \"string\";\n  }\n  function isDate(o) {\n    return Object.prototype.toString.call(o) === \"[object Date]\";\n  } // CAPABILITIES\n\n  function hasIntl() {\n    try {\n      return typeof Intl !== \"undefined\" && Intl.DateTimeFormat;\n    } catch (e) {\n      return false;\n    }\n  }\n  function hasFormatToParts() {\n    return !isUndefined(Intl.DateTimeFormat.prototype.formatToParts);\n  }\n  function hasRelative() {\n    try {\n      return typeof Intl !== \"undefined\" && !!Intl.RelativeTimeFormat;\n    } catch (e) {\n      return false;\n    }\n  } // OBJECTS AND ARRAYS\n\n  function maybeArray(thing) {\n    return Array.isArray(thing) ? thing : [thing];\n  }\n  function bestBy(arr, by, compare) {\n    if (arr.length === 0) {\n      return undefined;\n    }\n\n    return arr.reduce(function (best, next) {\n      var pair = [by(next), next];\n\n      if (!best) {\n        return pair;\n      } else if (compare(best[0], pair[0]) === best[0]) {\n        return best;\n      } else {\n        return pair;\n      }\n    }, null)[1];\n  }\n  function pick(obj, keys) {\n    return keys.reduce(function (a, k) {\n      a[k] = obj[k];\n      return a;\n    }, {});\n  }\n  function hasOwnProperty(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n  } // NUMBERS AND STRINGS\n\n  function integerBetween(thing, bottom, top) {\n    return isInteger(thing) && thing >= bottom && thing <= top;\n  } // x % n but takes the sign of n instead of x\n\n  function floorMod(x, n) {\n    return x - n * Math.floor(x / n);\n  }\n  function padStart(input, n) {\n    if (n === void 0) {\n      n = 2;\n    }\n\n    if (input.toString().length < n) {\n      return (\"0\".repeat(n) + input).slice(-n);\n    } else {\n      return input.toString();\n    }\n  }\n  function parseInteger(string) {\n    if (isUndefined(string) || string === null || string === \"\") {\n      return undefined;\n    } else {\n      return parseInt(string, 10);\n    }\n  }\n  function parseMillis(fraction) {\n    // Return undefined (instead of 0) in these cases, where fraction is not set\n    if (isUndefined(fraction) || fraction === null || fraction === \"\") {\n      return undefined;\n    } else {\n      var f = parseFloat(\"0.\" + fraction) * 1000;\n      return Math.floor(f);\n    }\n  }\n  function roundTo(number, digits, towardZero) {\n    if (towardZero === void 0) {\n      towardZero = false;\n    }\n\n    var factor = Math.pow(10, digits),\n        rounder = towardZero ? Math.trunc : Math.round;\n    return rounder(number * factor) / factor;\n  } // DATE BASICS\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n  }\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n  function daysInMonth(year, month) {\n    var modMonth = floorMod(month - 1, 12) + 1,\n        modYear = year + (month - modMonth) / 12;\n\n    if (modMonth === 2) {\n      return isLeapYear(modYear) ? 29 : 28;\n    } else {\n      return [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][modMonth - 1];\n    }\n  } // covert a calendar object to a local timestamp (epoch, but with the offset baked in)\n\n  function objToLocalTS(obj) {\n    var d = Date.UTC(obj.year, obj.month - 1, obj.day, obj.hour, obj.minute, obj.second, obj.millisecond); // for legacy reasons, years between 0 and 99 are interpreted as 19XX; revert that\n\n    if (obj.year < 100 && obj.year >= 0) {\n      d = new Date(d);\n      d.setUTCFullYear(d.getUTCFullYear() - 1900);\n    }\n\n    return +d;\n  }\n  function weeksInWeekYear(weekYear) {\n    var p1 = (weekYear + Math.floor(weekYear / 4) - Math.floor(weekYear / 100) + Math.floor(weekYear / 400)) % 7,\n        last = weekYear - 1,\n        p2 = (last + Math.floor(last / 4) - Math.floor(last / 100) + Math.floor(last / 400)) % 7;\n    return p1 === 4 || p2 === 3 ? 53 : 52;\n  }\n  function untruncateYear(year) {\n    if (year > 99) {\n      return year;\n    } else return year > 60 ? 1900 + year : 2000 + year;\n  } // PARSING\n\n  function parseZoneInfo(ts, offsetFormat, locale, timeZone) {\n    if (timeZone === void 0) {\n      timeZone = null;\n    }\n\n    var date = new Date(ts),\n        intlOpts = {\n      hour12: false,\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    };\n\n    if (timeZone) {\n      intlOpts.timeZone = timeZone;\n    }\n\n    var modified = Object.assign({\n      timeZoneName: offsetFormat\n    }, intlOpts),\n        intl = hasIntl();\n\n    if (intl && hasFormatToParts()) {\n      var parsed = new Intl.DateTimeFormat(locale, modified).formatToParts(date).find(function (m) {\n        return m.type.toLowerCase() === \"timezonename\";\n      });\n      return parsed ? parsed.value : null;\n    } else if (intl) {\n      // this probably doesn't work for all locales\n      var without = new Intl.DateTimeFormat(locale, intlOpts).format(date),\n          included = new Intl.DateTimeFormat(locale, modified).format(date),\n          diffed = included.substring(without.length),\n          trimmed = diffed.replace(/^[, \\u200e]+/, \"\");\n      return trimmed;\n    } else {\n      return null;\n    }\n  } // signedOffset('-5', '30') -> -330\n\n  function signedOffset(offHourStr, offMinuteStr) {\n    var offHour = parseInt(offHourStr, 10); // don't || this because we want to preserve -0\n\n    if (Number.isNaN(offHour)) {\n      offHour = 0;\n    }\n\n    var offMin = parseInt(offMinuteStr, 10) || 0,\n        offMinSigned = offHour < 0 || Object.is(offHour, -0) ? -offMin : offMin;\n    return offHour * 60 + offMinSigned;\n  } // COERCION\n\n  function asNumber(value) {\n    var numericValue = Number(value);\n    if (typeof value === \"boolean\" || value === \"\" || Number.isNaN(numericValue)) throw new InvalidArgumentError(\"Invalid unit value \" + value);\n    return numericValue;\n  }\n  function normalizeObject(obj, normalizer, nonUnitKeys) {\n    var normalized = {};\n\n    for (var u in obj) {\n      if (hasOwnProperty(obj, u)) {\n        if (nonUnitKeys.indexOf(u) >= 0) continue;\n        var v = obj[u];\n        if (v === undefined || v === null) continue;\n        normalized[normalizer(u)] = asNumber(v);\n      }\n    }\n\n    return normalized;\n  }\n  function formatOffset(offset, format) {\n    var hours = Math.trunc(Math.abs(offset / 60)),\n        minutes = Math.trunc(Math.abs(offset % 60)),\n        sign = offset >= 0 ? \"+\" : \"-\";\n\n    switch (format) {\n      case \"short\":\n        return \"\" + sign + padStart(hours, 2) + \":\" + padStart(minutes, 2);\n\n      case \"narrow\":\n        return \"\" + sign + hours + (minutes > 0 ? \":\" + minutes : \"\");\n\n      case \"techie\":\n        return \"\" + sign + padStart(hours, 2) + padStart(minutes, 2);\n\n      default:\n        throw new RangeError(\"Value format \" + format + \" is out of range for property format\");\n    }\n  }\n  function timeObject(obj) {\n    return pick(obj, [\"hour\", \"minute\", \"second\", \"millisecond\"]);\n  }\n  var ianaRegex = /[A-Za-z_+-]{1,256}(:?\\/[A-Za-z_+-]{1,256}(\\/[A-Za-z_+-]{1,256})?)?/;\n\n  function stringify(obj) {\n    return JSON.stringify(obj, Object.keys(obj).sort());\n  }\n  /**\n   * @private\n   */\n\n\n  var monthsLong = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  var monthsShort = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  var monthsNarrow = [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"];\n  function months(length) {\n    switch (length) {\n      case \"narrow\":\n        return monthsNarrow;\n\n      case \"short\":\n        return monthsShort;\n\n      case \"long\":\n        return monthsLong;\n\n      case \"numeric\":\n        return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"];\n\n      case \"2-digit\":\n        return [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\n\n      default:\n        return null;\n    }\n  }\n  var weekdaysLong = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n  var weekdaysShort = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n  var weekdaysNarrow = [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"];\n  function weekdays(length) {\n    switch (length) {\n      case \"narrow\":\n        return weekdaysNarrow;\n\n      case \"short\":\n        return weekdaysShort;\n\n      case \"long\":\n        return weekdaysLong;\n\n      case \"numeric\":\n        return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n\n      default:\n        return null;\n    }\n  }\n  var meridiems = [\"AM\", \"PM\"];\n  var erasLong = [\"Before Christ\", \"Anno Domini\"];\n  var erasShort = [\"BC\", \"AD\"];\n  var erasNarrow = [\"B\", \"A\"];\n  function eras(length) {\n    switch (length) {\n      case \"narrow\":\n        return erasNarrow;\n\n      case \"short\":\n        return erasShort;\n\n      case \"long\":\n        return erasLong;\n\n      default:\n        return null;\n    }\n  }\n  function meridiemForDateTime(dt) {\n    return meridiems[dt.hour < 12 ? 0 : 1];\n  }\n  function weekdayForDateTime(dt, length) {\n    return weekdays(length)[dt.weekday - 1];\n  }\n  function monthForDateTime(dt, length) {\n    return months(length)[dt.month - 1];\n  }\n  function eraForDateTime(dt, length) {\n    return eras(length)[dt.year < 0 ? 0 : 1];\n  }\n  function formatRelativeTime(unit, count, numeric, narrow) {\n    if (numeric === void 0) {\n      numeric = \"always\";\n    }\n\n    if (narrow === void 0) {\n      narrow = false;\n    }\n\n    var units = {\n      years: [\"year\", \"yr.\"],\n      quarters: [\"quarter\", \"qtr.\"],\n      months: [\"month\", \"mo.\"],\n      weeks: [\"week\", \"wk.\"],\n      days: [\"day\", \"day\", \"days\"],\n      hours: [\"hour\", \"hr.\"],\n      minutes: [\"minute\", \"min.\"],\n      seconds: [\"second\", \"sec.\"]\n    };\n    var lastable = [\"hours\", \"minutes\", \"seconds\"].indexOf(unit) === -1;\n\n    if (numeric === \"auto\" && lastable) {\n      var isDay = unit === \"days\";\n\n      switch (count) {\n        case 1:\n          return isDay ? \"tomorrow\" : \"next \" + units[unit][0];\n\n        case -1:\n          return isDay ? \"yesterday\" : \"last \" + units[unit][0];\n\n        case 0:\n          return isDay ? \"today\" : \"this \" + units[unit][0];\n\n      }\n    }\n\n    var isInPast = Object.is(count, -0) || count < 0,\n        fmtValue = Math.abs(count),\n        singular = fmtValue === 1,\n        lilUnits = units[unit],\n        fmtUnit = narrow ? singular ? lilUnits[1] : lilUnits[2] || lilUnits[1] : singular ? units[unit][0] : unit;\n    return isInPast ? fmtValue + \" \" + fmtUnit + \" ago\" : \"in \" + fmtValue + \" \" + fmtUnit;\n  }\n  function formatString(knownFormat) {\n    // these all have the offsets removed because we don't have access to them\n    // without all the intl stuff this is backfilling\n    var filtered = pick(knownFormat, [\"weekday\", \"era\", \"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\", \"timeZoneName\", \"hour12\"]),\n        key = stringify(filtered),\n        dateTimeHuge = \"EEEE, LLLL d, yyyy, h:mm a\";\n\n    switch (key) {\n      case stringify(DATE_SHORT):\n        return \"M/d/yyyy\";\n\n      case stringify(DATE_MED):\n        return \"LLL d, yyyy\";\n\n      case stringify(DATE_MED_WITH_WEEKDAY):\n        return \"EEE, LLL d, yyyy\";\n\n      case stringify(DATE_FULL):\n        return \"LLLL d, yyyy\";\n\n      case stringify(DATE_HUGE):\n        return \"EEEE, LLLL d, yyyy\";\n\n      case stringify(TIME_SIMPLE):\n        return \"h:mm a\";\n\n      case stringify(TIME_WITH_SECONDS):\n        return \"h:mm:ss a\";\n\n      case stringify(TIME_WITH_SHORT_OFFSET):\n        return \"h:mm a\";\n\n      case stringify(TIME_WITH_LONG_OFFSET):\n        return \"h:mm a\";\n\n      case stringify(TIME_24_SIMPLE):\n        return \"HH:mm\";\n\n      case stringify(TIME_24_WITH_SECONDS):\n        return \"HH:mm:ss\";\n\n      case stringify(TIME_24_WITH_SHORT_OFFSET):\n        return \"HH:mm\";\n\n      case stringify(TIME_24_WITH_LONG_OFFSET):\n        return \"HH:mm\";\n\n      case stringify(DATETIME_SHORT):\n        return \"M/d/yyyy, h:mm a\";\n\n      case stringify(DATETIME_MED):\n        return \"LLL d, yyyy, h:mm a\";\n\n      case stringify(DATETIME_FULL):\n        return \"LLLL d, yyyy, h:mm a\";\n\n      case stringify(DATETIME_HUGE):\n        return dateTimeHuge;\n\n      case stringify(DATETIME_SHORT_WITH_SECONDS):\n        return \"M/d/yyyy, h:mm:ss a\";\n\n      case stringify(DATETIME_MED_WITH_SECONDS):\n        return \"LLL d, yyyy, h:mm:ss a\";\n\n      case stringify(DATETIME_MED_WITH_WEEKDAY):\n        return \"EEE, d LLL yyyy, h:mm a\";\n\n      case stringify(DATETIME_FULL_WITH_SECONDS):\n        return \"LLLL d, yyyy, h:mm:ss a\";\n\n      case stringify(DATETIME_HUGE_WITH_SECONDS):\n        return \"EEEE, LLLL d, yyyy, h:mm:ss a\";\n\n      default:\n        return dateTimeHuge;\n    }\n  }\n\n  function stringifyTokens(splits, tokenToString) {\n    var s = \"\";\n\n    for (var _iterator = _createForOfIteratorHelperLoose(splits), _step; !(_step = _iterator()).done;) {\n      var token = _step.value;\n\n      if (token.literal) {\n        s += token.val;\n      } else {\n        s += tokenToString(token.val);\n      }\n    }\n\n    return s;\n  }\n\n  var _macroTokenToFormatOpts = {\n    D: DATE_SHORT,\n    DD: DATE_MED,\n    DDD: DATE_FULL,\n    DDDD: DATE_HUGE,\n    t: TIME_SIMPLE,\n    tt: TIME_WITH_SECONDS,\n    ttt: TIME_WITH_SHORT_OFFSET,\n    tttt: TIME_WITH_LONG_OFFSET,\n    T: TIME_24_SIMPLE,\n    TT: TIME_24_WITH_SECONDS,\n    TTT: TIME_24_WITH_SHORT_OFFSET,\n    TTTT: TIME_24_WITH_LONG_OFFSET,\n    f: DATETIME_SHORT,\n    ff: DATETIME_MED,\n    fff: DATETIME_FULL,\n    ffff: DATETIME_HUGE,\n    F: DATETIME_SHORT_WITH_SECONDS,\n    FF: DATETIME_MED_WITH_SECONDS,\n    FFF: DATETIME_FULL_WITH_SECONDS,\n    FFFF: DATETIME_HUGE_WITH_SECONDS\n  };\n  /**\n   * @private\n   */\n\n  var Formatter = /*#__PURE__*/function () {\n    Formatter.create = function create(locale, opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      return new Formatter(locale, opts);\n    };\n\n    Formatter.parseFormat = function parseFormat(fmt) {\n      var current = null,\n          currentFull = \"\",\n          bracketed = false;\n      var splits = [];\n\n      for (var i = 0; i < fmt.length; i++) {\n        var c = fmt.charAt(i);\n\n        if (c === \"'\") {\n          if (currentFull.length > 0) {\n            splits.push({\n              literal: bracketed,\n              val: currentFull\n            });\n          }\n\n          current = null;\n          currentFull = \"\";\n          bracketed = !bracketed;\n        } else if (bracketed) {\n          currentFull += c;\n        } else if (c === current) {\n          currentFull += c;\n        } else {\n          if (currentFull.length > 0) {\n            splits.push({\n              literal: false,\n              val: currentFull\n            });\n          }\n\n          currentFull = c;\n          current = c;\n        }\n      }\n\n      if (currentFull.length > 0) {\n        splits.push({\n          literal: bracketed,\n          val: currentFull\n        });\n      }\n\n      return splits;\n    };\n\n    Formatter.macroTokenToFormatOpts = function macroTokenToFormatOpts(token) {\n      return _macroTokenToFormatOpts[token];\n    };\n\n    function Formatter(locale, formatOpts) {\n      this.opts = formatOpts;\n      this.loc = locale;\n      this.systemLoc = null;\n    }\n\n    var _proto = Formatter.prototype;\n\n    _proto.formatWithSystemDefault = function formatWithSystemDefault(dt, opts) {\n      if (this.systemLoc === null) {\n        this.systemLoc = this.loc.redefaultToSystem();\n      }\n\n      var df = this.systemLoc.dtFormatter(dt, Object.assign({}, this.opts, opts));\n      return df.format();\n    };\n\n    _proto.formatDateTime = function formatDateTime(dt, opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      var df = this.loc.dtFormatter(dt, Object.assign({}, this.opts, opts));\n      return df.format();\n    };\n\n    _proto.formatDateTimeParts = function formatDateTimeParts(dt, opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      var df = this.loc.dtFormatter(dt, Object.assign({}, this.opts, opts));\n      return df.formatToParts();\n    };\n\n    _proto.resolvedOptions = function resolvedOptions(dt, opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      var df = this.loc.dtFormatter(dt, Object.assign({}, this.opts, opts));\n      return df.resolvedOptions();\n    };\n\n    _proto.num = function num(n, p) {\n      if (p === void 0) {\n        p = 0;\n      }\n\n      // we get some perf out of doing this here, annoyingly\n      if (this.opts.forceSimple) {\n        return padStart(n, p);\n      }\n\n      var opts = Object.assign({}, this.opts);\n\n      if (p > 0) {\n        opts.padTo = p;\n      }\n\n      return this.loc.numberFormatter(opts).format(n);\n    };\n\n    _proto.formatDateTimeFromString = function formatDateTimeFromString(dt, fmt) {\n      var _this = this;\n\n      var knownEnglish = this.loc.listingMode() === \"en\",\n          useDateTimeFormatter = this.loc.outputCalendar && this.loc.outputCalendar !== \"gregory\" && hasFormatToParts(),\n          string = function string(opts, extract) {\n        return _this.loc.extract(dt, opts, extract);\n      },\n          formatOffset = function formatOffset(opts) {\n        if (dt.isOffsetFixed && dt.offset === 0 && opts.allowZ) {\n          return \"Z\";\n        }\n\n        return dt.isValid ? dt.zone.formatOffset(dt.ts, opts.format) : \"\";\n      },\n          meridiem = function meridiem() {\n        return knownEnglish ? meridiemForDateTime(dt) : string({\n          hour: \"numeric\",\n          hour12: true\n        }, \"dayperiod\");\n      },\n          month = function month(length, standalone) {\n        return knownEnglish ? monthForDateTime(dt, length) : string(standalone ? {\n          month: length\n        } : {\n          month: length,\n          day: \"numeric\"\n        }, \"month\");\n      },\n          weekday = function weekday(length, standalone) {\n        return knownEnglish ? weekdayForDateTime(dt, length) : string(standalone ? {\n          weekday: length\n        } : {\n          weekday: length,\n          month: \"long\",\n          day: \"numeric\"\n        }, \"weekday\");\n      },\n          maybeMacro = function maybeMacro(token) {\n        var formatOpts = Formatter.macroTokenToFormatOpts(token);\n\n        if (formatOpts) {\n          return _this.formatWithSystemDefault(dt, formatOpts);\n        } else {\n          return token;\n        }\n      },\n          era = function era(length) {\n        return knownEnglish ? eraForDateTime(dt, length) : string({\n          era: length\n        }, \"era\");\n      },\n          tokenToString = function tokenToString(token) {\n        // Where possible: http://cldr.unicode.org/translation/date-time#TOC-Stand-Alone-vs.-Format-Styles\n        switch (token) {\n          // ms\n          case \"S\":\n            return _this.num(dt.millisecond);\n\n          case \"u\": // falls through\n\n          case \"SSS\":\n            return _this.num(dt.millisecond, 3);\n          // seconds\n\n          case \"s\":\n            return _this.num(dt.second);\n\n          case \"ss\":\n            return _this.num(dt.second, 2);\n          // minutes\n\n          case \"m\":\n            return _this.num(dt.minute);\n\n          case \"mm\":\n            return _this.num(dt.minute, 2);\n          // hours\n\n          case \"h\":\n            return _this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12);\n\n          case \"hh\":\n            return _this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12, 2);\n\n          case \"H\":\n            return _this.num(dt.hour);\n\n          case \"HH\":\n            return _this.num(dt.hour, 2);\n          // offset\n\n          case \"Z\":\n            // like +6\n            return formatOffset({\n              format: \"narrow\",\n              allowZ: _this.opts.allowZ\n            });\n\n          case \"ZZ\":\n            // like +06:00\n            return formatOffset({\n              format: \"short\",\n              allowZ: _this.opts.allowZ\n            });\n\n          case \"ZZZ\":\n            // like +0600\n            return formatOffset({\n              format: \"techie\",\n              allowZ: _this.opts.allowZ\n            });\n\n          case \"ZZZZ\":\n            // like EST\n            return dt.zone.offsetName(dt.ts, {\n              format: \"short\",\n              locale: _this.loc.locale\n            });\n\n          case \"ZZZZZ\":\n            // like Eastern Standard Time\n            return dt.zone.offsetName(dt.ts, {\n              format: \"long\",\n              locale: _this.loc.locale\n            });\n          // zone\n\n          case \"z\":\n            // like America/New_York\n            return dt.zoneName;\n          // meridiems\n\n          case \"a\":\n            return meridiem();\n          // dates\n\n          case \"d\":\n            return useDateTimeFormatter ? string({\n              day: \"numeric\"\n            }, \"day\") : _this.num(dt.day);\n\n          case \"dd\":\n            return useDateTimeFormatter ? string({\n              day: \"2-digit\"\n            }, \"day\") : _this.num(dt.day, 2);\n          // weekdays - standalone\n\n          case \"c\":\n            // like 1\n            return _this.num(dt.weekday);\n\n          case \"ccc\":\n            // like 'Tues'\n            return weekday(\"short\", true);\n\n          case \"cccc\":\n            // like 'Tuesday'\n            return weekday(\"long\", true);\n\n          case \"ccccc\":\n            // like 'T'\n            return weekday(\"narrow\", true);\n          // weekdays - format\n\n          case \"E\":\n            // like 1\n            return _this.num(dt.weekday);\n\n          case \"EEE\":\n            // like 'Tues'\n            return weekday(\"short\", false);\n\n          case \"EEEE\":\n            // like 'Tuesday'\n            return weekday(\"long\", false);\n\n          case \"EEEEE\":\n            // like 'T'\n            return weekday(\"narrow\", false);\n          // months - standalone\n\n          case \"L\":\n            // like 1\n            return useDateTimeFormatter ? string({\n              month: \"numeric\",\n              day: \"numeric\"\n            }, \"month\") : _this.num(dt.month);\n\n          case \"LL\":\n            // like 01, doesn't seem to work\n            return useDateTimeFormatter ? string({\n              month: \"2-digit\",\n              day: \"numeric\"\n            }, \"month\") : _this.num(dt.month, 2);\n\n          case \"LLL\":\n            // like Jan\n            return month(\"short\", true);\n\n          case \"LLLL\":\n            // like January\n            return month(\"long\", true);\n\n          case \"LLLLL\":\n            // like J\n            return month(\"narrow\", true);\n          // months - format\n\n          case \"M\":\n            // like 1\n            return useDateTimeFormatter ? string({\n              month: \"numeric\"\n            }, \"month\") : _this.num(dt.month);\n\n          case \"MM\":\n            // like 01\n            return useDateTimeFormatter ? string({\n              month: \"2-digit\"\n            }, \"month\") : _this.num(dt.month, 2);\n\n          case \"MMM\":\n            // like Jan\n            return month(\"short\", false);\n\n          case \"MMMM\":\n            // like January\n            return month(\"long\", false);\n\n          case \"MMMMM\":\n            // like J\n            return month(\"narrow\", false);\n          // years\n\n          case \"y\":\n            // like 2014\n            return useDateTimeFormatter ? string({\n              year: \"numeric\"\n            }, \"year\") : _this.num(dt.year);\n\n          case \"yy\":\n            // like 14\n            return useDateTimeFormatter ? string({\n              year: \"2-digit\"\n            }, \"year\") : _this.num(dt.year.toString().slice(-2), 2);\n\n          case \"yyyy\":\n            // like 0012\n            return useDateTimeFormatter ? string({\n              year: \"numeric\"\n            }, \"year\") : _this.num(dt.year, 4);\n\n          case \"yyyyyy\":\n            // like 000012\n            return useDateTimeFormatter ? string({\n              year: \"numeric\"\n            }, \"year\") : _this.num(dt.year, 6);\n          // eras\n\n          case \"G\":\n            // like AD\n            return era(\"short\");\n\n          case \"GG\":\n            // like Anno Domini\n            return era(\"long\");\n\n          case \"GGGGG\":\n            return era(\"narrow\");\n\n          case \"kk\":\n            return _this.num(dt.weekYear.toString().slice(-2), 2);\n\n          case \"kkkk\":\n            return _this.num(dt.weekYear, 4);\n\n          case \"W\":\n            return _this.num(dt.weekNumber);\n\n          case \"WW\":\n            return _this.num(dt.weekNumber, 2);\n\n          case \"o\":\n            return _this.num(dt.ordinal);\n\n          case \"ooo\":\n            return _this.num(dt.ordinal, 3);\n\n          case \"q\":\n            // like 1\n            return _this.num(dt.quarter);\n\n          case \"qq\":\n            // like 01\n            return _this.num(dt.quarter, 2);\n\n          case \"X\":\n            return _this.num(Math.floor(dt.ts / 1000));\n\n          case \"x\":\n            return _this.num(dt.ts);\n\n          default:\n            return maybeMacro(token);\n        }\n      };\n\n      return stringifyTokens(Formatter.parseFormat(fmt), tokenToString);\n    };\n\n    _proto.formatDurationFromString = function formatDurationFromString(dur, fmt) {\n      var _this2 = this;\n\n      var tokenToField = function tokenToField(token) {\n        switch (token[0]) {\n          case \"S\":\n            return \"millisecond\";\n\n          case \"s\":\n            return \"second\";\n\n          case \"m\":\n            return \"minute\";\n\n          case \"h\":\n            return \"hour\";\n\n          case \"d\":\n            return \"day\";\n\n          case \"M\":\n            return \"month\";\n\n          case \"y\":\n            return \"year\";\n\n          default:\n            return null;\n        }\n      },\n          tokenToString = function tokenToString(lildur) {\n        return function (token) {\n          var mapped = tokenToField(token);\n\n          if (mapped) {\n            return _this2.num(lildur.get(mapped), token.length);\n          } else {\n            return token;\n          }\n        };\n      },\n          tokens = Formatter.parseFormat(fmt),\n          realTokens = tokens.reduce(function (found, _ref) {\n        var literal = _ref.literal,\n            val = _ref.val;\n        return literal ? found : found.concat(val);\n      }, []),\n          collapsed = dur.shiftTo.apply(dur, realTokens.map(tokenToField).filter(function (t) {\n        return t;\n      }));\n\n      return stringifyTokens(tokens, tokenToString(collapsed));\n    };\n\n    return Formatter;\n  }();\n\n  var Invalid = /*#__PURE__*/function () {\n    function Invalid(reason, explanation) {\n      this.reason = reason;\n      this.explanation = explanation;\n    }\n\n    var _proto = Invalid.prototype;\n\n    _proto.toMessage = function toMessage() {\n      if (this.explanation) {\n        return this.reason + \": \" + this.explanation;\n      } else {\n        return this.reason;\n      }\n    };\n\n    return Invalid;\n  }();\n\n  /**\n   * @interface\n   */\n\n  var Zone = /*#__PURE__*/function () {\n    function Zone() {}\n\n    var _proto = Zone.prototype;\n\n    /**\n     * Returns the offset's common name (such as EST) at the specified timestamp\n     * @abstract\n     * @param {number} ts - Epoch milliseconds for which to get the name\n     * @param {Object} opts - Options to affect the format\n     * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.\n     * @param {string} opts.locale - What locale to return the offset name in.\n     * @return {string}\n     */\n    _proto.offsetName = function offsetName(ts, opts) {\n      throw new ZoneIsAbstractError();\n    }\n    /**\n     * Returns the offset's value as a string\n     * @abstract\n     * @param {number} ts - Epoch milliseconds for which to get the offset\n     * @param {string} format - What style of offset to return.\n     *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively\n     * @return {string}\n     */\n    ;\n\n    _proto.formatOffset = function formatOffset(ts, format) {\n      throw new ZoneIsAbstractError();\n    }\n    /**\n     * Return the offset in minutes for this zone at the specified timestamp.\n     * @abstract\n     * @param {number} ts - Epoch milliseconds for which to compute the offset\n     * @return {number}\n     */\n    ;\n\n    _proto.offset = function offset(ts) {\n      throw new ZoneIsAbstractError();\n    }\n    /**\n     * Return whether this Zone is equal to another zone\n     * @abstract\n     * @param {Zone} otherZone - the zone to compare\n     * @return {boolean}\n     */\n    ;\n\n    _proto.equals = function equals(otherZone) {\n      throw new ZoneIsAbstractError();\n    }\n    /**\n     * Return whether this Zone is valid.\n     * @abstract\n     * @type {boolean}\n     */\n    ;\n\n    _createClass(Zone, [{\n      key: \"type\",\n\n      /**\n       * The type of zone\n       * @abstract\n       * @type {string}\n       */\n      get: function get() {\n        throw new ZoneIsAbstractError();\n      }\n      /**\n       * The name of this zone.\n       * @abstract\n       * @type {string}\n       */\n\n    }, {\n      key: \"name\",\n      get: function get() {\n        throw new ZoneIsAbstractError();\n      }\n      /**\n       * Returns whether the offset is known to be fixed for the whole year.\n       * @abstract\n       * @type {boolean}\n       */\n\n    }, {\n      key: \"universal\",\n      get: function get() {\n        throw new ZoneIsAbstractError();\n      }\n    }, {\n      key: \"isValid\",\n      get: function get() {\n        throw new ZoneIsAbstractError();\n      }\n    }]);\n\n    return Zone;\n  }();\n\n  var singleton = null;\n  /**\n   * Represents the local zone for this Javascript environment.\n   * @implements {Zone}\n   */\n\n  var LocalZone = /*#__PURE__*/function (_Zone) {\n    _inheritsLoose(LocalZone, _Zone);\n\n    function LocalZone() {\n      return _Zone.apply(this, arguments) || this;\n    }\n\n    var _proto = LocalZone.prototype;\n\n    /** @override **/\n    _proto.offsetName = function offsetName(ts, _ref) {\n      var format = _ref.format,\n          locale = _ref.locale;\n      return parseZoneInfo(ts, format, locale);\n    }\n    /** @override **/\n    ;\n\n    _proto.formatOffset = function formatOffset$1(ts, format) {\n      return formatOffset(this.offset(ts), format);\n    }\n    /** @override **/\n    ;\n\n    _proto.offset = function offset(ts) {\n      return -new Date(ts).getTimezoneOffset();\n    }\n    /** @override **/\n    ;\n\n    _proto.equals = function equals(otherZone) {\n      return otherZone.type === \"local\";\n    }\n    /** @override **/\n    ;\n\n    _createClass(LocalZone, [{\n      key: \"type\",\n\n      /** @override **/\n      get: function get() {\n        return \"local\";\n      }\n      /** @override **/\n\n    }, {\n      key: \"name\",\n      get: function get() {\n        if (hasIntl()) {\n          return new Intl.DateTimeFormat().resolvedOptions().timeZone;\n        } else return \"local\";\n      }\n      /** @override **/\n\n    }, {\n      key: \"universal\",\n      get: function get() {\n        return false;\n      }\n    }, {\n      key: \"isValid\",\n      get: function get() {\n        return true;\n      }\n    }], [{\n      key: \"instance\",\n\n      /**\n       * Get a singleton instance of the local zone\n       * @return {LocalZone}\n       */\n      get: function get() {\n        if (singleton === null) {\n          singleton = new LocalZone();\n        }\n\n        return singleton;\n      }\n    }]);\n\n    return LocalZone;\n  }(Zone);\n\n  var matchingRegex = RegExp(\"^\" + ianaRegex.source + \"$\");\n  var dtfCache = {};\n\n  function makeDTF(zone) {\n    if (!dtfCache[zone]) {\n      dtfCache[zone] = new Intl.DateTimeFormat(\"en-US\", {\n        hour12: false,\n        timeZone: zone,\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\"\n      });\n    }\n\n    return dtfCache[zone];\n  }\n\n  var typeToPos = {\n    year: 0,\n    month: 1,\n    day: 2,\n    hour: 3,\n    minute: 4,\n    second: 5\n  };\n\n  function hackyOffset(dtf, date) {\n    var formatted = dtf.format(date).replace(/\\u200E/g, \"\"),\n        parsed = /(\\d+)\\/(\\d+)\\/(\\d+),? (\\d+):(\\d+):(\\d+)/.exec(formatted),\n        fMonth = parsed[1],\n        fDay = parsed[2],\n        fYear = parsed[3],\n        fHour = parsed[4],\n        fMinute = parsed[5],\n        fSecond = parsed[6];\n    return [fYear, fMonth, fDay, fHour, fMinute, fSecond];\n  }\n\n  function partsOffset(dtf, date) {\n    var formatted = dtf.formatToParts(date),\n        filled = [];\n\n    for (var i = 0; i < formatted.length; i++) {\n      var _formatted$i = formatted[i],\n          type = _formatted$i.type,\n          value = _formatted$i.value,\n          pos = typeToPos[type];\n\n      if (!isUndefined(pos)) {\n        filled[pos] = parseInt(value, 10);\n      }\n    }\n\n    return filled;\n  }\n\n  var ianaZoneCache = {};\n  /**\n   * A zone identified by an IANA identifier, like America/New_York\n   * @implements {Zone}\n   */\n\n  var IANAZone = /*#__PURE__*/function (_Zone) {\n    _inheritsLoose(IANAZone, _Zone);\n\n    /**\n     * @param {string} name - Zone name\n     * @return {IANAZone}\n     */\n    IANAZone.create = function create(name) {\n      if (!ianaZoneCache[name]) {\n        ianaZoneCache[name] = new IANAZone(name);\n      }\n\n      return ianaZoneCache[name];\n    }\n    /**\n     * Reset local caches. Should only be necessary in testing scenarios.\n     * @return {void}\n     */\n    ;\n\n    IANAZone.resetCache = function resetCache() {\n      ianaZoneCache = {};\n      dtfCache = {};\n    }\n    /**\n     * Returns whether the provided string is a valid specifier. This only checks the string's format, not that the specifier identifies a known zone; see isValidZone for that.\n     * @param {string} s - The string to check validity on\n     * @example IANAZone.isValidSpecifier(\"America/New_York\") //=> true\n     * @example IANAZone.isValidSpecifier(\"Fantasia/Castle\") //=> true\n     * @example IANAZone.isValidSpecifier(\"Sport~~blorp\") //=> false\n     * @return {boolean}\n     */\n    ;\n\n    IANAZone.isValidSpecifier = function isValidSpecifier(s) {\n      return !!(s && s.match(matchingRegex));\n    }\n    /**\n     * Returns whether the provided string identifies a real zone\n     * @param {string} zone - The string to check\n     * @example IANAZone.isValidZone(\"America/New_York\") //=> true\n     * @example IANAZone.isValidZone(\"Fantasia/Castle\") //=> false\n     * @example IANAZone.isValidZone(\"Sport~~blorp\") //=> false\n     * @return {boolean}\n     */\n    ;\n\n    IANAZone.isValidZone = function isValidZone(zone) {\n      try {\n        new Intl.DateTimeFormat(\"en-US\", {\n          timeZone: zone\n        }).format();\n        return true;\n      } catch (e) {\n        return false;\n      }\n    } // Etc/GMT+8 -> -480\n\n    /** @ignore */\n    ;\n\n    IANAZone.parseGMTOffset = function parseGMTOffset(specifier) {\n      if (specifier) {\n        var match = specifier.match(/^Etc\\/GMT([+-]\\d{1,2})$/i);\n\n        if (match) {\n          return -60 * parseInt(match[1]);\n        }\n      }\n\n      return null;\n    };\n\n    function IANAZone(name) {\n      var _this;\n\n      _this = _Zone.call(this) || this;\n      /** @private **/\n\n      _this.zoneName = name;\n      /** @private **/\n\n      _this.valid = IANAZone.isValidZone(name);\n      return _this;\n    }\n    /** @override **/\n\n\n    var _proto = IANAZone.prototype;\n\n    /** @override **/\n    _proto.offsetName = function offsetName(ts, _ref) {\n      var format = _ref.format,\n          locale = _ref.locale;\n      return parseZoneInfo(ts, format, locale, this.name);\n    }\n    /** @override **/\n    ;\n\n    _proto.formatOffset = function formatOffset$1(ts, format) {\n      return formatOffset(this.offset(ts), format);\n    }\n    /** @override **/\n    ;\n\n    _proto.offset = function offset(ts) {\n      var date = new Date(ts),\n          dtf = makeDTF(this.name),\n          _ref2 = dtf.formatToParts ? partsOffset(dtf, date) : hackyOffset(dtf, date),\n          year = _ref2[0],\n          month = _ref2[1],\n          day = _ref2[2],\n          hour = _ref2[3],\n          minute = _ref2[4],\n          second = _ref2[5],\n          adjustedHour = hour === 24 ? 0 : hour;\n\n      var asUTC = objToLocalTS({\n        year: year,\n        month: month,\n        day: day,\n        hour: adjustedHour,\n        minute: minute,\n        second: second,\n        millisecond: 0\n      });\n      var asTS = +date;\n      var over = asTS % 1000;\n      asTS -= over >= 0 ? over : 1000 + over;\n      return (asUTC - asTS) / (60 * 1000);\n    }\n    /** @override **/\n    ;\n\n    _proto.equals = function equals(otherZone) {\n      return otherZone.type === \"iana\" && otherZone.name === this.name;\n    }\n    /** @override **/\n    ;\n\n    _createClass(IANAZone, [{\n      key: \"type\",\n      get: function get() {\n        return \"iana\";\n      }\n      /** @override **/\n\n    }, {\n      key: \"name\",\n      get: function get() {\n        return this.zoneName;\n      }\n      /** @override **/\n\n    }, {\n      key: \"universal\",\n      get: function get() {\n        return false;\n      }\n    }, {\n      key: \"isValid\",\n      get: function get() {\n        return this.valid;\n      }\n    }]);\n\n    return IANAZone;\n  }(Zone);\n\n  var singleton$1 = null;\n  /**\n   * A zone with a fixed offset (meaning no DST)\n   * @implements {Zone}\n   */\n\n  var FixedOffsetZone = /*#__PURE__*/function (_Zone) {\n    _inheritsLoose(FixedOffsetZone, _Zone);\n\n    /**\n     * Get an instance with a specified offset\n     * @param {number} offset - The offset in minutes\n     * @return {FixedOffsetZone}\n     */\n    FixedOffsetZone.instance = function instance(offset) {\n      return offset === 0 ? FixedOffsetZone.utcInstance : new FixedOffsetZone(offset);\n    }\n    /**\n     * Get an instance of FixedOffsetZone from a UTC offset string, like \"UTC+6\"\n     * @param {string} s - The offset string to parse\n     * @example FixedOffsetZone.parseSpecifier(\"UTC+6\")\n     * @example FixedOffsetZone.parseSpecifier(\"UTC+06\")\n     * @example FixedOffsetZone.parseSpecifier(\"UTC-6:00\")\n     * @return {FixedOffsetZone}\n     */\n    ;\n\n    FixedOffsetZone.parseSpecifier = function parseSpecifier(s) {\n      if (s) {\n        var r = s.match(/^utc(?:([+-]\\d{1,2})(?::(\\d{2}))?)?$/i);\n\n        if (r) {\n          return new FixedOffsetZone(signedOffset(r[1], r[2]));\n        }\n      }\n\n      return null;\n    };\n\n    _createClass(FixedOffsetZone, null, [{\n      key: \"utcInstance\",\n\n      /**\n       * Get a singleton instance of UTC\n       * @return {FixedOffsetZone}\n       */\n      get: function get() {\n        if (singleton$1 === null) {\n          singleton$1 = new FixedOffsetZone(0);\n        }\n\n        return singleton$1;\n      }\n    }]);\n\n    function FixedOffsetZone(offset) {\n      var _this;\n\n      _this = _Zone.call(this) || this;\n      /** @private **/\n\n      _this.fixed = offset;\n      return _this;\n    }\n    /** @override **/\n\n\n    var _proto = FixedOffsetZone.prototype;\n\n    /** @override **/\n    _proto.offsetName = function offsetName() {\n      return this.name;\n    }\n    /** @override **/\n    ;\n\n    _proto.formatOffset = function formatOffset$1(ts, format) {\n      return formatOffset(this.fixed, format);\n    }\n    /** @override **/\n    ;\n\n    /** @override **/\n    _proto.offset = function offset() {\n      return this.fixed;\n    }\n    /** @override **/\n    ;\n\n    _proto.equals = function equals(otherZone) {\n      return otherZone.type === \"fixed\" && otherZone.fixed === this.fixed;\n    }\n    /** @override **/\n    ;\n\n    _createClass(FixedOffsetZone, [{\n      key: \"type\",\n      get: function get() {\n        return \"fixed\";\n      }\n      /** @override **/\n\n    }, {\n      key: \"name\",\n      get: function get() {\n        return this.fixed === 0 ? \"UTC\" : \"UTC\" + formatOffset(this.fixed, \"narrow\");\n      }\n    }, {\n      key: \"universal\",\n      get: function get() {\n        return true;\n      }\n    }, {\n      key: \"isValid\",\n      get: function get() {\n        return true;\n      }\n    }]);\n\n    return FixedOffsetZone;\n  }(Zone);\n\n  /**\n   * A zone that failed to parse. You should never need to instantiate this.\n   * @implements {Zone}\n   */\n\n  var InvalidZone = /*#__PURE__*/function (_Zone) {\n    _inheritsLoose(InvalidZone, _Zone);\n\n    function InvalidZone(zoneName) {\n      var _this;\n\n      _this = _Zone.call(this) || this;\n      /**  @private */\n\n      _this.zoneName = zoneName;\n      return _this;\n    }\n    /** @override **/\n\n\n    var _proto = InvalidZone.prototype;\n\n    /** @override **/\n    _proto.offsetName = function offsetName() {\n      return null;\n    }\n    /** @override **/\n    ;\n\n    _proto.formatOffset = function formatOffset() {\n      return \"\";\n    }\n    /** @override **/\n    ;\n\n    _proto.offset = function offset() {\n      return NaN;\n    }\n    /** @override **/\n    ;\n\n    _proto.equals = function equals() {\n      return false;\n    }\n    /** @override **/\n    ;\n\n    _createClass(InvalidZone, [{\n      key: \"type\",\n      get: function get() {\n        return \"invalid\";\n      }\n      /** @override **/\n\n    }, {\n      key: \"name\",\n      get: function get() {\n        return this.zoneName;\n      }\n      /** @override **/\n\n    }, {\n      key: \"universal\",\n      get: function get() {\n        return false;\n      }\n    }, {\n      key: \"isValid\",\n      get: function get() {\n        return false;\n      }\n    }]);\n\n    return InvalidZone;\n  }(Zone);\n\n  /**\n   * @private\n   */\n  function normalizeZone(input, defaultZone) {\n    var offset;\n\n    if (isUndefined(input) || input === null) {\n      return defaultZone;\n    } else if (input instanceof Zone) {\n      return input;\n    } else if (isString(input)) {\n      var lowered = input.toLowerCase();\n      if (lowered === \"local\") return defaultZone;else if (lowered === \"utc\" || lowered === \"gmt\") return FixedOffsetZone.utcInstance;else if ((offset = IANAZone.parseGMTOffset(input)) != null) {\n        // handle Etc/GMT-4, which V8 chokes on\n        return FixedOffsetZone.instance(offset);\n      } else if (IANAZone.isValidSpecifier(lowered)) return IANAZone.create(input);else return FixedOffsetZone.parseSpecifier(lowered) || new InvalidZone(input);\n    } else if (isNumber(input)) {\n      return FixedOffsetZone.instance(input);\n    } else if (typeof input === \"object\" && input.offset && typeof input.offset === \"number\") {\n      // This is dumb, but the instanceof check above doesn't seem to really work\n      // so we're duck checking it\n      return input;\n    } else {\n      return new InvalidZone(input);\n    }\n  }\n\n  var now = function now() {\n    return Date.now();\n  },\n      defaultZone = null,\n      // not setting this directly to LocalZone.instance bc loading order issues\n  defaultLocale = null,\n      defaultNumberingSystem = null,\n      defaultOutputCalendar = null,\n      throwOnInvalid = false;\n  /**\n   * Settings contains static getters and setters that control Luxon's overall behavior. Luxon is a simple library with few options, but the ones it does have live here.\n   */\n\n\n  var Settings = /*#__PURE__*/function () {\n    function Settings() {}\n\n    /**\n     * Reset Luxon's global caches. Should only be necessary in testing scenarios.\n     * @return {void}\n     */\n    Settings.resetCaches = function resetCaches() {\n      Locale.resetCache();\n      IANAZone.resetCache();\n    };\n\n    _createClass(Settings, null, [{\n      key: \"now\",\n\n      /**\n       * Get the callback for returning the current timestamp.\n       * @type {function}\n       */\n      get: function get() {\n        return now;\n      }\n      /**\n       * Set the callback for returning the current timestamp.\n       * The function should return a number, which will be interpreted as an Epoch millisecond count\n       * @type {function}\n       * @example Settings.now = () => Date.now() + 3000 // pretend it is 3 seconds in the future\n       * @example Settings.now = () => 0 // always pretend it's Jan 1, 1970 at midnight in UTC time\n       */\n      ,\n      set: function set(n) {\n        now = n;\n      }\n      /**\n       * Get the default time zone to create DateTimes in.\n       * @type {string}\n       */\n\n    }, {\n      key: \"defaultZoneName\",\n      get: function get() {\n        return Settings.defaultZone.name;\n      }\n      /**\n       * Set the default time zone to create DateTimes in. Does not affect existing instances.\n       * @type {string}\n       */\n      ,\n      set: function set(z) {\n        if (!z) {\n          defaultZone = null;\n        } else {\n          defaultZone = normalizeZone(z);\n        }\n      }\n      /**\n       * Get the default time zone object to create DateTimes in. Does not affect existing instances.\n       * @type {Zone}\n       */\n\n    }, {\n      key: \"defaultZone\",\n      get: function get() {\n        return defaultZone || LocalZone.instance;\n      }\n      /**\n       * Get the default locale to create DateTimes with. Does not affect existing instances.\n       * @type {string}\n       */\n\n    }, {\n      key: \"defaultLocale\",\n      get: function get() {\n        return defaultLocale;\n      }\n      /**\n       * Set the default locale to create DateTimes with. Does not affect existing instances.\n       * @type {string}\n       */\n      ,\n      set: function set(locale) {\n        defaultLocale = locale;\n      }\n      /**\n       * Get the default numbering system to create DateTimes with. Does not affect existing instances.\n       * @type {string}\n       */\n\n    }, {\n      key: \"defaultNumberingSystem\",\n      get: function get() {\n        return defaultNumberingSystem;\n      }\n      /**\n       * Set the default numbering system to create DateTimes with. Does not affect existing instances.\n       * @type {string}\n       */\n      ,\n      set: function set(numberingSystem) {\n        defaultNumberingSystem = numberingSystem;\n      }\n      /**\n       * Get the default output calendar to create DateTimes with. Does not affect existing instances.\n       * @type {string}\n       */\n\n    }, {\n      key: \"defaultOutputCalendar\",\n      get: function get() {\n        return defaultOutputCalendar;\n      }\n      /**\n       * Set the default output calendar to create DateTimes with. Does not affect existing instances.\n       * @type {string}\n       */\n      ,\n      set: function set(outputCalendar) {\n        defaultOutputCalendar = outputCalendar;\n      }\n      /**\n       * Get whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals\n       * @type {boolean}\n       */\n\n    }, {\n      key: \"throwOnInvalid\",\n      get: function get() {\n        return throwOnInvalid;\n      }\n      /**\n       * Set whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals\n       * @type {boolean}\n       */\n      ,\n      set: function set(t) {\n        throwOnInvalid = t;\n      }\n    }]);\n\n    return Settings;\n  }();\n\n  var intlDTCache = {};\n\n  function getCachedDTF(locString, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var key = JSON.stringify([locString, opts]);\n    var dtf = intlDTCache[key];\n\n    if (!dtf) {\n      dtf = new Intl.DateTimeFormat(locString, opts);\n      intlDTCache[key] = dtf;\n    }\n\n    return dtf;\n  }\n\n  var intlNumCache = {};\n\n  function getCachedINF(locString, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var key = JSON.stringify([locString, opts]);\n    var inf = intlNumCache[key];\n\n    if (!inf) {\n      inf = new Intl.NumberFormat(locString, opts);\n      intlNumCache[key] = inf;\n    }\n\n    return inf;\n  }\n\n  var intlRelCache = {};\n\n  function getCachedRTF(locString, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var _opts = opts,\n        base = _opts.base,\n        cacheKeyOpts = _objectWithoutPropertiesLoose(_opts, [\"base\"]); // exclude `base` from the options\n\n\n    var key = JSON.stringify([locString, cacheKeyOpts]);\n    var inf = intlRelCache[key];\n\n    if (!inf) {\n      inf = new Intl.RelativeTimeFormat(locString, opts);\n      intlRelCache[key] = inf;\n    }\n\n    return inf;\n  }\n\n  var sysLocaleCache = null;\n\n  function systemLocale() {\n    if (sysLocaleCache) {\n      return sysLocaleCache;\n    } else if (hasIntl()) {\n      var computedSys = new Intl.DateTimeFormat().resolvedOptions().locale; // node sometimes defaults to \"und\". Override that because that is dumb\n\n      sysLocaleCache = !computedSys || computedSys === \"und\" ? \"en-US\" : computedSys;\n      return sysLocaleCache;\n    } else {\n      sysLocaleCache = \"en-US\";\n      return sysLocaleCache;\n    }\n  }\n\n  function parseLocaleString(localeStr) {\n    // I really want to avoid writing a BCP 47 parser\n    // see, e.g. https://github.com/wooorm/bcp-47\n    // Instead, we'll do this:\n    // a) if the string has no -u extensions, just leave it alone\n    // b) if it does, use Intl to resolve everything\n    // c) if Intl fails, try again without the -u\n    var uIndex = localeStr.indexOf(\"-u-\");\n\n    if (uIndex === -1) {\n      return [localeStr];\n    } else {\n      var options;\n      var smaller = localeStr.substring(0, uIndex);\n\n      try {\n        options = getCachedDTF(localeStr).resolvedOptions();\n      } catch (e) {\n        options = getCachedDTF(smaller).resolvedOptions();\n      }\n\n      var _options = options,\n          numberingSystem = _options.numberingSystem,\n          calendar = _options.calendar; // return the smaller one so that we can append the calendar and numbering overrides to it\n\n      return [smaller, numberingSystem, calendar];\n    }\n  }\n\n  function intlConfigString(localeStr, numberingSystem, outputCalendar) {\n    if (hasIntl()) {\n      if (outputCalendar || numberingSystem) {\n        localeStr += \"-u\";\n\n        if (outputCalendar) {\n          localeStr += \"-ca-\" + outputCalendar;\n        }\n\n        if (numberingSystem) {\n          localeStr += \"-nu-\" + numberingSystem;\n        }\n\n        return localeStr;\n      } else {\n        return localeStr;\n      }\n    } else {\n      return [];\n    }\n  }\n\n  function mapMonths(f) {\n    var ms = [];\n\n    for (var i = 1; i <= 12; i++) {\n      var dt = DateTime.utc(2016, i, 1);\n      ms.push(f(dt));\n    }\n\n    return ms;\n  }\n\n  function mapWeekdays(f) {\n    var ms = [];\n\n    for (var i = 1; i <= 7; i++) {\n      var dt = DateTime.utc(2016, 11, 13 + i);\n      ms.push(f(dt));\n    }\n\n    return ms;\n  }\n\n  function listStuff(loc, length, defaultOK, englishFn, intlFn) {\n    var mode = loc.listingMode(defaultOK);\n\n    if (mode === \"error\") {\n      return null;\n    } else if (mode === \"en\") {\n      return englishFn(length);\n    } else {\n      return intlFn(length);\n    }\n  }\n\n  function supportsFastNumbers(loc) {\n    if (loc.numberingSystem && loc.numberingSystem !== \"latn\") {\n      return false;\n    } else {\n      return loc.numberingSystem === \"latn\" || !loc.locale || loc.locale.startsWith(\"en\") || hasIntl() && new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem === \"latn\";\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  var PolyNumberFormatter = /*#__PURE__*/function () {\n    function PolyNumberFormatter(intl, forceSimple, opts) {\n      this.padTo = opts.padTo || 0;\n      this.floor = opts.floor || false;\n\n      if (!forceSimple && hasIntl()) {\n        var intlOpts = {\n          useGrouping: false\n        };\n        if (opts.padTo > 0) intlOpts.minimumIntegerDigits = opts.padTo;\n        this.inf = getCachedINF(intl, intlOpts);\n      }\n    }\n\n    var _proto = PolyNumberFormatter.prototype;\n\n    _proto.format = function format(i) {\n      if (this.inf) {\n        var fixed = this.floor ? Math.floor(i) : i;\n        return this.inf.format(fixed);\n      } else {\n        // to match the browser's numberformatter defaults\n        var _fixed = this.floor ? Math.floor(i) : roundTo(i, 3);\n\n        return padStart(_fixed, this.padTo);\n      }\n    };\n\n    return PolyNumberFormatter;\n  }();\n  /**\n   * @private\n   */\n\n\n  var PolyDateFormatter = /*#__PURE__*/function () {\n    function PolyDateFormatter(dt, intl, opts) {\n      this.opts = opts;\n      this.hasIntl = hasIntl();\n      var z;\n\n      if (dt.zone.universal && this.hasIntl) {\n        // Chromium doesn't support fixed-offset zones like Etc/GMT+8 in its formatter,\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=364374.\n        // So we have to make do. Two cases:\n        // 1. The format options tell us to show the zone. We can't do that, so the best\n        // we can do is format the date in UTC.\n        // 2. The format options don't tell us to show the zone. Then we can adjust them\n        // the time and tell the formatter to show it to us in UTC, so that the time is right\n        // and the bad zone doesn't show up.\n        // We can clean all this up when Chrome fixes this.\n        z = \"UTC\";\n\n        if (opts.timeZoneName) {\n          this.dt = dt;\n        } else {\n          this.dt = dt.offset === 0 ? dt : DateTime.fromMillis(dt.ts + dt.offset * 60 * 1000);\n        }\n      } else if (dt.zone.type === \"local\") {\n        this.dt = dt;\n      } else {\n        this.dt = dt;\n        z = dt.zone.name;\n      }\n\n      if (this.hasIntl) {\n        var intlOpts = Object.assign({}, this.opts);\n\n        if (z) {\n          intlOpts.timeZone = z;\n        }\n\n        this.dtf = getCachedDTF(intl, intlOpts);\n      }\n    }\n\n    var _proto2 = PolyDateFormatter.prototype;\n\n    _proto2.format = function format() {\n      if (this.hasIntl) {\n        return this.dtf.format(this.dt.toJSDate());\n      } else {\n        var tokenFormat = formatString(this.opts),\n            loc = Locale.create(\"en-US\");\n        return Formatter.create(loc).formatDateTimeFromString(this.dt, tokenFormat);\n      }\n    };\n\n    _proto2.formatToParts = function formatToParts() {\n      if (this.hasIntl && hasFormatToParts()) {\n        return this.dtf.formatToParts(this.dt.toJSDate());\n      } else {\n        // This is kind of a cop out. We actually could do this for English. However, we couldn't do it for intl strings\n        // and IMO it's too weird to have an uncanny valley like that\n        return [];\n      }\n    };\n\n    _proto2.resolvedOptions = function resolvedOptions() {\n      if (this.hasIntl) {\n        return this.dtf.resolvedOptions();\n      } else {\n        return {\n          locale: \"en-US\",\n          numberingSystem: \"latn\",\n          outputCalendar: \"gregory\"\n        };\n      }\n    };\n\n    return PolyDateFormatter;\n  }();\n  /**\n   * @private\n   */\n\n\n  var PolyRelFormatter = /*#__PURE__*/function () {\n    function PolyRelFormatter(intl, isEnglish, opts) {\n      this.opts = Object.assign({\n        style: \"long\"\n      }, opts);\n\n      if (!isEnglish && hasRelative()) {\n        this.rtf = getCachedRTF(intl, opts);\n      }\n    }\n\n    var _proto3 = PolyRelFormatter.prototype;\n\n    _proto3.format = function format(count, unit) {\n      if (this.rtf) {\n        return this.rtf.format(count, unit);\n      } else {\n        return formatRelativeTime(unit, count, this.opts.numeric, this.opts.style !== \"long\");\n      }\n    };\n\n    _proto3.formatToParts = function formatToParts(count, unit) {\n      if (this.rtf) {\n        return this.rtf.formatToParts(count, unit);\n      } else {\n        return [];\n      }\n    };\n\n    return PolyRelFormatter;\n  }();\n  /**\n   * @private\n   */\n\n\n  var Locale = /*#__PURE__*/function () {\n    Locale.fromOpts = function fromOpts(opts) {\n      return Locale.create(opts.locale, opts.numberingSystem, opts.outputCalendar, opts.defaultToEN);\n    };\n\n    Locale.create = function create(locale, numberingSystem, outputCalendar, defaultToEN) {\n      if (defaultToEN === void 0) {\n        defaultToEN = false;\n      }\n\n      var specifiedLocale = locale || Settings.defaultLocale,\n          // the system locale is useful for human readable strings but annoying for parsing/formatting known formats\n      localeR = specifiedLocale || (defaultToEN ? \"en-US\" : systemLocale()),\n          numberingSystemR = numberingSystem || Settings.defaultNumberingSystem,\n          outputCalendarR = outputCalendar || Settings.defaultOutputCalendar;\n      return new Locale(localeR, numberingSystemR, outputCalendarR, specifiedLocale);\n    };\n\n    Locale.resetCache = function resetCache() {\n      sysLocaleCache = null;\n      intlDTCache = {};\n      intlNumCache = {};\n      intlRelCache = {};\n    };\n\n    Locale.fromObject = function fromObject(_temp) {\n      var _ref = _temp === void 0 ? {} : _temp,\n          locale = _ref.locale,\n          numberingSystem = _ref.numberingSystem,\n          outputCalendar = _ref.outputCalendar;\n\n      return Locale.create(locale, numberingSystem, outputCalendar);\n    };\n\n    function Locale(locale, numbering, outputCalendar, specifiedLocale) {\n      var _parseLocaleString = parseLocaleString(locale),\n          parsedLocale = _parseLocaleString[0],\n          parsedNumberingSystem = _parseLocaleString[1],\n          parsedOutputCalendar = _parseLocaleString[2];\n\n      this.locale = parsedLocale;\n      this.numberingSystem = numbering || parsedNumberingSystem || null;\n      this.outputCalendar = outputCalendar || parsedOutputCalendar || null;\n      this.intl = intlConfigString(this.locale, this.numberingSystem, this.outputCalendar);\n      this.weekdaysCache = {\n        format: {},\n        standalone: {}\n      };\n      this.monthsCache = {\n        format: {},\n        standalone: {}\n      };\n      this.meridiemCache = null;\n      this.eraCache = {};\n      this.specifiedLocale = specifiedLocale;\n      this.fastNumbersCached = null;\n    }\n\n    var _proto4 = Locale.prototype;\n\n    _proto4.listingMode = function listingMode(defaultOK) {\n      if (defaultOK === void 0) {\n        defaultOK = true;\n      }\n\n      var intl = hasIntl(),\n          hasFTP = intl && hasFormatToParts(),\n          isActuallyEn = this.isEnglish(),\n          hasNoWeirdness = (this.numberingSystem === null || this.numberingSystem === \"latn\") && (this.outputCalendar === null || this.outputCalendar === \"gregory\");\n\n      if (!hasFTP && !(isActuallyEn && hasNoWeirdness) && !defaultOK) {\n        return \"error\";\n      } else if (!hasFTP || isActuallyEn && hasNoWeirdness) {\n        return \"en\";\n      } else {\n        return \"intl\";\n      }\n    };\n\n    _proto4.clone = function clone(alts) {\n      if (!alts || Object.getOwnPropertyNames(alts).length === 0) {\n        return this;\n      } else {\n        return Locale.create(alts.locale || this.specifiedLocale, alts.numberingSystem || this.numberingSystem, alts.outputCalendar || this.outputCalendar, alts.defaultToEN || false);\n      }\n    };\n\n    _proto4.redefaultToEN = function redefaultToEN(alts) {\n      if (alts === void 0) {\n        alts = {};\n      }\n\n      return this.clone(Object.assign({}, alts, {\n        defaultToEN: true\n      }));\n    };\n\n    _proto4.redefaultToSystem = function redefaultToSystem(alts) {\n      if (alts === void 0) {\n        alts = {};\n      }\n\n      return this.clone(Object.assign({}, alts, {\n        defaultToEN: false\n      }));\n    };\n\n    _proto4.months = function months$1(length, format, defaultOK) {\n      var _this = this;\n\n      if (format === void 0) {\n        format = false;\n      }\n\n      if (defaultOK === void 0) {\n        defaultOK = true;\n      }\n\n      return listStuff(this, length, defaultOK, months, function () {\n        var intl = format ? {\n          month: length,\n          day: \"numeric\"\n        } : {\n          month: length\n        },\n            formatStr = format ? \"format\" : \"standalone\";\n\n        if (!_this.monthsCache[formatStr][length]) {\n          _this.monthsCache[formatStr][length] = mapMonths(function (dt) {\n            return _this.extract(dt, intl, \"month\");\n          });\n        }\n\n        return _this.monthsCache[formatStr][length];\n      });\n    };\n\n    _proto4.weekdays = function weekdays$1(length, format, defaultOK) {\n      var _this2 = this;\n\n      if (format === void 0) {\n        format = false;\n      }\n\n      if (defaultOK === void 0) {\n        defaultOK = true;\n      }\n\n      return listStuff(this, length, defaultOK, weekdays, function () {\n        var intl = format ? {\n          weekday: length,\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\"\n        } : {\n          weekday: length\n        },\n            formatStr = format ? \"format\" : \"standalone\";\n\n        if (!_this2.weekdaysCache[formatStr][length]) {\n          _this2.weekdaysCache[formatStr][length] = mapWeekdays(function (dt) {\n            return _this2.extract(dt, intl, \"weekday\");\n          });\n        }\n\n        return _this2.weekdaysCache[formatStr][length];\n      });\n    };\n\n    _proto4.meridiems = function meridiems$1(defaultOK) {\n      var _this3 = this;\n\n      if (defaultOK === void 0) {\n        defaultOK = true;\n      }\n\n      return listStuff(this, undefined, defaultOK, function () {\n        return meridiems;\n      }, function () {\n        // In theory there could be aribitrary day periods. We're gonna assume there are exactly two\n        // for AM and PM. This is probably wrong, but it's makes parsing way easier.\n        if (!_this3.meridiemCache) {\n          var intl = {\n            hour: \"numeric\",\n            hour12: true\n          };\n          _this3.meridiemCache = [DateTime.utc(2016, 11, 13, 9), DateTime.utc(2016, 11, 13, 19)].map(function (dt) {\n            return _this3.extract(dt, intl, \"dayperiod\");\n          });\n        }\n\n        return _this3.meridiemCache;\n      });\n    };\n\n    _proto4.eras = function eras$1(length, defaultOK) {\n      var _this4 = this;\n\n      if (defaultOK === void 0) {\n        defaultOK = true;\n      }\n\n      return listStuff(this, length, defaultOK, eras, function () {\n        var intl = {\n          era: length\n        }; // This is utter bullshit. Different calendars are going to define eras totally differently. What I need is the minimum set of dates\n        // to definitely enumerate them.\n\n        if (!_this4.eraCache[length]) {\n          _this4.eraCache[length] = [DateTime.utc(-40, 1, 1), DateTime.utc(2017, 1, 1)].map(function (dt) {\n            return _this4.extract(dt, intl, \"era\");\n          });\n        }\n\n        return _this4.eraCache[length];\n      });\n    };\n\n    _proto4.extract = function extract(dt, intlOpts, field) {\n      var df = this.dtFormatter(dt, intlOpts),\n          results = df.formatToParts(),\n          matching = results.find(function (m) {\n        return m.type.toLowerCase() === field;\n      });\n      return matching ? matching.value : null;\n    };\n\n    _proto4.numberFormatter = function numberFormatter(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      // this forcesimple option is never used (the only caller short-circuits on it, but it seems safer to leave)\n      // (in contrast, the rest of the condition is used heavily)\n      return new PolyNumberFormatter(this.intl, opts.forceSimple || this.fastNumbers, opts);\n    };\n\n    _proto4.dtFormatter = function dtFormatter(dt, intlOpts) {\n      if (intlOpts === void 0) {\n        intlOpts = {};\n      }\n\n      return new PolyDateFormatter(dt, this.intl, intlOpts);\n    };\n\n    _proto4.relFormatter = function relFormatter(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      return new PolyRelFormatter(this.intl, this.isEnglish(), opts);\n    };\n\n    _proto4.isEnglish = function isEnglish() {\n      return this.locale === \"en\" || this.locale.toLowerCase() === \"en-us\" || hasIntl() && new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith(\"en-us\");\n    };\n\n    _proto4.equals = function equals(other) {\n      return this.locale === other.locale && this.numberingSystem === other.numberingSystem && this.outputCalendar === other.outputCalendar;\n    };\n\n    _createClass(Locale, [{\n      key: \"fastNumbers\",\n      get: function get() {\n        if (this.fastNumbersCached == null) {\n          this.fastNumbersCached = supportsFastNumbers(this);\n        }\n\n        return this.fastNumbersCached;\n      }\n    }]);\n\n    return Locale;\n  }();\n\n  /*\n   * This file handles parsing for well-specified formats. Here's how it works:\n   * Two things go into parsing: a regex to match with and an extractor to take apart the groups in the match.\n   * An extractor is just a function that takes a regex match array and returns a { year: ..., month: ... } object\n   * parse() does the work of executing the regex and applying the extractor. It takes multiple regex/extractor pairs to try in sequence.\n   * Extractors can take a \"cursor\" representing the offset in the match to look at. This makes it easy to combine extractors.\n   * combineExtractors() does the work of combining them, keeping track of the cursor through multiple extractions.\n   * Some extractions are super dumb and simpleParse and fromStrings help DRY them.\n   */\n\n  function combineRegexes() {\n    for (var _len = arguments.length, regexes = new Array(_len), _key = 0; _key < _len; _key++) {\n      regexes[_key] = arguments[_key];\n    }\n\n    var full = regexes.reduce(function (f, r) {\n      return f + r.source;\n    }, \"\");\n    return RegExp(\"^\" + full + \"$\");\n  }\n\n  function combineExtractors() {\n    for (var _len2 = arguments.length, extractors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      extractors[_key2] = arguments[_key2];\n    }\n\n    return function (m) {\n      return extractors.reduce(function (_ref, ex) {\n        var mergedVals = _ref[0],\n            mergedZone = _ref[1],\n            cursor = _ref[2];\n\n        var _ex = ex(m, cursor),\n            val = _ex[0],\n            zone = _ex[1],\n            next = _ex[2];\n\n        return [Object.assign(mergedVals, val), mergedZone || zone, next];\n      }, [{}, null, 1]).slice(0, 2);\n    };\n  }\n\n  function parse(s) {\n    if (s == null) {\n      return [null, null];\n    }\n\n    for (var _len3 = arguments.length, patterns = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      patterns[_key3 - 1] = arguments[_key3];\n    }\n\n    for (var _i = 0, _patterns = patterns; _i < _patterns.length; _i++) {\n      var _patterns$_i = _patterns[_i],\n          regex = _patterns$_i[0],\n          extractor = _patterns$_i[1];\n      var m = regex.exec(s);\n\n      if (m) {\n        return extractor(m);\n      }\n    }\n\n    return [null, null];\n  }\n\n  function simpleParse() {\n    for (var _len4 = arguments.length, keys = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      keys[_key4] = arguments[_key4];\n    }\n\n    return function (match, cursor) {\n      var ret = {};\n      var i;\n\n      for (i = 0; i < keys.length; i++) {\n        ret[keys[i]] = parseInteger(match[cursor + i]);\n      }\n\n      return [ret, null, cursor + i];\n    };\n  } // ISO and SQL parsing\n\n\n  var offsetRegex = /(?:(Z)|([+-]\\d\\d)(?::?(\\d\\d))?)/,\n      isoTimeBaseRegex = /(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:[.,](\\d{1,30}))?)?)?/,\n      isoTimeRegex = RegExp(\"\" + isoTimeBaseRegex.source + offsetRegex.source + \"?\"),\n      isoTimeExtensionRegex = RegExp(\"(?:T\" + isoTimeRegex.source + \")?\"),\n      isoYmdRegex = /([+-]\\d{6}|\\d{4})(?:-?(\\d\\d)(?:-?(\\d\\d))?)?/,\n      isoWeekRegex = /(\\d{4})-?W(\\d\\d)(?:-?(\\d))?/,\n      isoOrdinalRegex = /(\\d{4})-?(\\d{3})/,\n      extractISOWeekData = simpleParse(\"weekYear\", \"weekNumber\", \"weekDay\"),\n      extractISOOrdinalData = simpleParse(\"year\", \"ordinal\"),\n      sqlYmdRegex = /(\\d{4})-(\\d\\d)-(\\d\\d)/,\n      // dumbed-down version of the ISO one\n  sqlTimeRegex = RegExp(isoTimeBaseRegex.source + \" ?(?:\" + offsetRegex.source + \"|(\" + ianaRegex.source + \"))?\"),\n      sqlTimeExtensionRegex = RegExp(\"(?: \" + sqlTimeRegex.source + \")?\");\n\n  function int(match, pos, fallback) {\n    var m = match[pos];\n    return isUndefined(m) ? fallback : parseInteger(m);\n  }\n\n  function extractISOYmd(match, cursor) {\n    var item = {\n      year: int(match, cursor),\n      month: int(match, cursor + 1, 1),\n      day: int(match, cursor + 2, 1)\n    };\n    return [item, null, cursor + 3];\n  }\n\n  function extractISOTime(match, cursor) {\n    var item = {\n      hour: int(match, cursor, 0),\n      minute: int(match, cursor + 1, 0),\n      second: int(match, cursor + 2, 0),\n      millisecond: parseMillis(match[cursor + 3])\n    };\n    return [item, null, cursor + 4];\n  }\n\n  function extractISOOffset(match, cursor) {\n    var local = !match[cursor] && !match[cursor + 1],\n        fullOffset = signedOffset(match[cursor + 1], match[cursor + 2]),\n        zone = local ? null : FixedOffsetZone.instance(fullOffset);\n    return [{}, zone, cursor + 3];\n  }\n\n  function extractIANAZone(match, cursor) {\n    var zone = match[cursor] ? IANAZone.create(match[cursor]) : null;\n    return [{}, zone, cursor + 1];\n  } // ISO duration parsing\n\n\n  var isoDuration = /^-?P(?:(?:(-?\\d{1,9})Y)?(?:(-?\\d{1,9})M)?(?:(-?\\d{1,9})W)?(?:(-?\\d{1,9})D)?(?:T(?:(-?\\d{1,9})H)?(?:(-?\\d{1,9})M)?(?:(-?\\d{1,20})(?:[.,](-?\\d{1,9}))?S)?)?)$/;\n\n  function extractISODuration(match) {\n    var s = match[0],\n        yearStr = match[1],\n        monthStr = match[2],\n        weekStr = match[3],\n        dayStr = match[4],\n        hourStr = match[5],\n        minuteStr = match[6],\n        secondStr = match[7],\n        millisecondsStr = match[8];\n    var hasNegativePrefix = s[0] === \"-\";\n\n    var maybeNegate = function maybeNegate(num) {\n      return num && hasNegativePrefix ? -num : num;\n    };\n\n    return [{\n      years: maybeNegate(parseInteger(yearStr)),\n      months: maybeNegate(parseInteger(monthStr)),\n      weeks: maybeNegate(parseInteger(weekStr)),\n      days: maybeNegate(parseInteger(dayStr)),\n      hours: maybeNegate(parseInteger(hourStr)),\n      minutes: maybeNegate(parseInteger(minuteStr)),\n      seconds: maybeNegate(parseInteger(secondStr)),\n      milliseconds: maybeNegate(parseMillis(millisecondsStr))\n    }];\n  } // These are a little braindead. EDT *should* tell us that we're in, say, America/New_York\n  // and not just that we're in -240 *right now*. But since I don't think these are used that often\n  // I'm just going to ignore that\n\n\n  var obsOffsets = {\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = {\n      year: yearStr.length === 2 ? untruncateYear(parseInteger(yearStr)) : parseInteger(yearStr),\n      month: monthsShort.indexOf(monthStr) + 1,\n      day: parseInteger(dayStr),\n      hour: parseInteger(hourStr),\n      minute: parseInteger(minuteStr)\n    };\n    if (secondStr) result.second = parseInteger(secondStr);\n\n    if (weekdayStr) {\n      result.weekday = weekdayStr.length > 3 ? weekdaysLong.indexOf(weekdayStr) + 1 : weekdaysShort.indexOf(weekdayStr) + 1;\n    }\n\n    return result;\n  } // RFC 2822/5322\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\\d\\d)(\\d\\d)))$/;\n\n  function extractRFC2822(match) {\n    var weekdayStr = match[1],\n        dayStr = match[2],\n        monthStr = match[3],\n        yearStr = match[4],\n        hourStr = match[5],\n        minuteStr = match[6],\n        secondStr = match[7],\n        obsOffset = match[8],\n        milOffset = match[9],\n        offHourStr = match[10],\n        offMinuteStr = match[11],\n        result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n    var offset;\n\n    if (obsOffset) {\n      offset = obsOffsets[obsOffset];\n    } else if (milOffset) {\n      offset = 0;\n    } else {\n      offset = signedOffset(offHourStr, offMinuteStr);\n    }\n\n    return [result, new FixedOffsetZone(offset)];\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, \" \").replace(/(\\s\\s+)/g, \" \").trim();\n  } // http date\n\n\n  var rfc1123 = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d\\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,\n      rfc850 = /^(Monday|Tuesday|Wedsday|Thursday|Friday|Saturday|Sunday), (\\d\\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,\n      ascii = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \\d|\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) (\\d{4})$/;\n\n  function extractRFC1123Or850(match) {\n    var weekdayStr = match[1],\n        dayStr = match[2],\n        monthStr = match[3],\n        yearStr = match[4],\n        hourStr = match[5],\n        minuteStr = match[6],\n        secondStr = match[7],\n        result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n    return [result, FixedOffsetZone.utcInstance];\n  }\n\n  function extractASCII(match) {\n    var weekdayStr = match[1],\n        monthStr = match[2],\n        dayStr = match[3],\n        hourStr = match[4],\n        minuteStr = match[5],\n        secondStr = match[6],\n        yearStr = match[7],\n        result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n    return [result, FixedOffsetZone.utcInstance];\n  }\n\n  var isoYmdWithTimeExtensionRegex = combineRegexes(isoYmdRegex, isoTimeExtensionRegex);\n  var isoWeekWithTimeExtensionRegex = combineRegexes(isoWeekRegex, isoTimeExtensionRegex);\n  var isoOrdinalWithTimeExtensionRegex = combineRegexes(isoOrdinalRegex, isoTimeExtensionRegex);\n  var isoTimeCombinedRegex = combineRegexes(isoTimeRegex);\n  var extractISOYmdTimeAndOffset = combineExtractors(extractISOYmd, extractISOTime, extractISOOffset);\n  var extractISOWeekTimeAndOffset = combineExtractors(extractISOWeekData, extractISOTime, extractISOOffset);\n  var extractISOOrdinalDataAndTime = combineExtractors(extractISOOrdinalData, extractISOTime);\n  var extractISOTimeAndOffset = combineExtractors(extractISOTime, extractISOOffset);\n  /**\n   * @private\n   */\n\n  function parseISODate(s) {\n    return parse(s, [isoYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset], [isoWeekWithTimeExtensionRegex, extractISOWeekTimeAndOffset], [isoOrdinalWithTimeExtensionRegex, extractISOOrdinalDataAndTime], [isoTimeCombinedRegex, extractISOTimeAndOffset]);\n  }\n  function parseRFC2822Date(s) {\n    return parse(preprocessRFC2822(s), [rfc2822, extractRFC2822]);\n  }\n  function parseHTTPDate(s) {\n    return parse(s, [rfc1123, extractRFC1123Or850], [rfc850, extractRFC1123Or850], [ascii, extractASCII]);\n  }\n  function parseISODuration(s) {\n    return parse(s, [isoDuration, extractISODuration]);\n  }\n  var sqlYmdWithTimeExtensionRegex = combineRegexes(sqlYmdRegex, sqlTimeExtensionRegex);\n  var sqlTimeCombinedRegex = combineRegexes(sqlTimeRegex);\n  var extractISOYmdTimeOffsetAndIANAZone = combineExtractors(extractISOYmd, extractISOTime, extractISOOffset, extractIANAZone);\n  var extractISOTimeOffsetAndIANAZone = combineExtractors(extractISOTime, extractISOOffset, extractIANAZone);\n  function parseSQL(s) {\n    return parse(s, [sqlYmdWithTimeExtensionRegex, extractISOYmdTimeOffsetAndIANAZone], [sqlTimeCombinedRegex, extractISOTimeOffsetAndIANAZone]);\n  }\n\n  var INVALID = \"Invalid Duration\"; // unit conversion constants\n\n  var lowOrderMatrix = {\n    weeks: {\n      days: 7,\n      hours: 7 * 24,\n      minutes: 7 * 24 * 60,\n      seconds: 7 * 24 * 60 * 60,\n      milliseconds: 7 * 24 * 60 * 60 * 1000\n    },\n    days: {\n      hours: 24,\n      minutes: 24 * 60,\n      seconds: 24 * 60 * 60,\n      milliseconds: 24 * 60 * 60 * 1000\n    },\n    hours: {\n      minutes: 60,\n      seconds: 60 * 60,\n      milliseconds: 60 * 60 * 1000\n    },\n    minutes: {\n      seconds: 60,\n      milliseconds: 60 * 1000\n    },\n    seconds: {\n      milliseconds: 1000\n    }\n  },\n      casualMatrix = Object.assign({\n    years: {\n      quarters: 4,\n      months: 12,\n      weeks: 52,\n      days: 365,\n      hours: 365 * 24,\n      minutes: 365 * 24 * 60,\n      seconds: 365 * 24 * 60 * 60,\n      milliseconds: 365 * 24 * 60 * 60 * 1000\n    },\n    quarters: {\n      months: 3,\n      weeks: 13,\n      days: 91,\n      hours: 91 * 24,\n      minutes: 91 * 24 * 60,\n      seconds: 91 * 24 * 60 * 60,\n      milliseconds: 91 * 24 * 60 * 60 * 1000\n    },\n    months: {\n      weeks: 4,\n      days: 30,\n      hours: 30 * 24,\n      minutes: 30 * 24 * 60,\n      seconds: 30 * 24 * 60 * 60,\n      milliseconds: 30 * 24 * 60 * 60 * 1000\n    }\n  }, lowOrderMatrix),\n      daysInYearAccurate = 146097.0 / 400,\n      daysInMonthAccurate = 146097.0 / 4800,\n      accurateMatrix = Object.assign({\n    years: {\n      quarters: 4,\n      months: 12,\n      weeks: daysInYearAccurate / 7,\n      days: daysInYearAccurate,\n      hours: daysInYearAccurate * 24,\n      minutes: daysInYearAccurate * 24 * 60,\n      seconds: daysInYearAccurate * 24 * 60 * 60,\n      milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000\n    },\n    quarters: {\n      months: 3,\n      weeks: daysInYearAccurate / 28,\n      days: daysInYearAccurate / 4,\n      hours: daysInYearAccurate * 24 / 4,\n      minutes: daysInYearAccurate * 24 * 60 / 4,\n      seconds: daysInYearAccurate * 24 * 60 * 60 / 4,\n      milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000 / 4\n    },\n    months: {\n      weeks: daysInMonthAccurate / 7,\n      days: daysInMonthAccurate,\n      hours: daysInMonthAccurate * 24,\n      minutes: daysInMonthAccurate * 24 * 60,\n      seconds: daysInMonthAccurate * 24 * 60 * 60,\n      milliseconds: daysInMonthAccurate * 24 * 60 * 60 * 1000\n    }\n  }, lowOrderMatrix); // units ordered by size\n\n  var orderedUnits = [\"years\", \"quarters\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\", \"milliseconds\"];\n  var reverseUnits = orderedUnits.slice(0).reverse(); // clone really means \"create another instance just like this one, but with these changes\"\n\n  function clone(dur, alts, clear) {\n    if (clear === void 0) {\n      clear = false;\n    }\n\n    // deep merge for vals\n    var conf = {\n      values: clear ? alts.values : Object.assign({}, dur.values, alts.values || {}),\n      loc: dur.loc.clone(alts.loc),\n      conversionAccuracy: alts.conversionAccuracy || dur.conversionAccuracy\n    };\n    return new Duration(conf);\n  }\n\n  function antiTrunc(n) {\n    return n < 0 ? Math.floor(n) : Math.ceil(n);\n  } // NB: mutates parameters\n\n\n  function convert(matrix, fromMap, fromUnit, toMap, toUnit) {\n    var conv = matrix[toUnit][fromUnit],\n        raw = fromMap[fromUnit] / conv,\n        sameSign = Math.sign(raw) === Math.sign(toMap[toUnit]),\n        // ok, so this is wild, but see the matrix in the tests\n    added = !sameSign && toMap[toUnit] !== 0 && Math.abs(raw) <= 1 ? antiTrunc(raw) : Math.trunc(raw);\n    toMap[toUnit] += added;\n    fromMap[fromUnit] -= added * conv;\n  } // NB: mutates parameters\n\n\n  function normalizeValues(matrix, vals) {\n    reverseUnits.reduce(function (previous, current) {\n      if (!isUndefined(vals[current])) {\n        if (previous) {\n          convert(matrix, vals, previous, vals, current);\n        }\n\n        return current;\n      } else {\n        return previous;\n      }\n    }, null);\n  }\n  /**\n   * A Duration object represents a period of time, like \"2 months\" or \"1 day, 1 hour\". Conceptually, it's just a map of units to their quantities, accompanied by some additional configuration and methods for creating, parsing, interrogating, transforming, and formatting them. They can be used on their own or in conjunction with other Luxon types; for example, you can use {@link DateTime.plus} to add a Duration object to a DateTime, producing another DateTime.\n   *\n   * Here is a brief overview of commonly used methods and getters in Duration:\n   *\n   * * **Creation** To create a Duration, use {@link Duration.fromMillis}, {@link Duration.fromObject}, or {@link Duration.fromISO}.\n   * * **Unit values** See the {@link Duration.years}, {@link Duration.months}, {@link Duration.weeks}, {@link Duration.days}, {@link Duration.hours}, {@link Duration.minutes}, {@link Duration.seconds}, {@link Duration.milliseconds} accessors.\n   * * **Configuration** See  {@link Duration.locale} and {@link Duration.numberingSystem} accessors.\n   * * **Transformation** To create new Durations out of old ones use {@link Duration.plus}, {@link Duration.minus}, {@link Duration.normalize}, {@link Duration.set}, {@link Duration.reconfigure}, {@link Duration.shiftTo}, and {@link Duration.negate}.\n   * * **Output** To convert the Duration into other representations, see {@link Duration.as}, {@link Duration.toISO}, {@link Duration.toFormat}, and {@link Duration.toJSON}\n   *\n   * There's are more methods documented below. In addition, for more information on subtler topics like internationalization and validity, see the external documentation.\n   */\n\n\n  var Duration = /*#__PURE__*/function () {\n    /**\n     * @private\n     */\n    function Duration(config) {\n      var accurate = config.conversionAccuracy === \"longterm\" || false;\n      /**\n       * @access private\n       */\n\n      this.values = config.values;\n      /**\n       * @access private\n       */\n\n      this.loc = config.loc || Locale.create();\n      /**\n       * @access private\n       */\n\n      this.conversionAccuracy = accurate ? \"longterm\" : \"casual\";\n      /**\n       * @access private\n       */\n\n      this.invalid = config.invalid || null;\n      /**\n       * @access private\n       */\n\n      this.matrix = accurate ? accurateMatrix : casualMatrix;\n      /**\n       * @access private\n       */\n\n      this.isLuxonDuration = true;\n    }\n    /**\n     * Create Duration from a number of milliseconds.\n     * @param {number} count of milliseconds\n     * @param {Object} opts - options for parsing\n     * @param {string} [opts.locale='en-US'] - the locale to use\n     * @param {string} opts.numberingSystem - the numbering system to use\n     * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n     * @return {Duration}\n     */\n\n\n    Duration.fromMillis = function fromMillis(count, opts) {\n      return Duration.fromObject(Object.assign({\n        milliseconds: count\n      }, opts));\n    }\n    /**\n     * Create a Duration from a Javascript object with keys like 'years' and 'hours.\n     * If this object is empty then a zero milliseconds duration is returned.\n     * @param {Object} obj - the object to create the DateTime from\n     * @param {number} obj.years\n     * @param {number} obj.quarters\n     * @param {number} obj.months\n     * @param {number} obj.weeks\n     * @param {number} obj.days\n     * @param {number} obj.hours\n     * @param {number} obj.minutes\n     * @param {number} obj.seconds\n     * @param {number} obj.milliseconds\n     * @param {string} [obj.locale='en-US'] - the locale to use\n     * @param {string} obj.numberingSystem - the numbering system to use\n     * @param {string} [obj.conversionAccuracy='casual'] - the conversion system to use\n     * @return {Duration}\n     */\n    ;\n\n    Duration.fromObject = function fromObject(obj) {\n      if (obj == null || typeof obj !== \"object\") {\n        throw new InvalidArgumentError(\"Duration.fromObject: argument expected to be an object, got \" + (obj === null ? \"null\" : typeof obj));\n      }\n\n      return new Duration({\n        values: normalizeObject(obj, Duration.normalizeUnit, [\"locale\", \"numberingSystem\", \"conversionAccuracy\", \"zone\" // a bit of debt; it's super inconvenient internally not to be able to blindly pass this\n        ]),\n        loc: Locale.fromObject(obj),\n        conversionAccuracy: obj.conversionAccuracy\n      });\n    }\n    /**\n     * Create a Duration from an ISO 8601 duration string.\n     * @param {string} text - text to parse\n     * @param {Object} opts - options for parsing\n     * @param {string} [opts.locale='en-US'] - the locale to use\n     * @param {string} opts.numberingSystem - the numbering system to use\n     * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n     * @see https://en.wikipedia.org/wiki/ISO_8601#Durations\n     * @example Duration.fromISO('P3Y6M1W4DT12H30M5S').toObject() //=> { years: 3, months: 6, weeks: 1, days: 4, hours: 12, minutes: 30, seconds: 5 }\n     * @example Duration.fromISO('PT23H').toObject() //=> { hours: 23 }\n     * @example Duration.fromISO('P5Y3M').toObject() //=> { years: 5, months: 3 }\n     * @return {Duration}\n     */\n    ;\n\n    Duration.fromISO = function fromISO(text, opts) {\n      var _parseISODuration = parseISODuration(text),\n          parsed = _parseISODuration[0];\n\n      if (parsed) {\n        var obj = Object.assign(parsed, opts);\n        return Duration.fromObject(obj);\n      } else {\n        return Duration.invalid(\"unparsable\", \"the input \\\"\" + text + \"\\\" can't be parsed as ISO 8601\");\n      }\n    }\n    /**\n     * Create an invalid Duration.\n     * @param {string} reason - simple string of why this datetime is invalid. Should not contain parameters or anything else data-dependent\n     * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n     * @return {Duration}\n     */\n    ;\n\n    Duration.invalid = function invalid(reason, explanation) {\n      if (explanation === void 0) {\n        explanation = null;\n      }\n\n      if (!reason) {\n        throw new InvalidArgumentError(\"need to specify a reason the Duration is invalid\");\n      }\n\n      var invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n      if (Settings.throwOnInvalid) {\n        throw new InvalidDurationError(invalid);\n      } else {\n        return new Duration({\n          invalid: invalid\n        });\n      }\n    }\n    /**\n     * @private\n     */\n    ;\n\n    Duration.normalizeUnit = function normalizeUnit(unit) {\n      var normalized = {\n        year: \"years\",\n        years: \"years\",\n        quarter: \"quarters\",\n        quarters: \"quarters\",\n        month: \"months\",\n        months: \"months\",\n        week: \"weeks\",\n        weeks: \"weeks\",\n        day: \"days\",\n        days: \"days\",\n        hour: \"hours\",\n        hours: \"hours\",\n        minute: \"minutes\",\n        minutes: \"minutes\",\n        second: \"seconds\",\n        seconds: \"seconds\",\n        millisecond: \"milliseconds\",\n        milliseconds: \"milliseconds\"\n      }[unit ? unit.toLowerCase() : unit];\n      if (!normalized) throw new InvalidUnitError(unit);\n      return normalized;\n    }\n    /**\n     * Check if an object is a Duration. Works across context boundaries\n     * @param {object} o\n     * @return {boolean}\n     */\n    ;\n\n    Duration.isDuration = function isDuration(o) {\n      return o && o.isLuxonDuration || false;\n    }\n    /**\n     * Get  the locale of a Duration, such 'en-GB'\n     * @type {string}\n     */\n    ;\n\n    var _proto = Duration.prototype;\n\n    /**\n     * Returns a string representation of this Duration formatted according to the specified format string. You may use these tokens:\n     * * `S` for milliseconds\n     * * `s` for seconds\n     * * `m` for minutes\n     * * `h` for hours\n     * * `d` for days\n     * * `M` for months\n     * * `y` for years\n     * Notes:\n     * * Add padding by repeating the token, e.g. \"yy\" pads the years to two digits, \"hhhh\" pads the hours out to four digits\n     * * The duration will be converted to the set of units in the format string using {@link Duration.shiftTo} and the Durations's conversion accuracy setting.\n     * @param {string} fmt - the format string\n     * @param {Object} opts - options\n     * @param {boolean} [opts.floor=true] - floor numerical values\n     * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"y d s\") //=> \"1 6 2\"\n     * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"yy dd sss\") //=> \"01 06 002\"\n     * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"M S\") //=> \"12 518402000\"\n     * @return {string}\n     */\n    _proto.toFormat = function toFormat(fmt, opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      // reverse-compat since 1.2; we always round down now, never up, and we do it by default\n      var fmtOpts = Object.assign({}, opts, {\n        floor: opts.round !== false && opts.floor !== false\n      });\n      return this.isValid ? Formatter.create(this.loc, fmtOpts).formatDurationFromString(this, fmt) : INVALID;\n    }\n    /**\n     * Returns a Javascript object with this Duration's values.\n     * @param opts - options for generating the object\n     * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output\n     * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toObject() //=> { years: 1, days: 6, seconds: 2 }\n     * @return {Object}\n     */\n    ;\n\n    _proto.toObject = function toObject(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      if (!this.isValid) return {};\n      var base = Object.assign({}, this.values);\n\n      if (opts.includeConfig) {\n        base.conversionAccuracy = this.conversionAccuracy;\n        base.numberingSystem = this.loc.numberingSystem;\n        base.locale = this.loc.locale;\n      }\n\n      return base;\n    }\n    /**\n     * Returns an ISO 8601-compliant string representation of this Duration.\n     * @see https://en.wikipedia.org/wiki/ISO_8601#Durations\n     * @example Duration.fromObject({ years: 3, seconds: 45 }).toISO() //=> 'P3YT45S'\n     * @example Duration.fromObject({ months: 4, seconds: 45 }).toISO() //=> 'P4MT45S'\n     * @example Duration.fromObject({ months: 5 }).toISO() //=> 'P5M'\n     * @example Duration.fromObject({ minutes: 5 }).toISO() //=> 'PT5M'\n     * @example Duration.fromObject({ milliseconds: 6 }).toISO() //=> 'PT0.006S'\n     * @return {string}\n     */\n    ;\n\n    _proto.toISO = function toISO() {\n      // we could use the formatter, but this is an easier way to get the minimum string\n      if (!this.isValid) return null;\n      var s = \"P\";\n      if (this.years !== 0) s += this.years + \"Y\";\n      if (this.months !== 0 || this.quarters !== 0) s += this.months + this.quarters * 3 + \"M\";\n      if (this.weeks !== 0) s += this.weeks + \"W\";\n      if (this.days !== 0) s += this.days + \"D\";\n      if (this.hours !== 0 || this.minutes !== 0 || this.seconds !== 0 || this.milliseconds !== 0) s += \"T\";\n      if (this.hours !== 0) s += this.hours + \"H\";\n      if (this.minutes !== 0) s += this.minutes + \"M\";\n      if (this.seconds !== 0 || this.milliseconds !== 0) // this will handle \"floating point madness\" by removing extra decimal places\n        // https://stackoverflow.com/questions/588004/is-floating-point-math-broken\n        s += roundTo(this.seconds + this.milliseconds / 1000, 3) + \"S\";\n      if (s === \"P\") s += \"T0S\";\n      return s;\n    }\n    /**\n     * Returns an ISO 8601 representation of this Duration appropriate for use in JSON.\n     * @return {string}\n     */\n    ;\n\n    _proto.toJSON = function toJSON() {\n      return this.toISO();\n    }\n    /**\n     * Returns an ISO 8601 representation of this Duration appropriate for use in debugging.\n     * @return {string}\n     */\n    ;\n\n    _proto.toString = function toString() {\n      return this.toISO();\n    }\n    /**\n     * Returns an milliseconds value of this Duration.\n     * @return {number}\n     */\n    ;\n\n    _proto.valueOf = function valueOf() {\n      return this.as(\"milliseconds\");\n    }\n    /**\n     * Make this Duration longer by the specified amount. Return a newly-constructed Duration.\n     * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n     * @return {Duration}\n     */\n    ;\n\n    _proto.plus = function plus(duration) {\n      if (!this.isValid) return this;\n      var dur = friendlyDuration(duration),\n          result = {};\n\n      for (var _iterator = _createForOfIteratorHelperLoose(orderedUnits), _step; !(_step = _iterator()).done;) {\n        var k = _step.value;\n\n        if (hasOwnProperty(dur.values, k) || hasOwnProperty(this.values, k)) {\n          result[k] = dur.get(k) + this.get(k);\n        }\n      }\n\n      return clone(this, {\n        values: result\n      }, true);\n    }\n    /**\n     * Make this Duration shorter by the specified amount. Return a newly-constructed Duration.\n     * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n     * @return {Duration}\n     */\n    ;\n\n    _proto.minus = function minus(duration) {\n      if (!this.isValid) return this;\n      var dur = friendlyDuration(duration);\n      return this.plus(dur.negate());\n    }\n    /**\n     * Scale this Duration by the specified amount. Return a newly-constructed Duration.\n     * @param {function} fn - The function to apply to each unit. Arity is 1 or 2: the value of the unit and, optionally, the unit name. Must return a number.\n     * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnit(x => x * 2) //=> { hours: 2, minutes: 60 }\n     * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnit((x, u) => u === \"hour\" ? x * 2 : x) //=> { hours: 2, minutes: 30 }\n     * @return {Duration}\n     */\n    ;\n\n    _proto.mapUnits = function mapUnits(fn) {\n      if (!this.isValid) return this;\n      var result = {};\n\n      for (var _i = 0, _Object$keys = Object.keys(this.values); _i < _Object$keys.length; _i++) {\n        var k = _Object$keys[_i];\n        result[k] = asNumber(fn(this.values[k], k));\n      }\n\n      return clone(this, {\n        values: result\n      }, true);\n    }\n    /**\n     * Get the value of unit.\n     * @param {string} unit - a unit such as 'minute' or 'day'\n     * @example Duration.fromObject({years: 2, days: 3}).years //=> 2\n     * @example Duration.fromObject({years: 2, days: 3}).months //=> 0\n     * @example Duration.fromObject({years: 2, days: 3}).days //=> 3\n     * @return {number}\n     */\n    ;\n\n    _proto.get = function get(unit) {\n      return this[Duration.normalizeUnit(unit)];\n    }\n    /**\n     * \"Set\" the values of specified units. Return a newly-constructed Duration.\n     * @param {Object} values - a mapping of units to numbers\n     * @example dur.set({ years: 2017 })\n     * @example dur.set({ hours: 8, minutes: 30 })\n     * @return {Duration}\n     */\n    ;\n\n    _proto.set = function set(values) {\n      if (!this.isValid) return this;\n      var mixed = Object.assign(this.values, normalizeObject(values, Duration.normalizeUnit, []));\n      return clone(this, {\n        values: mixed\n      });\n    }\n    /**\n     * \"Set\" the locale and/or numberingSystem.  Returns a newly-constructed Duration.\n     * @example dur.reconfigure({ locale: 'en-GB' })\n     * @return {Duration}\n     */\n    ;\n\n    _proto.reconfigure = function reconfigure(_temp) {\n      var _ref = _temp === void 0 ? {} : _temp,\n          locale = _ref.locale,\n          numberingSystem = _ref.numberingSystem,\n          conversionAccuracy = _ref.conversionAccuracy;\n\n      var loc = this.loc.clone({\n        locale: locale,\n        numberingSystem: numberingSystem\n      }),\n          opts = {\n        loc: loc\n      };\n\n      if (conversionAccuracy) {\n        opts.conversionAccuracy = conversionAccuracy;\n      }\n\n      return clone(this, opts);\n    }\n    /**\n     * Return the length of the duration in the specified unit.\n     * @param {string} unit - a unit such as 'minutes' or 'days'\n     * @example Duration.fromObject({years: 1}).as('days') //=> 365\n     * @example Duration.fromObject({years: 1}).as('months') //=> 12\n     * @example Duration.fromObject({hours: 60}).as('days') //=> 2.5\n     * @return {number}\n     */\n    ;\n\n    _proto.as = function as(unit) {\n      return this.isValid ? this.shiftTo(unit).get(unit) : NaN;\n    }\n    /**\n     * Reduce this Duration to its canonical representation in its current units.\n     * @example Duration.fromObject({ years: 2, days: 5000 }).normalize().toObject() //=> { years: 15, days: 255 }\n     * @example Duration.fromObject({ hours: 12, minutes: -45 }).normalize().toObject() //=> { hours: 11, minutes: 15 }\n     * @return {Duration}\n     */\n    ;\n\n    _proto.normalize = function normalize() {\n      if (!this.isValid) return this;\n      var vals = this.toObject();\n      normalizeValues(this.matrix, vals);\n      return clone(this, {\n        values: vals\n      }, true);\n    }\n    /**\n     * Convert this Duration into its representation in a different set of units.\n     * @example Duration.fromObject({ hours: 1, seconds: 30 }).shiftTo('minutes', 'milliseconds').toObject() //=> { minutes: 60, milliseconds: 30000 }\n     * @return {Duration}\n     */\n    ;\n\n    _proto.shiftTo = function shiftTo() {\n      for (var _len = arguments.length, units = new Array(_len), _key = 0; _key < _len; _key++) {\n        units[_key] = arguments[_key];\n      }\n\n      if (!this.isValid) return this;\n\n      if (units.length === 0) {\n        return this;\n      }\n\n      units = units.map(function (u) {\n        return Duration.normalizeUnit(u);\n      });\n      var built = {},\n          accumulated = {},\n          vals = this.toObject();\n      var lastUnit;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(orderedUnits), _step2; !(_step2 = _iterator2()).done;) {\n        var k = _step2.value;\n\n        if (units.indexOf(k) >= 0) {\n          lastUnit = k;\n          var own = 0; // anything we haven't boiled down yet should get boiled to this unit\n\n          for (var ak in accumulated) {\n            own += this.matrix[ak][k] * accumulated[ak];\n            accumulated[ak] = 0;\n          } // plus anything that's already in this unit\n\n\n          if (isNumber(vals[k])) {\n            own += vals[k];\n          }\n\n          var i = Math.trunc(own);\n          built[k] = i;\n          accumulated[k] = own - i; // we'd like to absorb these fractions in another unit\n          // plus anything further down the chain that should be rolled up in to this\n\n          for (var down in vals) {\n            if (orderedUnits.indexOf(down) > orderedUnits.indexOf(k)) {\n              convert(this.matrix, vals, down, built, k);\n            }\n          } // otherwise, keep it in the wings to boil it later\n\n        } else if (isNumber(vals[k])) {\n          accumulated[k] = vals[k];\n        }\n      } // anything leftover becomes the decimal for the last unit\n      // lastUnit must be defined since units is not empty\n\n\n      for (var key in accumulated) {\n        if (accumulated[key] !== 0) {\n          built[lastUnit] += key === lastUnit ? accumulated[key] : accumulated[key] / this.matrix[lastUnit][key];\n        }\n      }\n\n      return clone(this, {\n        values: built\n      }, true).normalize();\n    }\n    /**\n     * Return the negative of this Duration.\n     * @example Duration.fromObject({ hours: 1, seconds: 30 }).negate().toObject() //=> { hours: -1, seconds: -30 }\n     * @return {Duration}\n     */\n    ;\n\n    _proto.negate = function negate() {\n      if (!this.isValid) return this;\n      var negated = {};\n\n      for (var _i2 = 0, _Object$keys2 = Object.keys(this.values); _i2 < _Object$keys2.length; _i2++) {\n        var k = _Object$keys2[_i2];\n        negated[k] = -this.values[k];\n      }\n\n      return clone(this, {\n        values: negated\n      }, true);\n    }\n    /**\n     * Get the years.\n     * @type {number}\n     */\n    ;\n\n    /**\n     * Equality check\n     * Two Durations are equal iff they have the same units and the same values for each unit.\n     * @param {Duration} other\n     * @return {boolean}\n     */\n    _proto.equals = function equals(other) {\n      if (!this.isValid || !other.isValid) {\n        return false;\n      }\n\n      if (!this.loc.equals(other.loc)) {\n        return false;\n      }\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(orderedUnits), _step3; !(_step3 = _iterator3()).done;) {\n        var u = _step3.value;\n\n        if (this.values[u] !== other.values[u]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    _createClass(Duration, [{\n      key: \"locale\",\n      get: function get() {\n        return this.isValid ? this.loc.locale : null;\n      }\n      /**\n       * Get the numbering system of a Duration, such 'beng'. The numbering system is used when formatting the Duration\n       *\n       * @type {string}\n       */\n\n    }, {\n      key: \"numberingSystem\",\n      get: function get() {\n        return this.isValid ? this.loc.numberingSystem : null;\n      }\n    }, {\n      key: \"years\",\n      get: function get() {\n        return this.isValid ? this.values.years || 0 : NaN;\n      }\n      /**\n       * Get the quarters.\n       * @type {number}\n       */\n\n    }, {\n      key: \"quarters\",\n      get: function get() {\n        return this.isValid ? this.values.quarters || 0 : NaN;\n      }\n      /**\n       * Get the months.\n       * @type {number}\n       */\n\n    }, {\n      key: \"months\",\n      get: function get() {\n        return this.isValid ? this.values.months || 0 : NaN;\n      }\n      /**\n       * Get the weeks\n       * @type {number}\n       */\n\n    }, {\n      key: \"weeks\",\n      get: function get() {\n        return this.isValid ? this.values.weeks || 0 : NaN;\n      }\n      /**\n       * Get the days.\n       * @type {number}\n       */\n\n    }, {\n      key: \"days\",\n      get: function get() {\n        return this.isValid ? this.values.days || 0 : NaN;\n      }\n      /**\n       * Get the hours.\n       * @type {number}\n       */\n\n    }, {\n      key: \"hours\",\n      get: function get() {\n        return this.isValid ? this.values.hours || 0 : NaN;\n      }\n      /**\n       * Get the minutes.\n       * @type {number}\n       */\n\n    }, {\n      key: \"minutes\",\n      get: function get() {\n        return this.isValid ? this.values.minutes || 0 : NaN;\n      }\n      /**\n       * Get the seconds.\n       * @return {number}\n       */\n\n    }, {\n      key: \"seconds\",\n      get: function get() {\n        return this.isValid ? this.values.seconds || 0 : NaN;\n      }\n      /**\n       * Get the milliseconds.\n       * @return {number}\n       */\n\n    }, {\n      key: \"milliseconds\",\n      get: function get() {\n        return this.isValid ? this.values.milliseconds || 0 : NaN;\n      }\n      /**\n       * Returns whether the Duration is invalid. Invalid durations are returned by diff operations\n       * on invalid DateTimes or Intervals.\n       * @return {boolean}\n       */\n\n    }, {\n      key: \"isValid\",\n      get: function get() {\n        return this.invalid === null;\n      }\n      /**\n       * Returns an error code if this Duration became invalid, or null if the Duration is valid\n       * @return {string}\n       */\n\n    }, {\n      key: \"invalidReason\",\n      get: function get() {\n        return this.invalid ? this.invalid.reason : null;\n      }\n      /**\n       * Returns an explanation of why this Duration became invalid, or null if the Duration is valid\n       * @type {string}\n       */\n\n    }, {\n      key: \"invalidExplanation\",\n      get: function get() {\n        return this.invalid ? this.invalid.explanation : null;\n      }\n    }]);\n\n    return Duration;\n  }();\n  function friendlyDuration(durationish) {\n    if (isNumber(durationish)) {\n      return Duration.fromMillis(durationish);\n    } else if (Duration.isDuration(durationish)) {\n      return durationish;\n    } else if (typeof durationish === \"object\") {\n      return Duration.fromObject(durationish);\n    } else {\n      throw new InvalidArgumentError(\"Unknown duration argument \" + durationish + \" of type \" + typeof durationish);\n    }\n  }\n\n  var INVALID$1 = \"Invalid Interval\"; // checks if the start is equal to or before the end\n\n  function validateStartEnd(start, end) {\n    if (!start || !start.isValid) {\n      return Interval.invalid(\"missing or invalid start\");\n    } else if (!end || !end.isValid) {\n      return Interval.invalid(\"missing or invalid end\");\n    } else if (end < start) {\n      return Interval.invalid(\"end before start\", \"The end of an interval must be after its start, but you had start=\" + start.toISO() + \" and end=\" + end.toISO());\n    } else {\n      return null;\n    }\n  }\n  /**\n   * An Interval object represents a half-open interval of time, where each endpoint is a {@link DateTime}. Conceptually, it's a container for those two endpoints, accompanied by methods for creating, parsing, interrogating, comparing, transforming, and formatting them.\n   *\n   * Here is a brief overview of the most commonly used methods and getters in Interval:\n   *\n   * * **Creation** To create an Interval, use {@link fromDateTimes}, {@link after}, {@link before}, or {@link fromISO}.\n   * * **Accessors** Use {@link start} and {@link end} to get the start and end.\n   * * **Interrogation** To analyze the Interval, use {@link count}, {@link length}, {@link hasSame}, {@link contains}, {@link isAfter}, or {@link isBefore}.\n   * * **Transformation** To create other Intervals out of this one, use {@link set}, {@link splitAt}, {@link splitBy}, {@link divideEqually}, {@link merge}, {@link xor}, {@link union}, {@link intersection}, or {@link difference}.\n   * * **Comparison** To compare this Interval to another one, use {@link equals}, {@link overlaps}, {@link abutsStart}, {@link abutsEnd}, {@link engulfs}.\n   * * **Output** To convert the Interval into other representations, see {@link toString}, {@link toISO}, {@link toISODate}, {@link toISOTime}, {@link toFormat}, and {@link toDuration}.\n   */\n\n\n  var Interval = /*#__PURE__*/function () {\n    /**\n     * @private\n     */\n    function Interval(config) {\n      /**\n       * @access private\n       */\n      this.s = config.start;\n      /**\n       * @access private\n       */\n\n      this.e = config.end;\n      /**\n       * @access private\n       */\n\n      this.invalid = config.invalid || null;\n      /**\n       * @access private\n       */\n\n      this.isLuxonInterval = true;\n    }\n    /**\n     * Create an invalid Interval.\n     * @param {string} reason - simple string of why this Interval is invalid. Should not contain parameters or anything else data-dependent\n     * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n     * @return {Interval}\n     */\n\n\n    Interval.invalid = function invalid(reason, explanation) {\n      if (explanation === void 0) {\n        explanation = null;\n      }\n\n      if (!reason) {\n        throw new InvalidArgumentError(\"need to specify a reason the Interval is invalid\");\n      }\n\n      var invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n      if (Settings.throwOnInvalid) {\n        throw new InvalidIntervalError(invalid);\n      } else {\n        return new Interval({\n          invalid: invalid\n        });\n      }\n    }\n    /**\n     * Create an Interval from a start DateTime and an end DateTime. Inclusive of the start but not the end.\n     * @param {DateTime|Date|Object} start\n     * @param {DateTime|Date|Object} end\n     * @return {Interval}\n     */\n    ;\n\n    Interval.fromDateTimes = function fromDateTimes(start, end) {\n      var builtStart = friendlyDateTime(start),\n          builtEnd = friendlyDateTime(end);\n      var validateError = validateStartEnd(builtStart, builtEnd);\n\n      if (validateError == null) {\n        return new Interval({\n          start: builtStart,\n          end: builtEnd\n        });\n      } else {\n        return validateError;\n      }\n    }\n    /**\n     * Create an Interval from a start DateTime and a Duration to extend to.\n     * @param {DateTime|Date|Object} start\n     * @param {Duration|Object|number} duration - the length of the Interval.\n     * @return {Interval}\n     */\n    ;\n\n    Interval.after = function after(start, duration) {\n      var dur = friendlyDuration(duration),\n          dt = friendlyDateTime(start);\n      return Interval.fromDateTimes(dt, dt.plus(dur));\n    }\n    /**\n     * Create an Interval from an end DateTime and a Duration to extend backwards to.\n     * @param {DateTime|Date|Object} end\n     * @param {Duration|Object|number} duration - the length of the Interval.\n     * @return {Interval}\n     */\n    ;\n\n    Interval.before = function before(end, duration) {\n      var dur = friendlyDuration(duration),\n          dt = friendlyDateTime(end);\n      return Interval.fromDateTimes(dt.minus(dur), dt);\n    }\n    /**\n     * Create an Interval from an ISO 8601 string.\n     * Accepts `<start>/<end>`, `<start>/<duration>`, and `<duration>/<end>` formats.\n     * @param {string} text - the ISO string to parse\n     * @param {Object} [opts] - options to pass {@link DateTime.fromISO} and optionally {@link Duration.fromISO}\n     * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n     * @return {Interval}\n     */\n    ;\n\n    Interval.fromISO = function fromISO(text, opts) {\n      var _split = (text || \"\").split(\"/\", 2),\n          s = _split[0],\n          e = _split[1];\n\n      if (s && e) {\n        var start, startIsValid;\n\n        try {\n          start = DateTime.fromISO(s, opts);\n          startIsValid = start.isValid;\n        } catch (e) {\n          startIsValid = false;\n        }\n\n        var end, endIsValid;\n\n        try {\n          end = DateTime.fromISO(e, opts);\n          endIsValid = end.isValid;\n        } catch (e) {\n          endIsValid = false;\n        }\n\n        if (startIsValid && endIsValid) {\n          return Interval.fromDateTimes(start, end);\n        }\n\n        if (startIsValid) {\n          var dur = Duration.fromISO(e, opts);\n\n          if (dur.isValid) {\n            return Interval.after(start, dur);\n          }\n        } else if (endIsValid) {\n          var _dur = Duration.fromISO(s, opts);\n\n          if (_dur.isValid) {\n            return Interval.before(end, _dur);\n          }\n        }\n      }\n\n      return Interval.invalid(\"unparsable\", \"the input \\\"\" + text + \"\\\" can't be parsed as ISO 8601\");\n    }\n    /**\n     * Check if an object is an Interval. Works across context boundaries\n     * @param {object} o\n     * @return {boolean}\n     */\n    ;\n\n    Interval.isInterval = function isInterval(o) {\n      return o && o.isLuxonInterval || false;\n    }\n    /**\n     * Returns the start of the Interval\n     * @type {DateTime}\n     */\n    ;\n\n    var _proto = Interval.prototype;\n\n    /**\n     * Returns the length of the Interval in the specified unit.\n     * @param {string} unit - the unit (such as 'hours' or 'days') to return the length in.\n     * @return {number}\n     */\n    _proto.length = function length(unit) {\n      if (unit === void 0) {\n        unit = \"milliseconds\";\n      }\n\n      return this.isValid ? this.toDuration.apply(this, [unit]).get(unit) : NaN;\n    }\n    /**\n     * Returns the count of minutes, hours, days, months, or years included in the Interval, even in part.\n     * Unlike {@link length} this counts sections of the calendar, not periods of time, e.g. specifying 'day'\n     * asks 'what dates are included in this interval?', not 'how many days long is this interval?'\n     * @param {string} [unit='milliseconds'] - the unit of time to count.\n     * @return {number}\n     */\n    ;\n\n    _proto.count = function count(unit) {\n      if (unit === void 0) {\n        unit = \"milliseconds\";\n      }\n\n      if (!this.isValid) return NaN;\n      var start = this.start.startOf(unit),\n          end = this.end.startOf(unit);\n      return Math.floor(end.diff(start, unit).get(unit)) + 1;\n    }\n    /**\n     * Returns whether this Interval's start and end are both in the same unit of time\n     * @param {string} unit - the unit of time to check sameness on\n     * @return {boolean}\n     */\n    ;\n\n    _proto.hasSame = function hasSame(unit) {\n      return this.isValid ? this.isEmpty() || this.e.minus(1).hasSame(this.s, unit) : false;\n    }\n    /**\n     * Return whether this Interval has the same start and end DateTimes.\n     * @return {boolean}\n     */\n    ;\n\n    _proto.isEmpty = function isEmpty() {\n      return this.s.valueOf() === this.e.valueOf();\n    }\n    /**\n     * Return whether this Interval's start is after the specified DateTime.\n     * @param {DateTime} dateTime\n     * @return {boolean}\n     */\n    ;\n\n    _proto.isAfter = function isAfter(dateTime) {\n      if (!this.isValid) return false;\n      return this.s > dateTime;\n    }\n    /**\n     * Return whether this Interval's end is before the specified DateTime.\n     * @param {DateTime} dateTime\n     * @return {boolean}\n     */\n    ;\n\n    _proto.isBefore = function isBefore(dateTime) {\n      if (!this.isValid) return false;\n      return this.e <= dateTime;\n    }\n    /**\n     * Return whether this Interval contains the specified DateTime.\n     * @param {DateTime} dateTime\n     * @return {boolean}\n     */\n    ;\n\n    _proto.contains = function contains(dateTime) {\n      if (!this.isValid) return false;\n      return this.s <= dateTime && this.e > dateTime;\n    }\n    /**\n     * \"Sets\" the start and/or end dates. Returns a newly-constructed Interval.\n     * @param {Object} values - the values to set\n     * @param {DateTime} values.start - the starting DateTime\n     * @param {DateTime} values.end - the ending DateTime\n     * @return {Interval}\n     */\n    ;\n\n    _proto.set = function set(_temp) {\n      var _ref = _temp === void 0 ? {} : _temp,\n          start = _ref.start,\n          end = _ref.end;\n\n      if (!this.isValid) return this;\n      return Interval.fromDateTimes(start || this.s, end || this.e);\n    }\n    /**\n     * Split this Interval at each of the specified DateTimes\n     * @param {...[DateTime]} dateTimes - the unit of time to count.\n     * @return {[Interval]}\n     */\n    ;\n\n    _proto.splitAt = function splitAt() {\n      var _this = this;\n\n      if (!this.isValid) return [];\n\n      for (var _len = arguments.length, dateTimes = new Array(_len), _key = 0; _key < _len; _key++) {\n        dateTimes[_key] = arguments[_key];\n      }\n\n      var sorted = dateTimes.map(friendlyDateTime).filter(function (d) {\n        return _this.contains(d);\n      }).sort(),\n          results = [];\n      var s = this.s,\n          i = 0;\n\n      while (s < this.e) {\n        var added = sorted[i] || this.e,\n            next = +added > +this.e ? this.e : added;\n        results.push(Interval.fromDateTimes(s, next));\n        s = next;\n        i += 1;\n      }\n\n      return results;\n    }\n    /**\n     * Split this Interval into smaller Intervals, each of the specified length.\n     * Left over time is grouped into a smaller interval\n     * @param {Duration|Object|number} duration - The length of each resulting interval.\n     * @return {[Interval]}\n     */\n    ;\n\n    _proto.splitBy = function splitBy(duration) {\n      var dur = friendlyDuration(duration);\n\n      if (!this.isValid || !dur.isValid || dur.as(\"milliseconds\") === 0) {\n        return [];\n      }\n\n      var s = this.s,\n          added,\n          next;\n      var results = [];\n\n      while (s < this.e) {\n        added = s.plus(dur);\n        next = +added > +this.e ? this.e : added;\n        results.push(Interval.fromDateTimes(s, next));\n        s = next;\n      }\n\n      return results;\n    }\n    /**\n     * Split this Interval into the specified number of smaller intervals.\n     * @param {number} numberOfParts - The number of Intervals to divide the Interval into.\n     * @return {[Interval]}\n     */\n    ;\n\n    _proto.divideEqually = function divideEqually(numberOfParts) {\n      if (!this.isValid) return [];\n      return this.splitBy(this.length() / numberOfParts).slice(0, numberOfParts);\n    }\n    /**\n     * Return whether this Interval overlaps with the specified Interval\n     * @param {Interval} other\n     * @return {boolean}\n     */\n    ;\n\n    _proto.overlaps = function overlaps(other) {\n      return this.e > other.s && this.s < other.e;\n    }\n    /**\n     * Return whether this Interval's end is adjacent to the specified Interval's start.\n     * @param {Interval} other\n     * @return {boolean}\n     */\n    ;\n\n    _proto.abutsStart = function abutsStart(other) {\n      if (!this.isValid) return false;\n      return +this.e === +other.s;\n    }\n    /**\n     * Return whether this Interval's start is adjacent to the specified Interval's end.\n     * @param {Interval} other\n     * @return {boolean}\n     */\n    ;\n\n    _proto.abutsEnd = function abutsEnd(other) {\n      if (!this.isValid) return false;\n      return +other.e === +this.s;\n    }\n    /**\n     * Return whether this Interval engulfs the start and end of the specified Interval.\n     * @param {Interval} other\n     * @return {boolean}\n     */\n    ;\n\n    _proto.engulfs = function engulfs(other) {\n      if (!this.isValid) return false;\n      return this.s <= other.s && this.e >= other.e;\n    }\n    /**\n     * Return whether this Interval has the same start and end as the specified Interval.\n     * @param {Interval} other\n     * @return {boolean}\n     */\n    ;\n\n    _proto.equals = function equals(other) {\n      if (!this.isValid || !other.isValid) {\n        return false;\n      }\n\n      return this.s.equals(other.s) && this.e.equals(other.e);\n    }\n    /**\n     * Return an Interval representing the intersection of this Interval and the specified Interval.\n     * Specifically, the resulting Interval has the maximum start time and the minimum end time of the two Intervals.\n     * Returns null if the intersection is empty, meaning, the intervals don't intersect.\n     * @param {Interval} other\n     * @return {Interval}\n     */\n    ;\n\n    _proto.intersection = function intersection(other) {\n      if (!this.isValid) return this;\n      var s = this.s > other.s ? this.s : other.s,\n          e = this.e < other.e ? this.e : other.e;\n\n      if (s > e) {\n        return null;\n      } else {\n        return Interval.fromDateTimes(s, e);\n      }\n    }\n    /**\n     * Return an Interval representing the union of this Interval and the specified Interval.\n     * Specifically, the resulting Interval has the minimum start time and the maximum end time of the two Intervals.\n     * @param {Interval} other\n     * @return {Interval}\n     */\n    ;\n\n    _proto.union = function union(other) {\n      if (!this.isValid) return this;\n      var s = this.s < other.s ? this.s : other.s,\n          e = this.e > other.e ? this.e : other.e;\n      return Interval.fromDateTimes(s, e);\n    }\n    /**\n     * Merge an array of Intervals into a equivalent minimal set of Intervals.\n     * Combines overlapping and adjacent Intervals.\n     * @param {[Interval]} intervals\n     * @return {[Interval]}\n     */\n    ;\n\n    Interval.merge = function merge(intervals) {\n      var _intervals$sort$reduc = intervals.sort(function (a, b) {\n        return a.s - b.s;\n      }).reduce(function (_ref2, item) {\n        var sofar = _ref2[0],\n            current = _ref2[1];\n\n        if (!current) {\n          return [sofar, item];\n        } else if (current.overlaps(item) || current.abutsStart(item)) {\n          return [sofar, current.union(item)];\n        } else {\n          return [sofar.concat([current]), item];\n        }\n      }, [[], null]),\n          found = _intervals$sort$reduc[0],\n          final = _intervals$sort$reduc[1];\n\n      if (final) {\n        found.push(final);\n      }\n\n      return found;\n    }\n    /**\n     * Return an array of Intervals representing the spans of time that only appear in one of the specified Intervals.\n     * @param {[Interval]} intervals\n     * @return {[Interval]}\n     */\n    ;\n\n    Interval.xor = function xor(intervals) {\n      var _Array$prototype;\n\n      var start = null,\n          currentCount = 0;\n\n      var results = [],\n          ends = intervals.map(function (i) {\n        return [{\n          time: i.s,\n          type: \"s\"\n        }, {\n          time: i.e,\n          type: \"e\"\n        }];\n      }),\n          flattened = (_Array$prototype = Array.prototype).concat.apply(_Array$prototype, ends),\n          arr = flattened.sort(function (a, b) {\n        return a.time - b.time;\n      });\n\n      for (var _iterator = _createForOfIteratorHelperLoose(arr), _step; !(_step = _iterator()).done;) {\n        var i = _step.value;\n        currentCount += i.type === \"s\" ? 1 : -1;\n\n        if (currentCount === 1) {\n          start = i.time;\n        } else {\n          if (start && +start !== +i.time) {\n            results.push(Interval.fromDateTimes(start, i.time));\n          }\n\n          start = null;\n        }\n      }\n\n      return Interval.merge(results);\n    }\n    /**\n     * Return an Interval representing the span of time in this Interval that doesn't overlap with any of the specified Intervals.\n     * @param {...Interval} intervals\n     * @return {[Interval]}\n     */\n    ;\n\n    _proto.difference = function difference() {\n      var _this2 = this;\n\n      for (var _len2 = arguments.length, intervals = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        intervals[_key2] = arguments[_key2];\n      }\n\n      return Interval.xor([this].concat(intervals)).map(function (i) {\n        return _this2.intersection(i);\n      }).filter(function (i) {\n        return i && !i.isEmpty();\n      });\n    }\n    /**\n     * Returns a string representation of this Interval appropriate for debugging.\n     * @return {string}\n     */\n    ;\n\n    _proto.toString = function toString() {\n      if (!this.isValid) return INVALID$1;\n      return \"[\" + this.s.toISO() + \" \\u2013 \" + this.e.toISO() + \")\";\n    }\n    /**\n     * Returns an ISO 8601-compliant string representation of this Interval.\n     * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n     * @param {Object} opts - The same options as {@link DateTime.toISO}\n     * @return {string}\n     */\n    ;\n\n    _proto.toISO = function toISO(opts) {\n      if (!this.isValid) return INVALID$1;\n      return this.s.toISO(opts) + \"/\" + this.e.toISO(opts);\n    }\n    /**\n     * Returns an ISO 8601-compliant string representation of date of this Interval.\n     * The time components are ignored.\n     * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n     * @return {string}\n     */\n    ;\n\n    _proto.toISODate = function toISODate() {\n      if (!this.isValid) return INVALID$1;\n      return this.s.toISODate() + \"/\" + this.e.toISODate();\n    }\n    /**\n     * Returns an ISO 8601-compliant string representation of time of this Interval.\n     * The date components are ignored.\n     * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n     * @param {Object} opts - The same options as {@link DateTime.toISO}\n     * @return {string}\n     */\n    ;\n\n    _proto.toISOTime = function toISOTime(opts) {\n      if (!this.isValid) return INVALID$1;\n      return this.s.toISOTime(opts) + \"/\" + this.e.toISOTime(opts);\n    }\n    /**\n     * Returns a string representation of this Interval formatted according to the specified format string.\n     * @param {string} dateFormat - the format string. This string formats the start and end time. See {@link DateTime.toFormat} for details.\n     * @param {Object} opts - options\n     * @param {string} [opts.separator =  ' \u2013 '] - a separator to place between the start and end representations\n     * @return {string}\n     */\n    ;\n\n    _proto.toFormat = function toFormat(dateFormat, _temp2) {\n      var _ref3 = _temp2 === void 0 ? {} : _temp2,\n          _ref3$separator = _ref3.separator,\n          separator = _ref3$separator === void 0 ? \" \u2013 \" : _ref3$separator;\n\n      if (!this.isValid) return INVALID$1;\n      return \"\" + this.s.toFormat(dateFormat) + separator + this.e.toFormat(dateFormat);\n    }\n    /**\n     * Return a Duration representing the time spanned by this interval.\n     * @param {string|string[]} [unit=['milliseconds']] - the unit or units (such as 'hours' or 'days') to include in the duration.\n     * @param {Object} opts - options that affect the creation of the Duration\n     * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n     * @example Interval.fromDateTimes(dt1, dt2).toDuration().toObject() //=> { milliseconds: 88489257 }\n     * @example Interval.fromDateTimes(dt1, dt2).toDuration('days').toObject() //=> { days: 1.0241812152777778 }\n     * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes']).toObject() //=> { hours: 24, minutes: 34.82095 }\n     * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes', 'seconds']).toObject() //=> { hours: 24, minutes: 34, seconds: 49.257 }\n     * @example Interval.fromDateTimes(dt1, dt2).toDuration('seconds').toObject() //=> { seconds: 88489.257 }\n     * @return {Duration}\n     */\n    ;\n\n    _proto.toDuration = function toDuration(unit, opts) {\n      if (!this.isValid) {\n        return Duration.invalid(this.invalidReason);\n      }\n\n      return this.e.diff(this.s, unit, opts);\n    }\n    /**\n     * Run mapFn on the interval start and end, returning a new Interval from the resulting DateTimes\n     * @param {function} mapFn\n     * @return {Interval}\n     * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.toUTC())\n     * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.plus({ hours: 2 }))\n     */\n    ;\n\n    _proto.mapEndpoints = function mapEndpoints(mapFn) {\n      return Interval.fromDateTimes(mapFn(this.s), mapFn(this.e));\n    };\n\n    _createClass(Interval, [{\n      key: \"start\",\n      get: function get() {\n        return this.isValid ? this.s : null;\n      }\n      /**\n       * Returns the end of the Interval\n       * @type {DateTime}\n       */\n\n    }, {\n      key: \"end\",\n      get: function get() {\n        return this.isValid ? this.e : null;\n      }\n      /**\n       * Returns whether this Interval's end is at least its start, meaning that the Interval isn't 'backwards'.\n       * @type {boolean}\n       */\n\n    }, {\n      key: \"isValid\",\n      get: function get() {\n        return this.invalidReason === null;\n      }\n      /**\n       * Returns an error code if this Interval is invalid, or null if the Interval is valid\n       * @type {string}\n       */\n\n    }, {\n      key: \"invalidReason\",\n      get: function get() {\n        return this.invalid ? this.invalid.reason : null;\n      }\n      /**\n       * Returns an explanation of why this Interval became invalid, or null if the Interval is valid\n       * @type {string}\n       */\n\n    }, {\n      key: \"invalidExplanation\",\n      get: function get() {\n        return this.invalid ? this.invalid.explanation : null;\n      }\n    }]);\n\n    return Interval;\n  }();\n\n  /**\n   * The Info class contains static methods for retrieving general time and date related data. For example, it has methods for finding out if a time zone has a DST, for listing the months in any supported locale, and for discovering which of Luxon features are available in the current environment.\n   */\n\n  var Info = /*#__PURE__*/function () {\n    function Info() {}\n\n    /**\n     * Return whether the specified zone contains a DST.\n     * @param {string|Zone} [zone='local'] - Zone to check. Defaults to the environment's local zone.\n     * @return {boolean}\n     */\n    Info.hasDST = function hasDST(zone) {\n      if (zone === void 0) {\n        zone = Settings.defaultZone;\n      }\n\n      var proto = DateTime.local().setZone(zone).set({\n        month: 12\n      });\n      return !zone.universal && proto.offset !== proto.set({\n        month: 6\n      }).offset;\n    }\n    /**\n     * Return whether the specified zone is a valid IANA specifier.\n     * @param {string} zone - Zone to check\n     * @return {boolean}\n     */\n    ;\n\n    Info.isValidIANAZone = function isValidIANAZone(zone) {\n      return IANAZone.isValidSpecifier(zone) && IANAZone.isValidZone(zone);\n    }\n    /**\n     * Converts the input into a {@link Zone} instance.\n     *\n     * * If `input` is already a Zone instance, it is returned unchanged.\n     * * If `input` is a string containing a valid time zone name, a Zone instance\n     *   with that name is returned.\n     * * If `input` is a string that doesn't refer to a known time zone, a Zone\n     *   instance with {@link Zone.isValid} == false is returned.\n     * * If `input is a number, a Zone instance with the specified fixed offset\n     *   in minutes is returned.\n     * * If `input` is `null` or `undefined`, the default zone is returned.\n     * @param {string|Zone|number} [input] - the value to be converted\n     * @return {Zone}\n     */\n    ;\n\n    Info.normalizeZone = function normalizeZone$1(input) {\n      return normalizeZone(input, Settings.defaultZone);\n    }\n    /**\n     * Return an array of standalone month names.\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n     * @param {string} [length='long'] - the length of the month representation, such as \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\"\n     * @param {Object} opts - options\n     * @param {string} [opts.locale] - the locale code\n     * @param {string} [opts.numberingSystem=null] - the numbering system\n     * @param {string} [opts.outputCalendar='gregory'] - the calendar\n     * @example Info.months()[0] //=> 'January'\n     * @example Info.months('short')[0] //=> 'Jan'\n     * @example Info.months('numeric')[0] //=> '1'\n     * @example Info.months('short', { locale: 'fr-CA' } )[0] //=> 'janv.'\n     * @example Info.months('numeric', { locale: 'ar' })[0] //=> '\u0661'\n     * @example Info.months('long', { outputCalendar: 'islamic' })[0] //=> 'Rabi\u02bb I'\n     * @return {[string]}\n     */\n    ;\n\n    Info.months = function months(length, _temp) {\n      if (length === void 0) {\n        length = \"long\";\n      }\n\n      var _ref = _temp === void 0 ? {} : _temp,\n          _ref$locale = _ref.locale,\n          locale = _ref$locale === void 0 ? null : _ref$locale,\n          _ref$numberingSystem = _ref.numberingSystem,\n          numberingSystem = _ref$numberingSystem === void 0 ? null : _ref$numberingSystem,\n          _ref$outputCalendar = _ref.outputCalendar,\n          outputCalendar = _ref$outputCalendar === void 0 ? \"gregory\" : _ref$outputCalendar;\n\n      return Locale.create(locale, numberingSystem, outputCalendar).months(length);\n    }\n    /**\n     * Return an array of format month names.\n     * Format months differ from standalone months in that they're meant to appear next to the day of the month. In some languages, that\n     * changes the string.\n     * See {@link months}\n     * @param {string} [length='long'] - the length of the month representation, such as \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\"\n     * @param {Object} opts - options\n     * @param {string} [opts.locale] - the locale code\n     * @param {string} [opts.numberingSystem=null] - the numbering system\n     * @param {string} [opts.outputCalendar='gregory'] - the calendar\n     * @return {[string]}\n     */\n    ;\n\n    Info.monthsFormat = function monthsFormat(length, _temp2) {\n      if (length === void 0) {\n        length = \"long\";\n      }\n\n      var _ref2 = _temp2 === void 0 ? {} : _temp2,\n          _ref2$locale = _ref2.locale,\n          locale = _ref2$locale === void 0 ? null : _ref2$locale,\n          _ref2$numberingSystem = _ref2.numberingSystem,\n          numberingSystem = _ref2$numberingSystem === void 0 ? null : _ref2$numberingSystem,\n          _ref2$outputCalendar = _ref2.outputCalendar,\n          outputCalendar = _ref2$outputCalendar === void 0 ? \"gregory\" : _ref2$outputCalendar;\n\n      return Locale.create(locale, numberingSystem, outputCalendar).months(length, true);\n    }\n    /**\n     * Return an array of standalone week names.\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n     * @param {string} [length='long'] - the length of the weekday representation, such as \"narrow\", \"short\", \"long\".\n     * @param {Object} opts - options\n     * @param {string} [opts.locale] - the locale code\n     * @param {string} [opts.numberingSystem=null] - the numbering system\n     * @example Info.weekdays()[0] //=> 'Monday'\n     * @example Info.weekdays('short')[0] //=> 'Mon'\n     * @example Info.weekdays('short', { locale: 'fr-CA' })[0] //=> 'lun.'\n     * @example Info.weekdays('short', { locale: 'ar' })[0] //=> '\u0627\u0644\u0627\u062b\u0646\u064a\u0646'\n     * @return {[string]}\n     */\n    ;\n\n    Info.weekdays = function weekdays(length, _temp3) {\n      if (length === void 0) {\n        length = \"long\";\n      }\n\n      var _ref3 = _temp3 === void 0 ? {} : _temp3,\n          _ref3$locale = _ref3.locale,\n          locale = _ref3$locale === void 0 ? null : _ref3$locale,\n          _ref3$numberingSystem = _ref3.numberingSystem,\n          numberingSystem = _ref3$numberingSystem === void 0 ? null : _ref3$numberingSystem;\n\n      return Locale.create(locale, numberingSystem, null).weekdays(length);\n    }\n    /**\n     * Return an array of format week names.\n     * Format weekdays differ from standalone weekdays in that they're meant to appear next to more date information. In some languages, that\n     * changes the string.\n     * See {@link weekdays}\n     * @param {string} [length='long'] - the length of the weekday representation, such as \"narrow\", \"short\", \"long\".\n     * @param {Object} opts - options\n     * @param {string} [opts.locale=null] - the locale code\n     * @param {string} [opts.numberingSystem=null] - the numbering system\n     * @return {[string]}\n     */\n    ;\n\n    Info.weekdaysFormat = function weekdaysFormat(length, _temp4) {\n      if (length === void 0) {\n        length = \"long\";\n      }\n\n      var _ref4 = _temp4 === void 0 ? {} : _temp4,\n          _ref4$locale = _ref4.locale,\n          locale = _ref4$locale === void 0 ? null : _ref4$locale,\n          _ref4$numberingSystem = _ref4.numberingSystem,\n          numberingSystem = _ref4$numberingSystem === void 0 ? null : _ref4$numberingSystem;\n\n      return Locale.create(locale, numberingSystem, null).weekdays(length, true);\n    }\n    /**\n     * Return an array of meridiems.\n     * @param {Object} opts - options\n     * @param {string} [opts.locale] - the locale code\n     * @example Info.meridiems() //=> [ 'AM', 'PM' ]\n     * @example Info.meridiems({ locale: 'my' }) //=> [ '\u1014\u1036\u1014\u1000\u103a', '\u100a\u1014\u1031' ]\n     * @return {[string]}\n     */\n    ;\n\n    Info.meridiems = function meridiems(_temp5) {\n      var _ref5 = _temp5 === void 0 ? {} : _temp5,\n          _ref5$locale = _ref5.locale,\n          locale = _ref5$locale === void 0 ? null : _ref5$locale;\n\n      return Locale.create(locale).meridiems();\n    }\n    /**\n     * Return an array of eras, such as ['BC', 'AD']. The locale can be specified, but the calendar system is always Gregorian.\n     * @param {string} [length='short'] - the length of the era representation, such as \"short\" or \"long\".\n     * @param {Object} opts - options\n     * @param {string} [opts.locale] - the locale code\n     * @example Info.eras() //=> [ 'BC', 'AD' ]\n     * @example Info.eras('long') //=> [ 'Before Christ', 'Anno Domini' ]\n     * @example Info.eras('long', { locale: 'fr' }) //=> [ 'avant J\u00e9sus-Christ', 'apr\u00e8s J\u00e9sus-Christ' ]\n     * @return {[string]}\n     */\n    ;\n\n    Info.eras = function eras(length, _temp6) {\n      if (length === void 0) {\n        length = \"short\";\n      }\n\n      var _ref6 = _temp6 === void 0 ? {} : _temp6,\n          _ref6$locale = _ref6.locale,\n          locale = _ref6$locale === void 0 ? null : _ref6$locale;\n\n      return Locale.create(locale, null, \"gregory\").eras(length);\n    }\n    /**\n     * Return the set of available features in this environment.\n     * Some features of Luxon are not available in all environments. For example, on older browsers, timezone support is not available. Use this function to figure out if that's the case.\n     * Keys:\n     * * `zones`: whether this environment supports IANA timezones\n     * * `intlTokens`: whether this environment supports internationalized token-based formatting/parsing\n     * * `intl`: whether this environment supports general internationalization\n     * * `relative`: whether this environment supports relative time formatting\n     * @example Info.features() //=> { intl: true, intlTokens: false, zones: true, relative: false }\n     * @return {Object}\n     */\n    ;\n\n    Info.features = function features() {\n      var intl = false,\n          intlTokens = false,\n          zones = false,\n          relative = false;\n\n      if (hasIntl()) {\n        intl = true;\n        intlTokens = hasFormatToParts();\n        relative = hasRelative();\n\n        try {\n          zones = new Intl.DateTimeFormat(\"en\", {\n            timeZone: \"America/New_York\"\n          }).resolvedOptions().timeZone === \"America/New_York\";\n        } catch (e) {\n          zones = false;\n        }\n      }\n\n      return {\n        intl: intl,\n        intlTokens: intlTokens,\n        zones: zones,\n        relative: relative\n      };\n    };\n\n    return Info;\n  }();\n\n  function dayDiff(earlier, later) {\n    var utcDayStart = function utcDayStart(dt) {\n      return dt.toUTC(0, {\n        keepLocalTime: true\n      }).startOf(\"day\").valueOf();\n    },\n        ms = utcDayStart(later) - utcDayStart(earlier);\n\n    return Math.floor(Duration.fromMillis(ms).as(\"days\"));\n  }\n\n  function highOrderDiffs(cursor, later, units) {\n    var differs = [[\"years\", function (a, b) {\n      return b.year - a.year;\n    }], [\"months\", function (a, b) {\n      return b.month - a.month + (b.year - a.year) * 12;\n    }], [\"weeks\", function (a, b) {\n      var days = dayDiff(a, b);\n      return (days - days % 7) / 7;\n    }], [\"days\", dayDiff]];\n    var results = {};\n    var lowestOrder, highWater;\n\n    for (var _i = 0, _differs = differs; _i < _differs.length; _i++) {\n      var _differs$_i = _differs[_i],\n          unit = _differs$_i[0],\n          differ = _differs$_i[1];\n\n      if (units.indexOf(unit) >= 0) {\n        var _cursor$plus;\n\n        lowestOrder = unit;\n        var delta = differ(cursor, later);\n        highWater = cursor.plus((_cursor$plus = {}, _cursor$plus[unit] = delta, _cursor$plus));\n\n        if (highWater > later) {\n          var _cursor$plus2;\n\n          cursor = cursor.plus((_cursor$plus2 = {}, _cursor$plus2[unit] = delta - 1, _cursor$plus2));\n          delta -= 1;\n        } else {\n          cursor = highWater;\n        }\n\n        results[unit] = delta;\n      }\n    }\n\n    return [cursor, results, highWater, lowestOrder];\n  }\n\n  function _diff (earlier, later, units, opts) {\n    var _highOrderDiffs = highOrderDiffs(earlier, later, units),\n        cursor = _highOrderDiffs[0],\n        results = _highOrderDiffs[1],\n        highWater = _highOrderDiffs[2],\n        lowestOrder = _highOrderDiffs[3];\n\n    var remainingMillis = later - cursor;\n    var lowerOrderUnits = units.filter(function (u) {\n      return [\"hours\", \"minutes\", \"seconds\", \"milliseconds\"].indexOf(u) >= 0;\n    });\n\n    if (lowerOrderUnits.length === 0) {\n      if (highWater < later) {\n        var _cursor$plus3;\n\n        highWater = cursor.plus((_cursor$plus3 = {}, _cursor$plus3[lowestOrder] = 1, _cursor$plus3));\n      }\n\n      if (highWater !== cursor) {\n        results[lowestOrder] = (results[lowestOrder] || 0) + remainingMillis / (highWater - cursor);\n      }\n    }\n\n    var duration = Duration.fromObject(Object.assign(results, opts));\n\n    if (lowerOrderUnits.length > 0) {\n      var _Duration$fromMillis;\n\n      return (_Duration$fromMillis = Duration.fromMillis(remainingMillis, opts)).shiftTo.apply(_Duration$fromMillis, lowerOrderUnits).plus(duration);\n    } else {\n      return duration;\n    }\n  }\n\n  var numberingSystems = {\n    arab: \"[\\u0660-\\u0669]\",\n    arabext: \"[\\u06F0-\\u06F9]\",\n    bali: \"[\\u1B50-\\u1B59]\",\n    beng: \"[\\u09E6-\\u09EF]\",\n    deva: \"[\\u0966-\\u096F]\",\n    fullwide: \"[\\uFF10-\\uFF19]\",\n    gujr: \"[\\u0AE6-\\u0AEF]\",\n    hanidec: \"[\u3007|\u4e00|\u4e8c|\u4e09|\u56db|\u4e94|\u516d|\u4e03|\u516b|\u4e5d]\",\n    khmr: \"[\\u17E0-\\u17E9]\",\n    knda: \"[\\u0CE6-\\u0CEF]\",\n    laoo: \"[\\u0ED0-\\u0ED9]\",\n    limb: \"[\\u1946-\\u194F]\",\n    mlym: \"[\\u0D66-\\u0D6F]\",\n    mong: \"[\\u1810-\\u1819]\",\n    mymr: \"[\\u1040-\\u1049]\",\n    orya: \"[\\u0B66-\\u0B6F]\",\n    tamldec: \"[\\u0BE6-\\u0BEF]\",\n    telu: \"[\\u0C66-\\u0C6F]\",\n    thai: \"[\\u0E50-\\u0E59]\",\n    tibt: \"[\\u0F20-\\u0F29]\",\n    latn: \"\\\\d\"\n  };\n  var numberingSystemsUTF16 = {\n    arab: [1632, 1641],\n    arabext: [1776, 1785],\n    bali: [6992, 7001],\n    beng: [2534, 2543],\n    deva: [2406, 2415],\n    fullwide: [65296, 65303],\n    gujr: [2790, 2799],\n    khmr: [6112, 6121],\n    knda: [3302, 3311],\n    laoo: [3792, 3801],\n    limb: [6470, 6479],\n    mlym: [3430, 3439],\n    mong: [6160, 6169],\n    mymr: [4160, 4169],\n    orya: [2918, 2927],\n    tamldec: [3046, 3055],\n    telu: [3174, 3183],\n    thai: [3664, 3673],\n    tibt: [3872, 3881]\n  }; // eslint-disable-next-line\n\n  var hanidecChars = numberingSystems.hanidec.replace(/[\\[|\\]]/g, \"\").split(\"\");\n  function parseDigits(str) {\n    var value = parseInt(str, 10);\n\n    if (isNaN(value)) {\n      value = \"\";\n\n      for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n\n        if (str[i].search(numberingSystems.hanidec) !== -1) {\n          value += hanidecChars.indexOf(str[i]);\n        } else {\n          for (var key in numberingSystemsUTF16) {\n            var _numberingSystemsUTF = numberingSystemsUTF16[key],\n                min = _numberingSystemsUTF[0],\n                max = _numberingSystemsUTF[1];\n\n            if (code >= min && code <= max) {\n              value += code - min;\n            }\n          }\n        }\n      }\n\n      return parseInt(value, 10);\n    } else {\n      return value;\n    }\n  }\n  function digitRegex(_ref, append) {\n    var numberingSystem = _ref.numberingSystem;\n\n    if (append === void 0) {\n      append = \"\";\n    }\n\n    return new RegExp(\"\" + numberingSystems[numberingSystem || \"latn\"] + append);\n  }\n\n  var MISSING_FTP = \"missing Intl.DateTimeFormat.formatToParts support\";\n\n  function intUnit(regex, post) {\n    if (post === void 0) {\n      post = function post(i) {\n        return i;\n      };\n    }\n\n    return {\n      regex: regex,\n      deser: function deser(_ref) {\n        var s = _ref[0];\n        return post(parseDigits(s));\n      }\n    };\n  }\n\n  var NBSP = String.fromCharCode(160);\n  var spaceOrNBSP = \"[ \" + NBSP + \"]\";\n  var spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, \"g\");\n\n  function fixListRegex(s) {\n    // make dots optional and also make them literal\n    // make space and non breakable space characters interchangeable\n    return s.replace(/\\./g, \"\\\\.?\").replace(spaceOrNBSPRegExp, spaceOrNBSP);\n  }\n\n  function stripInsensitivities(s) {\n    return s.replace(/\\./g, \"\") // ignore dots that were made optional\n    .replace(spaceOrNBSPRegExp, \" \") // interchange space and nbsp\n    .toLowerCase();\n  }\n\n  function oneOf(strings, startIndex) {\n    if (strings === null) {\n      return null;\n    } else {\n      return {\n        regex: RegExp(strings.map(fixListRegex).join(\"|\")),\n        deser: function deser(_ref2) {\n          var s = _ref2[0];\n          return strings.findIndex(function (i) {\n            return stripInsensitivities(s) === stripInsensitivities(i);\n          }) + startIndex;\n        }\n      };\n    }\n  }\n\n  function offset(regex, groups) {\n    return {\n      regex: regex,\n      deser: function deser(_ref3) {\n        var h = _ref3[1],\n            m = _ref3[2];\n        return signedOffset(h, m);\n      },\n      groups: groups\n    };\n  }\n\n  function simple(regex) {\n    return {\n      regex: regex,\n      deser: function deser(_ref4) {\n        var s = _ref4[0];\n        return s;\n      }\n    };\n  }\n\n  function escapeToken(value) {\n    // eslint-disable-next-line no-useless-escape\n    return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n  }\n\n  function unitForToken(token, loc) {\n    var one = digitRegex(loc),\n        two = digitRegex(loc, \"{2}\"),\n        three = digitRegex(loc, \"{3}\"),\n        four = digitRegex(loc, \"{4}\"),\n        six = digitRegex(loc, \"{6}\"),\n        oneOrTwo = digitRegex(loc, \"{1,2}\"),\n        oneToThree = digitRegex(loc, \"{1,3}\"),\n        oneToSix = digitRegex(loc, \"{1,6}\"),\n        oneToNine = digitRegex(loc, \"{1,9}\"),\n        twoToFour = digitRegex(loc, \"{2,4}\"),\n        fourToSix = digitRegex(loc, \"{4,6}\"),\n        literal = function literal(t) {\n      return {\n        regex: RegExp(escapeToken(t.val)),\n        deser: function deser(_ref5) {\n          var s = _ref5[0];\n          return s;\n        },\n        literal: true\n      };\n    },\n        unitate = function unitate(t) {\n      if (token.literal) {\n        return literal(t);\n      }\n\n      switch (t.val) {\n        // era\n        case \"G\":\n          return oneOf(loc.eras(\"short\", false), 0);\n\n        case \"GG\":\n          return oneOf(loc.eras(\"long\", false), 0);\n        // years\n\n        case \"y\":\n          return intUnit(oneToSix);\n\n        case \"yy\":\n          return intUnit(twoToFour, untruncateYear);\n\n        case \"yyyy\":\n          return intUnit(four);\n\n        case \"yyyyy\":\n          return intUnit(fourToSix);\n\n        case \"yyyyyy\":\n          return intUnit(six);\n        // months\n\n        case \"M\":\n          return intUnit(oneOrTwo);\n\n        case \"MM\":\n          return intUnit(two);\n\n        case \"MMM\":\n          return oneOf(loc.months(\"short\", true, false), 1);\n\n        case \"MMMM\":\n          return oneOf(loc.months(\"long\", true, false), 1);\n\n        case \"L\":\n          return intUnit(oneOrTwo);\n\n        case \"LL\":\n          return intUnit(two);\n\n        case \"LLL\":\n          return oneOf(loc.months(\"short\", false, false), 1);\n\n        case \"LLLL\":\n          return oneOf(loc.months(\"long\", false, false), 1);\n        // dates\n\n        case \"d\":\n          return intUnit(oneOrTwo);\n\n        case \"dd\":\n          return intUnit(two);\n        // ordinals\n\n        case \"o\":\n          return intUnit(oneToThree);\n\n        case \"ooo\":\n          return intUnit(three);\n        // time\n\n        case \"HH\":\n          return intUnit(two);\n\n        case \"H\":\n          return intUnit(oneOrTwo);\n\n        case \"hh\":\n          return intUnit(two);\n\n        case \"h\":\n          return intUnit(oneOrTwo);\n\n        case \"mm\":\n          return intUnit(two);\n\n        case \"m\":\n          return intUnit(oneOrTwo);\n\n        case \"q\":\n          return intUnit(oneOrTwo);\n\n        case \"qq\":\n          return intUnit(two);\n\n        case \"s\":\n          return intUnit(oneOrTwo);\n\n        case \"ss\":\n          return intUnit(two);\n\n        case \"S\":\n          return intUnit(oneToThree);\n\n        case \"SSS\":\n          return intUnit(three);\n\n        case \"u\":\n          return simple(oneToNine);\n        // meridiem\n\n        case \"a\":\n          return oneOf(loc.meridiems(), 0);\n        // weekYear (k)\n\n        case \"kkkk\":\n          return intUnit(four);\n\n        case \"kk\":\n          return intUnit(twoToFour, untruncateYear);\n        // weekNumber (W)\n\n        case \"W\":\n          return intUnit(oneOrTwo);\n\n        case \"WW\":\n          return intUnit(two);\n        // weekdays\n\n        case \"E\":\n        case \"c\":\n          return intUnit(one);\n\n        case \"EEE\":\n          return oneOf(loc.weekdays(\"short\", false, false), 1);\n\n        case \"EEEE\":\n          return oneOf(loc.weekdays(\"long\", false, false), 1);\n\n        case \"ccc\":\n          return oneOf(loc.weekdays(\"short\", true, false), 1);\n\n        case \"cccc\":\n          return oneOf(loc.weekdays(\"long\", true, false), 1);\n        // offset/zone\n\n        case \"Z\":\n        case \"ZZ\":\n          return offset(new RegExp(\"([+-]\" + oneOrTwo.source + \")(?::(\" + two.source + \"))?\"), 2);\n\n        case \"ZZZ\":\n          return offset(new RegExp(\"([+-]\" + oneOrTwo.source + \")(\" + two.source + \")?\"), 2);\n        // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing\n        // because we don't have any way to figure out what they are\n\n        case \"z\":\n          return simple(/[a-z_+-/]{1,256}?/i);\n\n        default:\n          return literal(t);\n      }\n    };\n\n    var unit = unitate(token) || {\n      invalidReason: MISSING_FTP\n    };\n    unit.token = token;\n    return unit;\n  }\n\n  var partTypeStyleToTokenVal = {\n    year: {\n      \"2-digit\": \"yy\",\n      numeric: \"yyyyy\"\n    },\n    month: {\n      numeric: \"M\",\n      \"2-digit\": \"MM\",\n      short: \"MMM\",\n      long: \"MMMM\"\n    },\n    day: {\n      numeric: \"d\",\n      \"2-digit\": \"dd\"\n    },\n    weekday: {\n      short: \"EEE\",\n      long: \"EEEE\"\n    },\n    dayperiod: \"a\",\n    dayPeriod: \"a\",\n    hour: {\n      numeric: \"h\",\n      \"2-digit\": \"hh\"\n    },\n    minute: {\n      numeric: \"m\",\n      \"2-digit\": \"mm\"\n    },\n    second: {\n      numeric: \"s\",\n      \"2-digit\": \"ss\"\n    }\n  };\n\n  function tokenForPart(part, locale, formatOpts) {\n    var type = part.type,\n        value = part.value;\n\n    if (type === \"literal\") {\n      return {\n        literal: true,\n        val: value\n      };\n    }\n\n    var style = formatOpts[type];\n    var val = partTypeStyleToTokenVal[type];\n\n    if (typeof val === \"object\") {\n      val = val[style];\n    }\n\n    if (val) {\n      return {\n        literal: false,\n        val: val\n      };\n    }\n\n    return undefined;\n  }\n\n  function buildRegex(units) {\n    var re = units.map(function (u) {\n      return u.regex;\n    }).reduce(function (f, r) {\n      return f + \"(\" + r.source + \")\";\n    }, \"\");\n    return [\"^\" + re + \"$\", units];\n  }\n\n  function match(input, regex, handlers) {\n    var matches = input.match(regex);\n\n    if (matches) {\n      var all = {};\n      var matchIndex = 1;\n\n      for (var i in handlers) {\n        if (hasOwnProperty(handlers, i)) {\n          var h = handlers[i],\n              groups = h.groups ? h.groups + 1 : 1;\n\n          if (!h.literal && h.token) {\n            all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));\n          }\n\n          matchIndex += groups;\n        }\n      }\n\n      return [matches, all];\n    } else {\n      return [matches, {}];\n    }\n  }\n\n  function dateTimeFromMatches(matches) {\n    var toField = function toField(token) {\n      switch (token) {\n        case \"S\":\n          return \"millisecond\";\n\n        case \"s\":\n          return \"second\";\n\n        case \"m\":\n          return \"minute\";\n\n        case \"h\":\n        case \"H\":\n          return \"hour\";\n\n        case \"d\":\n          return \"day\";\n\n        case \"o\":\n          return \"ordinal\";\n\n        case \"L\":\n        case \"M\":\n          return \"month\";\n\n        case \"y\":\n          return \"year\";\n\n        case \"E\":\n        case \"c\":\n          return \"weekday\";\n\n        case \"W\":\n          return \"weekNumber\";\n\n        case \"k\":\n          return \"weekYear\";\n\n        case \"q\":\n          return \"quarter\";\n\n        default:\n          return null;\n      }\n    };\n\n    var zone;\n\n    if (!isUndefined(matches.Z)) {\n      zone = new FixedOffsetZone(matches.Z);\n    } else if (!isUndefined(matches.z)) {\n      zone = IANAZone.create(matches.z);\n    } else {\n      zone = null;\n    }\n\n    if (!isUndefined(matches.q)) {\n      matches.M = (matches.q - 1) * 3 + 1;\n    }\n\n    if (!isUndefined(matches.h)) {\n      if (matches.h < 12 && matches.a === 1) {\n        matches.h += 12;\n      } else if (matches.h === 12 && matches.a === 0) {\n        matches.h = 0;\n      }\n    }\n\n    if (matches.G === 0 && matches.y) {\n      matches.y = -matches.y;\n    }\n\n    if (!isUndefined(matches.u)) {\n      matches.S = parseMillis(matches.u);\n    }\n\n    var vals = Object.keys(matches).reduce(function (r, k) {\n      var f = toField(k);\n\n      if (f) {\n        r[f] = matches[k];\n      }\n\n      return r;\n    }, {});\n    return [vals, zone];\n  }\n\n  var dummyDateTimeCache = null;\n\n  function getDummyDateTime() {\n    if (!dummyDateTimeCache) {\n      dummyDateTimeCache = DateTime.fromMillis(1555555555555);\n    }\n\n    return dummyDateTimeCache;\n  }\n\n  function maybeExpandMacroToken(token, locale) {\n    if (token.literal) {\n      return token;\n    }\n\n    var formatOpts = Formatter.macroTokenToFormatOpts(token.val);\n\n    if (!formatOpts) {\n      return token;\n    }\n\n    var formatter = Formatter.create(locale, formatOpts);\n    var parts = formatter.formatDateTimeParts(getDummyDateTime());\n    var tokens = parts.map(function (p) {\n      return tokenForPart(p, locale, formatOpts);\n    });\n\n    if (tokens.includes(undefined)) {\n      return token;\n    }\n\n    return tokens;\n  }\n\n  function expandMacroTokens(tokens, locale) {\n    var _Array$prototype;\n\n    return (_Array$prototype = Array.prototype).concat.apply(_Array$prototype, tokens.map(function (t) {\n      return maybeExpandMacroToken(t, locale);\n    }));\n  }\n  /**\n   * @private\n   */\n\n\n  function explainFromTokens(locale, input, format) {\n    var tokens = expandMacroTokens(Formatter.parseFormat(format), locale),\n        units = tokens.map(function (t) {\n      return unitForToken(t, locale);\n    }),\n        disqualifyingUnit = units.find(function (t) {\n      return t.invalidReason;\n    });\n\n    if (disqualifyingUnit) {\n      return {\n        input: input,\n        tokens: tokens,\n        invalidReason: disqualifyingUnit.invalidReason\n      };\n    } else {\n      var _buildRegex = buildRegex(units),\n          regexString = _buildRegex[0],\n          handlers = _buildRegex[1],\n          regex = RegExp(regexString, \"i\"),\n          _match = match(input, regex, handlers),\n          rawMatches = _match[0],\n          matches = _match[1],\n          _ref6 = matches ? dateTimeFromMatches(matches) : [null, null],\n          result = _ref6[0],\n          zone = _ref6[1];\n\n      if (hasOwnProperty(matches, \"a\") && hasOwnProperty(matches, \"H\")) {\n        throw new ConflictingSpecificationError(\"Can't include meridiem when specifying 24-hour format\");\n      }\n\n      return {\n        input: input,\n        tokens: tokens,\n        regex: regex,\n        rawMatches: rawMatches,\n        matches: matches,\n        result: result,\n        zone: zone\n      };\n    }\n  }\n  function parseFromTokens(locale, input, format) {\n    var _explainFromTokens = explainFromTokens(locale, input, format),\n        result = _explainFromTokens.result,\n        zone = _explainFromTokens.zone,\n        invalidReason = _explainFromTokens.invalidReason;\n\n    return [result, zone, invalidReason];\n  }\n\n  var nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],\n      leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];\n\n  function unitOutOfRange(unit, value) {\n    return new Invalid(\"unit out of range\", \"you specified \" + value + \" (of type \" + typeof value + \") as a \" + unit + \", which is invalid\");\n  }\n\n  function dayOfWeek(year, month, day) {\n    var js = new Date(Date.UTC(year, month - 1, day)).getUTCDay();\n    return js === 0 ? 7 : js;\n  }\n\n  function computeOrdinal(year, month, day) {\n    return day + (isLeapYear(year) ? leapLadder : nonLeapLadder)[month - 1];\n  }\n\n  function uncomputeOrdinal(year, ordinal) {\n    var table = isLeapYear(year) ? leapLadder : nonLeapLadder,\n        month0 = table.findIndex(function (i) {\n      return i < ordinal;\n    }),\n        day = ordinal - table[month0];\n    return {\n      month: month0 + 1,\n      day: day\n    };\n  }\n  /**\n   * @private\n   */\n\n\n  function gregorianToWeek(gregObj) {\n    var year = gregObj.year,\n        month = gregObj.month,\n        day = gregObj.day,\n        ordinal = computeOrdinal(year, month, day),\n        weekday = dayOfWeek(year, month, day);\n    var weekNumber = Math.floor((ordinal - weekday + 10) / 7),\n        weekYear;\n\n    if (weekNumber < 1) {\n      weekYear = year - 1;\n      weekNumber = weeksInWeekYear(weekYear);\n    } else if (weekNumber > weeksInWeekYear(year)) {\n      weekYear = year + 1;\n      weekNumber = 1;\n    } else {\n      weekYear = year;\n    }\n\n    return Object.assign({\n      weekYear: weekYear,\n      weekNumber: weekNumber,\n      weekday: weekday\n    }, timeObject(gregObj));\n  }\n  function weekToGregorian(weekData) {\n    var weekYear = weekData.weekYear,\n        weekNumber = weekData.weekNumber,\n        weekday = weekData.weekday,\n        weekdayOfJan4 = dayOfWeek(weekYear, 1, 4),\n        yearInDays = daysInYear(weekYear);\n    var ordinal = weekNumber * 7 + weekday - weekdayOfJan4 - 3,\n        year;\n\n    if (ordinal < 1) {\n      year = weekYear - 1;\n      ordinal += daysInYear(year);\n    } else if (ordinal > yearInDays) {\n      year = weekYear + 1;\n      ordinal -= daysInYear(weekYear);\n    } else {\n      year = weekYear;\n    }\n\n    var _uncomputeOrdinal = uncomputeOrdinal(year, ordinal),\n        month = _uncomputeOrdinal.month,\n        day = _uncomputeOrdinal.day;\n\n    return Object.assign({\n      year: year,\n      month: month,\n      day: day\n    }, timeObject(weekData));\n  }\n  function gregorianToOrdinal(gregData) {\n    var year = gregData.year,\n        month = gregData.month,\n        day = gregData.day,\n        ordinal = computeOrdinal(year, month, day);\n    return Object.assign({\n      year: year,\n      ordinal: ordinal\n    }, timeObject(gregData));\n  }\n  function ordinalToGregorian(ordinalData) {\n    var year = ordinalData.year,\n        ordinal = ordinalData.ordinal,\n        _uncomputeOrdinal2 = uncomputeOrdinal(year, ordinal),\n        month = _uncomputeOrdinal2.month,\n        day = _uncomputeOrdinal2.day;\n\n    return Object.assign({\n      year: year,\n      month: month,\n      day: day\n    }, timeObject(ordinalData));\n  }\n  function hasInvalidWeekData(obj) {\n    var validYear = isInteger(obj.weekYear),\n        validWeek = integerBetween(obj.weekNumber, 1, weeksInWeekYear(obj.weekYear)),\n        validWeekday = integerBetween(obj.weekday, 1, 7);\n\n    if (!validYear) {\n      return unitOutOfRange(\"weekYear\", obj.weekYear);\n    } else if (!validWeek) {\n      return unitOutOfRange(\"week\", obj.week);\n    } else if (!validWeekday) {\n      return unitOutOfRange(\"weekday\", obj.weekday);\n    } else return false;\n  }\n  function hasInvalidOrdinalData(obj) {\n    var validYear = isInteger(obj.year),\n        validOrdinal = integerBetween(obj.ordinal, 1, daysInYear(obj.year));\n\n    if (!validYear) {\n      return unitOutOfRange(\"year\", obj.year);\n    } else if (!validOrdinal) {\n      return unitOutOfRange(\"ordinal\", obj.ordinal);\n    } else return false;\n  }\n  function hasInvalidGregorianData(obj) {\n    var validYear = isInteger(obj.year),\n        validMonth = integerBetween(obj.month, 1, 12),\n        validDay = integerBetween(obj.day, 1, daysInMonth(obj.year, obj.month));\n\n    if (!validYear) {\n      return unitOutOfRange(\"year\", obj.year);\n    } else if (!validMonth) {\n      return unitOutOfRange(\"month\", obj.month);\n    } else if (!validDay) {\n      return unitOutOfRange(\"day\", obj.day);\n    } else return false;\n  }\n  function hasInvalidTimeData(obj) {\n    var hour = obj.hour,\n        minute = obj.minute,\n        second = obj.second,\n        millisecond = obj.millisecond;\n    var validHour = integerBetween(hour, 0, 23) || hour === 24 && minute === 0 && second === 0 && millisecond === 0,\n        validMinute = integerBetween(minute, 0, 59),\n        validSecond = integerBetween(second, 0, 59),\n        validMillisecond = integerBetween(millisecond, 0, 999);\n\n    if (!validHour) {\n      return unitOutOfRange(\"hour\", hour);\n    } else if (!validMinute) {\n      return unitOutOfRange(\"minute\", minute);\n    } else if (!validSecond) {\n      return unitOutOfRange(\"second\", second);\n    } else if (!validMillisecond) {\n      return unitOutOfRange(\"millisecond\", millisecond);\n    } else return false;\n  }\n\n  var INVALID$2 = \"Invalid DateTime\";\n  var MAX_DATE = 8.64e15;\n\n  function unsupportedZone(zone) {\n    return new Invalid(\"unsupported zone\", \"the zone \\\"\" + zone.name + \"\\\" is not supported\");\n  } // we cache week data on the DT object and this intermediates the cache\n\n\n  function possiblyCachedWeekData(dt) {\n    if (dt.weekData === null) {\n      dt.weekData = gregorianToWeek(dt.c);\n    }\n\n    return dt.weekData;\n  } // clone really means, \"make a new object with these modifications\". all \"setters\" really use this\n  // to create a new object while only changing some of the properties\n\n\n  function clone$1(inst, alts) {\n    var current = {\n      ts: inst.ts,\n      zone: inst.zone,\n      c: inst.c,\n      o: inst.o,\n      loc: inst.loc,\n      invalid: inst.invalid\n    };\n    return new DateTime(Object.assign({}, current, alts, {\n      old: current\n    }));\n  } // find the right offset a given local time. The o input is our guess, which determines which\n  // offset we'll pick in ambiguous cases (e.g. there are two 3 AMs b/c Fallback DST)\n\n\n  function fixOffset(localTS, o, tz) {\n    // Our UTC time is just a guess because our offset is just a guess\n    var utcGuess = localTS - o * 60 * 1000; // Test whether the zone matches the offset for this ts\n\n    var o2 = tz.offset(utcGuess); // If so, offset didn't change and we're done\n\n    if (o === o2) {\n      return [utcGuess, o];\n    } // If not, change the ts by the difference in the offset\n\n\n    utcGuess -= (o2 - o) * 60 * 1000; // If that gives us the local time we want, we're done\n\n    var o3 = tz.offset(utcGuess);\n\n    if (o2 === o3) {\n      return [utcGuess, o2];\n    } // If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time\n\n\n    return [localTS - Math.min(o2, o3) * 60 * 1000, Math.max(o2, o3)];\n  } // convert an epoch timestamp into a calendar object with the given offset\n\n\n  function tsToObj(ts, offset) {\n    ts += offset * 60 * 1000;\n    var d = new Date(ts);\n    return {\n      year: d.getUTCFullYear(),\n      month: d.getUTCMonth() + 1,\n      day: d.getUTCDate(),\n      hour: d.getUTCHours(),\n      minute: d.getUTCMinutes(),\n      second: d.getUTCSeconds(),\n      millisecond: d.getUTCMilliseconds()\n    };\n  } // convert a calendar object to a epoch timestamp\n\n\n  function objToTS(obj, offset, zone) {\n    return fixOffset(objToLocalTS(obj), offset, zone);\n  } // create a new DT instance by adding a duration, adjusting for DSTs\n\n\n  function adjustTime(inst, dur) {\n    var oPre = inst.o,\n        year = inst.c.year + Math.trunc(dur.years),\n        month = inst.c.month + Math.trunc(dur.months) + Math.trunc(dur.quarters) * 3,\n        c = Object.assign({}, inst.c, {\n      year: year,\n      month: month,\n      day: Math.min(inst.c.day, daysInMonth(year, month)) + Math.trunc(dur.days) + Math.trunc(dur.weeks) * 7\n    }),\n        millisToAdd = Duration.fromObject({\n      years: dur.years - Math.trunc(dur.years),\n      quarters: dur.quarters - Math.trunc(dur.quarters),\n      months: dur.months - Math.trunc(dur.months),\n      weeks: dur.weeks - Math.trunc(dur.weeks),\n      days: dur.days - Math.trunc(dur.days),\n      hours: dur.hours,\n      minutes: dur.minutes,\n      seconds: dur.seconds,\n      milliseconds: dur.milliseconds\n    }).as(\"milliseconds\"),\n        localTS = objToLocalTS(c);\n\n    var _fixOffset = fixOffset(localTS, oPre, inst.zone),\n        ts = _fixOffset[0],\n        o = _fixOffset[1];\n\n    if (millisToAdd !== 0) {\n      ts += millisToAdd; // that could have changed the offset by going over a DST, but we want to keep the ts the same\n\n      o = inst.zone.offset(ts);\n    }\n\n    return {\n      ts: ts,\n      o: o\n    };\n  } // helper useful in turning the results of parsing into real dates\n  // by handling the zone options\n\n\n  function parseDataToDateTime(parsed, parsedZone, opts, format, text) {\n    var setZone = opts.setZone,\n        zone = opts.zone;\n\n    if (parsed && Object.keys(parsed).length !== 0) {\n      var interpretationZone = parsedZone || zone,\n          inst = DateTime.fromObject(Object.assign(parsed, opts, {\n        zone: interpretationZone,\n        // setZone is a valid option in the calling methods, but not in fromObject\n        setZone: undefined\n      }));\n      return setZone ? inst : inst.setZone(zone);\n    } else {\n      return DateTime.invalid(new Invalid(\"unparsable\", \"the input \\\"\" + text + \"\\\" can't be parsed as \" + format));\n    }\n  } // if you want to output a technical format (e.g. RFC 2822), this helper\n  // helps handle the details\n\n\n  function toTechFormat(dt, format, allowZ) {\n    if (allowZ === void 0) {\n      allowZ = true;\n    }\n\n    return dt.isValid ? Formatter.create(Locale.create(\"en-US\"), {\n      allowZ: allowZ,\n      forceSimple: true\n    }).formatDateTimeFromString(dt, format) : null;\n  } // technical time formats (e.g. the time part of ISO 8601), take some options\n  // and this commonizes their handling\n\n\n  function toTechTimeFormat(dt, _ref) {\n    var _ref$suppressSeconds = _ref.suppressSeconds,\n        suppressSeconds = _ref$suppressSeconds === void 0 ? false : _ref$suppressSeconds,\n        _ref$suppressMillisec = _ref.suppressMilliseconds,\n        suppressMilliseconds = _ref$suppressMillisec === void 0 ? false : _ref$suppressMillisec,\n        includeOffset = _ref.includeOffset,\n        _ref$includeZone = _ref.includeZone,\n        includeZone = _ref$includeZone === void 0 ? false : _ref$includeZone,\n        _ref$spaceZone = _ref.spaceZone,\n        spaceZone = _ref$spaceZone === void 0 ? false : _ref$spaceZone,\n        _ref$format = _ref.format,\n        format = _ref$format === void 0 ? \"extended\" : _ref$format;\n    var fmt = format === \"basic\" ? \"HHmm\" : \"HH:mm\";\n\n    if (!suppressSeconds || dt.second !== 0 || dt.millisecond !== 0) {\n      fmt += format === \"basic\" ? \"ss\" : \":ss\";\n\n      if (!suppressMilliseconds || dt.millisecond !== 0) {\n        fmt += \".SSS\";\n      }\n    }\n\n    if ((includeZone || includeOffset) && spaceZone) {\n      fmt += \" \";\n    }\n\n    if (includeZone) {\n      fmt += \"z\";\n    } else if (includeOffset) {\n      fmt += format === \"basic\" ? \"ZZZ\" : \"ZZ\";\n    }\n\n    return toTechFormat(dt, fmt);\n  } // defaults for unspecified units in the supported calendars\n\n\n  var defaultUnitValues = {\n    month: 1,\n    day: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0\n  },\n      defaultWeekUnitValues = {\n    weekNumber: 1,\n    weekday: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0\n  },\n      defaultOrdinalUnitValues = {\n    ordinal: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0\n  }; // Units in the supported calendars, sorted by bigness\n\n  var orderedUnits$1 = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\", \"millisecond\"],\n      orderedWeekUnits = [\"weekYear\", \"weekNumber\", \"weekday\", \"hour\", \"minute\", \"second\", \"millisecond\"],\n      orderedOrdinalUnits = [\"year\", \"ordinal\", \"hour\", \"minute\", \"second\", \"millisecond\"]; // standardize case and plurality in units\n\n  function normalizeUnit(unit) {\n    var normalized = {\n      year: \"year\",\n      years: \"year\",\n      month: \"month\",\n      months: \"month\",\n      day: \"day\",\n      days: \"day\",\n      hour: \"hour\",\n      hours: \"hour\",\n      minute: \"minute\",\n      minutes: \"minute\",\n      quarter: \"quarter\",\n      quarters: \"quarter\",\n      second: \"second\",\n      seconds: \"second\",\n      millisecond: \"millisecond\",\n      milliseconds: \"millisecond\",\n      weekday: \"weekday\",\n      weekdays: \"weekday\",\n      weeknumber: \"weekNumber\",\n      weeksnumber: \"weekNumber\",\n      weeknumbers: \"weekNumber\",\n      weekyear: \"weekYear\",\n      weekyears: \"weekYear\",\n      ordinal: \"ordinal\"\n    }[unit.toLowerCase()];\n    if (!normalized) throw new InvalidUnitError(unit);\n    return normalized;\n  } // this is a dumbed down version of fromObject() that runs about 60% faster\n  // but doesn't do any validation, makes a bunch of assumptions about what units\n  // are present, and so on.\n\n\n  function quickDT(obj, zone) {\n    // assume we have the higher-order units\n    for (var _iterator = _createForOfIteratorHelperLoose(orderedUnits$1), _step; !(_step = _iterator()).done;) {\n      var u = _step.value;\n\n      if (isUndefined(obj[u])) {\n        obj[u] = defaultUnitValues[u];\n      }\n    }\n\n    var invalid = hasInvalidGregorianData(obj) || hasInvalidTimeData(obj);\n\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    }\n\n    var tsNow = Settings.now(),\n        offsetProvis = zone.offset(tsNow),\n        _objToTS = objToTS(obj, offsetProvis, zone),\n        ts = _objToTS[0],\n        o = _objToTS[1];\n\n    return new DateTime({\n      ts: ts,\n      zone: zone,\n      o: o\n    });\n  }\n\n  function diffRelative(start, end, opts) {\n    var round = isUndefined(opts.round) ? true : opts.round,\n        format = function format(c, unit) {\n      c = roundTo(c, round || opts.calendary ? 0 : 2, true);\n      var formatter = end.loc.clone(opts).relFormatter(opts);\n      return formatter.format(c, unit);\n    },\n        differ = function differ(unit) {\n      if (opts.calendary) {\n        if (!end.hasSame(start, unit)) {\n          return end.startOf(unit).diff(start.startOf(unit), unit).get(unit);\n        } else return 0;\n      } else {\n        return end.diff(start, unit).get(unit);\n      }\n    };\n\n    if (opts.unit) {\n      return format(differ(opts.unit), opts.unit);\n    }\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(opts.units), _step2; !(_step2 = _iterator2()).done;) {\n      var unit = _step2.value;\n      var count = differ(unit);\n\n      if (Math.abs(count) >= 1) {\n        return format(count, unit);\n      }\n    }\n\n    return format(0, opts.units[opts.units.length - 1]);\n  }\n  /**\n   * A DateTime is an immutable data structure representing a specific date and time and accompanying methods. It contains class and instance methods for creating, parsing, interrogating, transforming, and formatting them.\n   *\n   * A DateTime comprises of:\n   * * A timestamp. Each DateTime instance refers to a specific millisecond of the Unix epoch.\n   * * A time zone. Each instance is considered in the context of a specific zone (by default the local system's zone).\n   * * Configuration properties that effect how output strings are formatted, such as `locale`, `numberingSystem`, and `outputCalendar`.\n   *\n   * Here is a brief overview of the most commonly used functionality it provides:\n   *\n   * * **Creation**: To create a DateTime from its components, use one of its factory class methods: {@link local}, {@link utc}, and (most flexibly) {@link fromObject}. To create one from a standard string format, use {@link fromISO}, {@link fromHTTP}, and {@link fromRFC2822}. To create one from a custom string format, use {@link fromFormat}. To create one from a native JS date, use {@link fromJSDate}.\n   * * **Gregorian calendar and time**: To examine the Gregorian properties of a DateTime individually (i.e as opposed to collectively through {@link toObject}), use the {@link year}, {@link month},\n   * {@link day}, {@link hour}, {@link minute}, {@link second}, {@link millisecond} accessors.\n   * * **Week calendar**: For ISO week calendar attributes, see the {@link weekYear}, {@link weekNumber}, and {@link weekday} accessors.\n   * * **Configuration** See the {@link locale} and {@link numberingSystem} accessors.\n   * * **Transformation**: To transform the DateTime into other DateTimes, use {@link set}, {@link reconfigure}, {@link setZone}, {@link setLocale}, {@link plus}, {@link minus}, {@link endOf}, {@link startOf}, {@link toUTC}, and {@link toLocal}.\n   * * **Output**: To convert the DateTime to other representations, use the {@link toRelative}, {@link toRelativeCalendar}, {@link toJSON}, {@link toISO}, {@link toHTTP}, {@link toObject}, {@link toRFC2822}, {@link toString}, {@link toLocaleString}, {@link toFormat}, {@link toMillis} and {@link toJSDate}.\n   *\n   * There's plenty others documented below. In addition, for more information on subtler topics like internationalization, time zones, alternative calendars, validity, and so on, see the external documentation.\n   */\n\n\n  var DateTime = /*#__PURE__*/function () {\n    /**\n     * @access private\n     */\n    function DateTime(config) {\n      var zone = config.zone || Settings.defaultZone;\n      var invalid = config.invalid || (Number.isNaN(config.ts) ? new Invalid(\"invalid input\") : null) || (!zone.isValid ? unsupportedZone(zone) : null);\n      /**\n       * @access private\n       */\n\n      this.ts = isUndefined(config.ts) ? Settings.now() : config.ts;\n      var c = null,\n          o = null;\n\n      if (!invalid) {\n        var unchanged = config.old && config.old.ts === this.ts && config.old.zone.equals(zone);\n\n        if (unchanged) {\n          var _ref2 = [config.old.c, config.old.o];\n          c = _ref2[0];\n          o = _ref2[1];\n        } else {\n          var ot = zone.offset(this.ts);\n          c = tsToObj(this.ts, ot);\n          invalid = Number.isNaN(c.year) ? new Invalid(\"invalid input\") : null;\n          c = invalid ? null : c;\n          o = invalid ? null : ot;\n        }\n      }\n      /**\n       * @access private\n       */\n\n\n      this._zone = zone;\n      /**\n       * @access private\n       */\n\n      this.loc = config.loc || Locale.create();\n      /**\n       * @access private\n       */\n\n      this.invalid = invalid;\n      /**\n       * @access private\n       */\n\n      this.weekData = null;\n      /**\n       * @access private\n       */\n\n      this.c = c;\n      /**\n       * @access private\n       */\n\n      this.o = o;\n      /**\n       * @access private\n       */\n\n      this.isLuxonDateTime = true;\n    } // CONSTRUCT\n\n    /**\n     * Create a local DateTime\n     * @param {number} [year] - The calendar year. If omitted (as in, call `local()` with no arguments), the current time will be used\n     * @param {number} [month=1] - The month, 1-indexed\n     * @param {number} [day=1] - The day of the month\n     * @param {number} [hour=0] - The hour of the day, in 24-hour time\n     * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59\n     * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59\n     * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999\n     * @example DateTime.local()                            //~> now\n     * @example DateTime.local(2017)                        //~> 2017-01-01T00:00:00\n     * @example DateTime.local(2017, 3)                     //~> 2017-03-01T00:00:00\n     * @example DateTime.local(2017, 3, 12)                 //~> 2017-03-12T00:00:00\n     * @example DateTime.local(2017, 3, 12, 5)              //~> 2017-03-12T05:00:00\n     * @example DateTime.local(2017, 3, 12, 5, 45)          //~> 2017-03-12T05:45:00\n     * @example DateTime.local(2017, 3, 12, 5, 45, 10)      //~> 2017-03-12T05:45:10\n     * @example DateTime.local(2017, 3, 12, 5, 45, 10, 765) //~> 2017-03-12T05:45:10.765\n     * @return {DateTime}\n     */\n\n\n    DateTime.local = function local(year, month, day, hour, minute, second, millisecond) {\n      if (isUndefined(year)) {\n        return new DateTime({\n          ts: Settings.now()\n        });\n      } else {\n        return quickDT({\n          year: year,\n          month: month,\n          day: day,\n          hour: hour,\n          minute: minute,\n          second: second,\n          millisecond: millisecond\n        }, Settings.defaultZone);\n      }\n    }\n    /**\n     * Create a DateTime in UTC\n     * @param {number} [year] - The calendar year. If omitted (as in, call `utc()` with no arguments), the current time will be used\n     * @param {number} [month=1] - The month, 1-indexed\n     * @param {number} [day=1] - The day of the month\n     * @param {number} [hour=0] - The hour of the day, in 24-hour time\n     * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59\n     * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59\n     * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999\n     * @example DateTime.utc()                            //~> now\n     * @example DateTime.utc(2017)                        //~> 2017-01-01T00:00:00Z\n     * @example DateTime.utc(2017, 3)                     //~> 2017-03-01T00:00:00Z\n     * @example DateTime.utc(2017, 3, 12)                 //~> 2017-03-12T00:00:00Z\n     * @example DateTime.utc(2017, 3, 12, 5)              //~> 2017-03-12T05:00:00Z\n     * @example DateTime.utc(2017, 3, 12, 5, 45)          //~> 2017-03-12T05:45:00Z\n     * @example DateTime.utc(2017, 3, 12, 5, 45, 10)      //~> 2017-03-12T05:45:10Z\n     * @example DateTime.utc(2017, 3, 12, 5, 45, 10, 765) //~> 2017-03-12T05:45:10.765Z\n     * @return {DateTime}\n     */\n    ;\n\n    DateTime.utc = function utc(year, month, day, hour, minute, second, millisecond) {\n      if (isUndefined(year)) {\n        return new DateTime({\n          ts: Settings.now(),\n          zone: FixedOffsetZone.utcInstance\n        });\n      } else {\n        return quickDT({\n          year: year,\n          month: month,\n          day: day,\n          hour: hour,\n          minute: minute,\n          second: second,\n          millisecond: millisecond\n        }, FixedOffsetZone.utcInstance);\n      }\n    }\n    /**\n     * Create a DateTime from a Javascript Date object. Uses the default zone.\n     * @param {Date} date - a Javascript Date object\n     * @param {Object} options - configuration options for the DateTime\n     * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n     * @return {DateTime}\n     */\n    ;\n\n    DateTime.fromJSDate = function fromJSDate(date, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var ts = isDate(date) ? date.valueOf() : NaN;\n\n      if (Number.isNaN(ts)) {\n        return DateTime.invalid(\"invalid input\");\n      }\n\n      var zoneToUse = normalizeZone(options.zone, Settings.defaultZone);\n\n      if (!zoneToUse.isValid) {\n        return DateTime.invalid(unsupportedZone(zoneToUse));\n      }\n\n      return new DateTime({\n        ts: ts,\n        zone: zoneToUse,\n        loc: Locale.fromObject(options)\n      });\n    }\n    /**\n     * Create a DateTime from a number of milliseconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n     * @param {number} milliseconds - a number of milliseconds since 1970 UTC\n     * @param {Object} options - configuration options for the DateTime\n     * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n     * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n     * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance\n     * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance\n     * @return {DateTime}\n     */\n    ;\n\n    DateTime.fromMillis = function fromMillis(milliseconds, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (!isNumber(milliseconds)) {\n        throw new InvalidArgumentError(\"fromMillis requires a numerical input, but received a \" + typeof milliseconds + \" with value \" + milliseconds);\n      } else if (milliseconds < -MAX_DATE || milliseconds > MAX_DATE) {\n        // this isn't perfect because because we can still end up out of range because of additional shifting, but it's a start\n        return DateTime.invalid(\"Timestamp out of range\");\n      } else {\n        return new DateTime({\n          ts: milliseconds,\n          zone: normalizeZone(options.zone, Settings.defaultZone),\n          loc: Locale.fromObject(options)\n        });\n      }\n    }\n    /**\n     * Create a DateTime from a number of seconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n     * @param {number} seconds - a number of seconds since 1970 UTC\n     * @param {Object} options - configuration options for the DateTime\n     * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n     * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n     * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance\n     * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance\n     * @return {DateTime}\n     */\n    ;\n\n    DateTime.fromSeconds = function fromSeconds(seconds, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (!isNumber(seconds)) {\n        throw new InvalidArgumentError(\"fromSeconds requires a numerical input\");\n      } else {\n        return new DateTime({\n          ts: seconds * 1000,\n          zone: normalizeZone(options.zone, Settings.defaultZone),\n          loc: Locale.fromObject(options)\n        });\n      }\n    }\n    /**\n     * Create a DateTime from a Javascript object with keys like 'year' and 'hour' with reasonable defaults.\n     * @param {Object} obj - the object to create the DateTime from\n     * @param {number} obj.year - a year, such as 1987\n     * @param {number} obj.month - a month, 1-12\n     * @param {number} obj.day - a day of the month, 1-31, depending on the month\n     * @param {number} obj.ordinal - day of the year, 1-365 or 366\n     * @param {number} obj.weekYear - an ISO week year\n     * @param {number} obj.weekNumber - an ISO week number, between 1 and 52 or 53, depending on the year\n     * @param {number} obj.weekday - an ISO weekday, 1-7, where 1 is Monday and 7 is Sunday\n     * @param {number} obj.hour - hour of the day, 0-23\n     * @param {number} obj.minute - minute of the hour, 0-59\n     * @param {number} obj.second - second of the minute, 0-59\n     * @param {number} obj.millisecond - millisecond of the second, 0-999\n     * @param {string|Zone} [obj.zone='local'] - interpret the numbers in the context of a particular zone. Can take any value taken as the first argument to setZone()\n     * @param {string} [obj.locale='system's locale'] - a locale to set on the resulting DateTime instance\n     * @param {string} obj.outputCalendar - the output calendar to set on the resulting DateTime instance\n     * @param {string} obj.numberingSystem - the numbering system to set on the resulting DateTime instance\n     * @example DateTime.fromObject({ year: 1982, month: 5, day: 25}).toISODate() //=> '1982-05-25'\n     * @example DateTime.fromObject({ year: 1982 }).toISODate() //=> '1982-01-01'\n     * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }) //~> today at 10:26:06\n     * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'utc' }),\n     * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'local' })\n     * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'America/New_York' })\n     * @example DateTime.fromObject({ weekYear: 2016, weekNumber: 2, weekday: 3 }).toISODate() //=> '2016-01-13'\n     * @return {DateTime}\n     */\n    ;\n\n    DateTime.fromObject = function fromObject(obj) {\n      var zoneToUse = normalizeZone(obj.zone, Settings.defaultZone);\n\n      if (!zoneToUse.isValid) {\n        return DateTime.invalid(unsupportedZone(zoneToUse));\n      }\n\n      var tsNow = Settings.now(),\n          offsetProvis = zoneToUse.offset(tsNow),\n          normalized = normalizeObject(obj, normalizeUnit, [\"zone\", \"locale\", \"outputCalendar\", \"numberingSystem\"]),\n          containsOrdinal = !isUndefined(normalized.ordinal),\n          containsGregorYear = !isUndefined(normalized.year),\n          containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),\n          containsGregor = containsGregorYear || containsGregorMD,\n          definiteWeekDef = normalized.weekYear || normalized.weekNumber,\n          loc = Locale.fromObject(obj); // cases:\n      // just a weekday -> this week's instance of that weekday, no worries\n      // (gregorian data or ordinal) + (weekYear or weekNumber) -> error\n      // (gregorian month or day) + ordinal -> error\n      // otherwise just use weeks or ordinals or gregorian, depending on what's specified\n\n      if ((containsGregor || containsOrdinal) && definiteWeekDef) {\n        throw new ConflictingSpecificationError(\"Can't mix weekYear/weekNumber units with year/month/day or ordinals\");\n      }\n\n      if (containsGregorMD && containsOrdinal) {\n        throw new ConflictingSpecificationError(\"Can't mix ordinal dates with month/day\");\n      }\n\n      var useWeekData = definiteWeekDef || normalized.weekday && !containsGregor; // configure ourselves to deal with gregorian dates or week stuff\n\n      var units,\n          defaultValues,\n          objNow = tsToObj(tsNow, offsetProvis);\n\n      if (useWeekData) {\n        units = orderedWeekUnits;\n        defaultValues = defaultWeekUnitValues;\n        objNow = gregorianToWeek(objNow);\n      } else if (containsOrdinal) {\n        units = orderedOrdinalUnits;\n        defaultValues = defaultOrdinalUnitValues;\n        objNow = gregorianToOrdinal(objNow);\n      } else {\n        units = orderedUnits$1;\n        defaultValues = defaultUnitValues;\n      } // set default values for missing stuff\n\n\n      var foundFirst = false;\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(units), _step3; !(_step3 = _iterator3()).done;) {\n        var u = _step3.value;\n        var v = normalized[u];\n\n        if (!isUndefined(v)) {\n          foundFirst = true;\n        } else if (foundFirst) {\n          normalized[u] = defaultValues[u];\n        } else {\n          normalized[u] = objNow[u];\n        }\n      } // make sure the values we have are in range\n\n\n      var higherOrderInvalid = useWeekData ? hasInvalidWeekData(normalized) : containsOrdinal ? hasInvalidOrdinalData(normalized) : hasInvalidGregorianData(normalized),\n          invalid = higherOrderInvalid || hasInvalidTimeData(normalized);\n\n      if (invalid) {\n        return DateTime.invalid(invalid);\n      } // compute the actual time\n\n\n      var gregorian = useWeekData ? weekToGregorian(normalized) : containsOrdinal ? ordinalToGregorian(normalized) : normalized,\n          _objToTS2 = objToTS(gregorian, offsetProvis, zoneToUse),\n          tsFinal = _objToTS2[0],\n          offsetFinal = _objToTS2[1],\n          inst = new DateTime({\n        ts: tsFinal,\n        zone: zoneToUse,\n        o: offsetFinal,\n        loc: loc\n      }); // gregorian data + weekday serves only to validate\n\n\n      if (normalized.weekday && containsGregor && obj.weekday !== inst.weekday) {\n        return DateTime.invalid(\"mismatched weekday\", \"you can't specify both a weekday of \" + normalized.weekday + \" and a date of \" + inst.toISO());\n      }\n\n      return inst;\n    }\n    /**\n     * Create a DateTime from an ISO 8601 string\n     * @param {string} text - the ISO string\n     * @param {Object} opts - options to affect the creation\n     * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the time to this zone\n     * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one\n     * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n     * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n     * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n     * @example DateTime.fromISO('2016-05-25T09:08:34.123')\n     * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00')\n     * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00', {setZone: true})\n     * @example DateTime.fromISO('2016-05-25T09:08:34.123', {zone: 'utc'})\n     * @example DateTime.fromISO('2016-W05-4')\n     * @return {DateTime}\n     */\n    ;\n\n    DateTime.fromISO = function fromISO(text, opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      var _parseISODate = parseISODate(text),\n          vals = _parseISODate[0],\n          parsedZone = _parseISODate[1];\n\n      return parseDataToDateTime(vals, parsedZone, opts, \"ISO 8601\", text);\n    }\n    /**\n     * Create a DateTime from an RFC 2822 string\n     * @param {string} text - the RFC 2822 string\n     * @param {Object} opts - options to affect the creation\n     * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since the offset is always specified in the string itself, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.\n     * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one\n     * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n     * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n     * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n     * @example DateTime.fromRFC2822('25 Nov 2016 13:23:12 GMT')\n     * @example DateTime.fromRFC2822('Fri, 25 Nov 2016 13:23:12 +0600')\n     * @example DateTime.fromRFC2822('25 Nov 2016 13:23 Z')\n     * @return {DateTime}\n     */\n    ;\n\n    DateTime.fromRFC2822 = function fromRFC2822(text, opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      var _parseRFC2822Date = parseRFC2822Date(text),\n          vals = _parseRFC2822Date[0],\n          parsedZone = _parseRFC2822Date[1];\n\n      return parseDataToDateTime(vals, parsedZone, opts, \"RFC 2822\", text);\n    }\n    /**\n     * Create a DateTime from an HTTP header date\n     * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1\n     * @param {string} text - the HTTP header date\n     * @param {Object} opts - options to affect the creation\n     * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since HTTP dates are always in UTC, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.\n     * @param {boolean} [opts.setZone=false] - override the zone with the fixed-offset zone specified in the string. For HTTP dates, this is always UTC, so this option is equivalent to setting the `zone` option to 'utc', but this option is included for consistency with similar methods.\n     * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n     * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n     * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n     * @example DateTime.fromHTTP('Sun, 06 Nov 1994 08:49:37 GMT')\n     * @example DateTime.fromHTTP('Sunday, 06-Nov-94 08:49:37 GMT')\n     * @example DateTime.fromHTTP('Sun Nov  6 08:49:37 1994')\n     * @return {DateTime}\n     */\n    ;\n\n    DateTime.fromHTTP = function fromHTTP(text, opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      var _parseHTTPDate = parseHTTPDate(text),\n          vals = _parseHTTPDate[0],\n          parsedZone = _parseHTTPDate[1];\n\n      return parseDataToDateTime(vals, parsedZone, opts, \"HTTP\", opts);\n    }\n    /**\n     * Create a DateTime from an input string and format string.\n     * Defaults to en-US if no locale has been specified, regardless of the system's locale.\n     * @see https://moment.github.io/luxon/docs/manual/parsing.html#table-of-tokens\n     * @param {string} text - the string to parse\n     * @param {string} fmt - the format the string is expected to be in (see the link below for the formats)\n     * @param {Object} opts - options to affect the creation\n     * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone\n     * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one\n     * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale\n     * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system\n     * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n     * @return {DateTime}\n     */\n    ;\n\n    DateTime.fromFormat = function fromFormat(text, fmt, opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      if (isUndefined(text) || isUndefined(fmt)) {\n        throw new InvalidArgumentError(\"fromFormat requires an input string and a format\");\n      }\n\n      var _opts = opts,\n          _opts$locale = _opts.locale,\n          locale = _opts$locale === void 0 ? null : _opts$locale,\n          _opts$numberingSystem = _opts.numberingSystem,\n          numberingSystem = _opts$numberingSystem === void 0 ? null : _opts$numberingSystem,\n          localeToUse = Locale.fromOpts({\n        locale: locale,\n        numberingSystem: numberingSystem,\n        defaultToEN: true\n      }),\n          _parseFromTokens = parseFromTokens(localeToUse, text, fmt),\n          vals = _parseFromTokens[0],\n          parsedZone = _parseFromTokens[1],\n          invalid = _parseFromTokens[2];\n\n      if (invalid) {\n        return DateTime.invalid(invalid);\n      } else {\n        return parseDataToDateTime(vals, parsedZone, opts, \"format \" + fmt, text);\n      }\n    }\n    /**\n     * @deprecated use fromFormat instead\n     */\n    ;\n\n    DateTime.fromString = function fromString(text, fmt, opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      return DateTime.fromFormat(text, fmt, opts);\n    }\n    /**\n     * Create a DateTime from a SQL date, time, or datetime\n     * Defaults to en-US if no locale has been specified, regardless of the system's locale\n     * @param {string} text - the string to parse\n     * @param {Object} opts - options to affect the creation\n     * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone\n     * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one\n     * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale\n     * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system\n     * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n     * @example DateTime.fromSQL('2017-05-15')\n     * @example DateTime.fromSQL('2017-05-15 09:12:34')\n     * @example DateTime.fromSQL('2017-05-15 09:12:34.342')\n     * @example DateTime.fromSQL('2017-05-15 09:12:34.342+06:00')\n     * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles')\n     * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles', { setZone: true })\n     * @example DateTime.fromSQL('2017-05-15 09:12:34.342', { zone: 'America/Los_Angeles' })\n     * @example DateTime.fromSQL('09:12:34.342')\n     * @return {DateTime}\n     */\n    ;\n\n    DateTime.fromSQL = function fromSQL(text, opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      var _parseSQL = parseSQL(text),\n          vals = _parseSQL[0],\n          parsedZone = _parseSQL[1];\n\n      return parseDataToDateTime(vals, parsedZone, opts, \"SQL\", text);\n    }\n    /**\n     * Create an invalid DateTime.\n     * @param {string} reason - simple string of why this DateTime is invalid. Should not contain parameters or anything else data-dependent\n     * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n     * @return {DateTime}\n     */\n    ;\n\n    DateTime.invalid = function invalid(reason, explanation) {\n      if (explanation === void 0) {\n        explanation = null;\n      }\n\n      if (!reason) {\n        throw new InvalidArgumentError(\"need to specify a reason the DateTime is invalid\");\n      }\n\n      var invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n      if (Settings.throwOnInvalid) {\n        throw new InvalidDateTimeError(invalid);\n      } else {\n        return new DateTime({\n          invalid: invalid\n        });\n      }\n    }\n    /**\n     * Check if an object is a DateTime. Works across context boundaries\n     * @param {object} o\n     * @return {boolean}\n     */\n    ;\n\n    DateTime.isDateTime = function isDateTime(o) {\n      return o && o.isLuxonDateTime || false;\n    } // INFO\n\n    /**\n     * Get the value of unit.\n     * @param {string} unit - a unit such as 'minute' or 'day'\n     * @example DateTime.local(2017, 7, 4).get('month'); //=> 7\n     * @example DateTime.local(2017, 7, 4).get('day'); //=> 4\n     * @return {number}\n     */\n    ;\n\n    var _proto = DateTime.prototype;\n\n    _proto.get = function get(unit) {\n      return this[unit];\n    }\n    /**\n     * Returns whether the DateTime is valid. Invalid DateTimes occur when:\n     * * The DateTime was created from invalid calendar information, such as the 13th month or February 30\n     * * The DateTime was created by an operation on another invalid date\n     * @type {boolean}\n     */\n    ;\n\n    /**\n     * Returns the resolved Intl options for this DateTime.\n     * This is useful in understanding the behavior of formatting methods\n     * @param {Object} opts - the same options as toLocaleString\n     * @return {Object}\n     */\n    _proto.resolvedLocaleOpts = function resolvedLocaleOpts(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      var _Formatter$create$res = Formatter.create(this.loc.clone(opts), opts).resolvedOptions(this),\n          locale = _Formatter$create$res.locale,\n          numberingSystem = _Formatter$create$res.numberingSystem,\n          calendar = _Formatter$create$res.calendar;\n\n      return {\n        locale: locale,\n        numberingSystem: numberingSystem,\n        outputCalendar: calendar\n      };\n    } // TRANSFORM\n\n    /**\n     * \"Set\" the DateTime's zone to UTC. Returns a newly-constructed DateTime.\n     *\n     * Equivalent to {@link setZone}('utc')\n     * @param {number} [offset=0] - optionally, an offset from UTC in minutes\n     * @param {Object} [opts={}] - options to pass to `setZone()`\n     * @return {DateTime}\n     */\n    ;\n\n    _proto.toUTC = function toUTC(offset, opts) {\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      return this.setZone(FixedOffsetZone.instance(offset), opts);\n    }\n    /**\n     * \"Set\" the DateTime's zone to the host's local zone. Returns a newly-constructed DateTime.\n     *\n     * Equivalent to `setZone('local')`\n     * @return {DateTime}\n     */\n    ;\n\n    _proto.toLocal = function toLocal() {\n      return this.setZone(Settings.defaultZone);\n    }\n    /**\n     * \"Set\" the DateTime's zone to specified zone. Returns a newly-constructed DateTime.\n     *\n     * By default, the setter keeps the underlying time the same (as in, the same timestamp), but the new instance will report different local times and consider DSTs when making computations, as with {@link plus}. You may wish to use {@link toLocal} and {@link toUTC} which provide simple convenience wrappers for commonly used zones.\n     * @param {string|Zone} [zone='local'] - a zone identifier. As a string, that can be any IANA zone supported by the host environment, or a fixed-offset name of the form 'UTC+3', or the strings 'local' or 'utc'. You may also supply an instance of a {@link Zone} class.\n     * @param {Object} opts - options\n     * @param {boolean} [opts.keepLocalTime=false] - If true, adjust the underlying time so that the local time stays the same, but in the target zone. You should rarely need this.\n     * @return {DateTime}\n     */\n    ;\n\n    _proto.setZone = function setZone(zone, _temp) {\n      var _ref3 = _temp === void 0 ? {} : _temp,\n          _ref3$keepLocalTime = _ref3.keepLocalTime,\n          keepLocalTime = _ref3$keepLocalTime === void 0 ? false : _ref3$keepLocalTime,\n          _ref3$keepCalendarTim = _ref3.keepCalendarTime,\n          keepCalendarTime = _ref3$keepCalendarTim === void 0 ? false : _ref3$keepCalendarTim;\n\n      zone = normalizeZone(zone, Settings.defaultZone);\n\n      if (zone.equals(this.zone)) {\n        return this;\n      } else if (!zone.isValid) {\n        return DateTime.invalid(unsupportedZone(zone));\n      } else {\n        var newTS = this.ts;\n\n        if (keepLocalTime || keepCalendarTime) {\n          var offsetGuess = zone.offset(this.ts);\n          var asObj = this.toObject();\n\n          var _objToTS3 = objToTS(asObj, offsetGuess, zone);\n\n          newTS = _objToTS3[0];\n        }\n\n        return clone$1(this, {\n          ts: newTS,\n          zone: zone\n        });\n      }\n    }\n    /**\n     * \"Set\" the locale, numberingSystem, or outputCalendar. Returns a newly-constructed DateTime.\n     * @param {Object} properties - the properties to set\n     * @example DateTime.local(2017, 5, 25).reconfigure({ locale: 'en-GB' })\n     * @return {DateTime}\n     */\n    ;\n\n    _proto.reconfigure = function reconfigure(_temp2) {\n      var _ref4 = _temp2 === void 0 ? {} : _temp2,\n          locale = _ref4.locale,\n          numberingSystem = _ref4.numberingSystem,\n          outputCalendar = _ref4.outputCalendar;\n\n      var loc = this.loc.clone({\n        locale: locale,\n        numberingSystem: numberingSystem,\n        outputCalendar: outputCalendar\n      });\n      return clone$1(this, {\n        loc: loc\n      });\n    }\n    /**\n     * \"Set\" the locale. Returns a newly-constructed DateTime.\n     * Just a convenient alias for reconfigure({ locale })\n     * @example DateTime.local(2017, 5, 25).setLocale('en-GB')\n     * @return {DateTime}\n     */\n    ;\n\n    _proto.setLocale = function setLocale(locale) {\n      return this.reconfigure({\n        locale: locale\n      });\n    }\n    /**\n     * \"Set\" the values of specified units. Returns a newly-constructed DateTime.\n     * You can only set units with this method; for \"setting\" metadata, see {@link reconfigure} and {@link setZone}.\n     * @param {Object} values - a mapping of units to numbers\n     * @example dt.set({ year: 2017 })\n     * @example dt.set({ hour: 8, minute: 30 })\n     * @example dt.set({ weekday: 5 })\n     * @example dt.set({ year: 2005, ordinal: 234 })\n     * @return {DateTime}\n     */\n    ;\n\n    _proto.set = function set(values) {\n      if (!this.isValid) return this;\n      var normalized = normalizeObject(values, normalizeUnit, []),\n          settingWeekStuff = !isUndefined(normalized.weekYear) || !isUndefined(normalized.weekNumber) || !isUndefined(normalized.weekday);\n      var mixed;\n\n      if (settingWeekStuff) {\n        mixed = weekToGregorian(Object.assign(gregorianToWeek(this.c), normalized));\n      } else if (!isUndefined(normalized.ordinal)) {\n        mixed = ordinalToGregorian(Object.assign(gregorianToOrdinal(this.c), normalized));\n      } else {\n        mixed = Object.assign(this.toObject(), normalized); // if we didn't set the day but we ended up on an overflow date,\n        // use the last day of the right month\n\n        if (isUndefined(normalized.day)) {\n          mixed.day = Math.min(daysInMonth(mixed.year, mixed.month), mixed.day);\n        }\n      }\n\n      var _objToTS4 = objToTS(mixed, this.o, this.zone),\n          ts = _objToTS4[0],\n          o = _objToTS4[1];\n\n      return clone$1(this, {\n        ts: ts,\n        o: o\n      });\n    }\n    /**\n     * Add a period of time to this DateTime and return the resulting DateTime\n     *\n     * Adding hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds. Adding days, months, or years shifts the calendar, accounting for DSTs and leap years along the way. Thus, `dt.plus({ hours: 24 })` may result in a different time than `dt.plus({ days: 1 })` if there's a DST shift in between.\n     * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n     * @example DateTime.local().plus(123) //~> in 123 milliseconds\n     * @example DateTime.local().plus({ minutes: 15 }) //~> in 15 minutes\n     * @example DateTime.local().plus({ days: 1 }) //~> this time tomorrow\n     * @example DateTime.local().plus({ days: -1 }) //~> this time yesterday\n     * @example DateTime.local().plus({ hours: 3, minutes: 13 }) //~> in 3 hr, 13 min\n     * @example DateTime.local().plus(Duration.fromObject({ hours: 3, minutes: 13 })) //~> in 3 hr, 13 min\n     * @return {DateTime}\n     */\n    ;\n\n    _proto.plus = function plus(duration) {\n      if (!this.isValid) return this;\n      var dur = friendlyDuration(duration);\n      return clone$1(this, adjustTime(this, dur));\n    }\n    /**\n     * Subtract a period of time to this DateTime and return the resulting DateTime\n     * See {@link plus}\n     * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n     @return {DateTime}\n    */\n    ;\n\n    _proto.minus = function minus(duration) {\n      if (!this.isValid) return this;\n      var dur = friendlyDuration(duration).negate();\n      return clone$1(this, adjustTime(this, dur));\n    }\n    /**\n     * \"Set\" this DateTime to the beginning of a unit of time.\n     * @param {string} unit - The unit to go to the beginning of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.\n     * @example DateTime.local(2014, 3, 3).startOf('month').toISODate(); //=> '2014-03-01'\n     * @example DateTime.local(2014, 3, 3).startOf('year').toISODate(); //=> '2014-01-01'\n     * @example DateTime.local(2014, 3, 3, 5, 30).startOf('day').toISOTime(); //=> '00:00.000-05:00'\n     * @example DateTime.local(2014, 3, 3, 5, 30).startOf('hour').toISOTime(); //=> '05:00:00.000-05:00'\n     * @return {DateTime}\n     */\n    ;\n\n    _proto.startOf = function startOf(unit) {\n      if (!this.isValid) return this;\n      var o = {},\n          normalizedUnit = Duration.normalizeUnit(unit);\n\n      switch (normalizedUnit) {\n        case \"years\":\n          o.month = 1;\n        // falls through\n\n        case \"quarters\":\n        case \"months\":\n          o.day = 1;\n        // falls through\n\n        case \"weeks\":\n        case \"days\":\n          o.hour = 0;\n        // falls through\n\n        case \"hours\":\n          o.minute = 0;\n        // falls through\n\n        case \"minutes\":\n          o.second = 0;\n        // falls through\n\n        case \"seconds\":\n          o.millisecond = 0;\n          break;\n        // no default, invalid units throw in normalizeUnit()\n      }\n\n      if (normalizedUnit === \"weeks\") {\n        o.weekday = 1;\n      }\n\n      if (normalizedUnit === \"quarters\") {\n        var q = Math.ceil(this.month / 3);\n        o.month = (q - 1) * 3 + 1;\n      }\n\n      return this.set(o);\n    }\n    /**\n     * \"Set\" this DateTime to the end (meaning the last millisecond) of a unit of time\n     * @param {string} unit - The unit to go to the end of. Can be 'year', 'month', 'day', 'hour', 'minute', 'second', or 'millisecond'.\n     * @example DateTime.local(2014, 3, 3).endOf('month').toISO(); //=> '2014-03-31T23:59:59.999-05:00'\n     * @example DateTime.local(2014, 3, 3).endOf('year').toISO(); //=> '2014-12-31T23:59:59.999-05:00'\n     * @example DateTime.local(2014, 3, 3, 5, 30).endOf('day').toISO(); //=> '2014-03-03T23:59:59.999-05:00'\n     * @example DateTime.local(2014, 3, 3, 5, 30).endOf('hour').toISO(); //=> '2014-03-03T05:59:59.999-05:00'\n     * @return {DateTime}\n     */\n    ;\n\n    _proto.endOf = function endOf(unit) {\n      var _this$plus;\n\n      return this.isValid ? this.plus((_this$plus = {}, _this$plus[unit] = 1, _this$plus)).startOf(unit).minus(1) : this;\n    } // OUTPUT\n\n    /**\n     * Returns a string representation of this DateTime formatted according to the specified format string.\n     * **You may not want this.** See {@link toLocaleString} for a more flexible formatting tool. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/docs/manual/formatting.html#table-of-tokens).\n     * Defaults to en-US if no locale has been specified, regardless of the system's locale.\n     * @see https://moment.github.io/luxon/docs/manual/formatting.html#table-of-tokens\n     * @param {string} fmt - the format string\n     * @param {Object} opts - opts to override the configuration options\n     * @example DateTime.local().toFormat('yyyy LLL dd') //=> '2017 Apr 22'\n     * @example DateTime.local().setLocale('fr').toFormat('yyyy LLL dd') //=> '2017 avr. 22'\n     * @example DateTime.local().toFormat('yyyy LLL dd', { locale: \"fr\" }) //=> '2017 avr. 22'\n     * @example DateTime.local().toFormat(\"HH 'hours and' mm 'minutes'\") //=> '20 hours and 55 minutes'\n     * @return {string}\n     */\n    ;\n\n    _proto.toFormat = function toFormat(fmt, opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      return this.isValid ? Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this, fmt) : INVALID$2;\n    }\n    /**\n     * Returns a localized string representing this date. Accepts the same options as the Intl.DateTimeFormat constructor and any presets defined by Luxon, such as `DateTime.DATE_FULL` or `DateTime.TIME_SIMPLE`.\n     * The exact behavior of this method is browser-specific, but in general it will return an appropriate representation\n     * of the DateTime in the assigned locale.\n     * Defaults to the system's locale if no locale has been specified\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n     * @param opts {Object} - Intl.DateTimeFormat constructor options and configuration options\n     * @example DateTime.local().toLocaleString(); //=> 4/20/2017\n     * @example DateTime.local().setLocale('en-gb').toLocaleString(); //=> '20/04/2017'\n     * @example DateTime.local().toLocaleString({ locale: 'en-gb' }); //=> '20/04/2017'\n     * @example DateTime.local().toLocaleString(DateTime.DATE_FULL); //=> 'April 20, 2017'\n     * @example DateTime.local().toLocaleString(DateTime.TIME_SIMPLE); //=> '11:32 AM'\n     * @example DateTime.local().toLocaleString(DateTime.DATETIME_SHORT); //=> '4/20/2017, 11:32 AM'\n     * @example DateTime.local().toLocaleString({ weekday: 'long', month: 'long', day: '2-digit' }); //=> 'Thursday, April 20'\n     * @example DateTime.local().toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> 'Thu, Apr 20, 11:27 AM'\n     * @example DateTime.local().toLocaleString({ hour: '2-digit', minute: '2-digit', hour12: false }); //=> '11:32'\n     * @return {string}\n     */\n    ;\n\n    _proto.toLocaleString = function toLocaleString(opts) {\n      if (opts === void 0) {\n        opts = DATE_SHORT;\n      }\n\n      return this.isValid ? Formatter.create(this.loc.clone(opts), opts).formatDateTime(this) : INVALID$2;\n    }\n    /**\n     * Returns an array of format \"parts\", meaning individual tokens along with metadata. This is allows callers to post-process individual sections of the formatted output.\n     * Defaults to the system's locale if no locale has been specified\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/formatToParts\n     * @param opts {Object} - Intl.DateTimeFormat constructor options, same as `toLocaleString`.\n     * @example DateTime.local().toLocaleParts(); //=> [\n     *                                   //=>   { type: 'day', value: '25' },\n     *                                   //=>   { type: 'literal', value: '/' },\n     *                                   //=>   { type: 'month', value: '05' },\n     *                                   //=>   { type: 'literal', value: '/' },\n     *                                   //=>   { type: 'year', value: '1982' }\n     *                                   //=> ]\n     */\n    ;\n\n    _proto.toLocaleParts = function toLocaleParts(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      return this.isValid ? Formatter.create(this.loc.clone(opts), opts).formatDateTimeParts(this) : [];\n    }\n    /**\n     * Returns an ISO 8601-compliant string representation of this DateTime\n     * @param {Object} opts - options\n     * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n     * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n     * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n     * @param {string} [opts.format='extended'] - choose between the basic and extended format\n     * @example DateTime.utc(1982, 5, 25).toISO() //=> '1982-05-25T00:00:00.000Z'\n     * @example DateTime.local().toISO() //=> '2017-04-22T20:47:05.335-04:00'\n     * @example DateTime.local().toISO({ includeOffset: false }) //=> '2017-04-22T20:47:05.335'\n     * @example DateTime.local().toISO({ format: 'basic' }) //=> '20170422T204705.335-0400'\n     * @return {string}\n     */\n    ;\n\n    _proto.toISO = function toISO(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      if (!this.isValid) {\n        return null;\n      }\n\n      return this.toISODate(opts) + \"T\" + this.toISOTime(opts);\n    }\n    /**\n     * Returns an ISO 8601-compliant string representation of this DateTime's date component\n     * @param {Object} opts - options\n     * @param {string} [opts.format='extended'] - choose between the basic and extended format\n     * @example DateTime.utc(1982, 5, 25).toISODate() //=> '1982-05-25'\n     * @example DateTime.utc(1982, 5, 25).toISODate({ format: 'basic' }) //=> '19820525'\n     * @return {string}\n     */\n    ;\n\n    _proto.toISODate = function toISODate(_temp3) {\n      var _ref5 = _temp3 === void 0 ? {} : _temp3,\n          _ref5$format = _ref5.format,\n          format = _ref5$format === void 0 ? \"extended\" : _ref5$format;\n\n      var fmt = format === \"basic\" ? \"yyyyMMdd\" : \"yyyy-MM-dd\";\n\n      if (this.year > 9999) {\n        fmt = \"+\" + fmt;\n      }\n\n      return toTechFormat(this, fmt);\n    }\n    /**\n     * Returns an ISO 8601-compliant string representation of this DateTime's week date\n     * @example DateTime.utc(1982, 5, 25).toISOWeekDate() //=> '1982-W21-2'\n     * @return {string}\n     */\n    ;\n\n    _proto.toISOWeekDate = function toISOWeekDate() {\n      return toTechFormat(this, \"kkkk-'W'WW-c\");\n    }\n    /**\n     * Returns an ISO 8601-compliant string representation of this DateTime's time component\n     * @param {Object} opts - options\n     * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n     * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n     * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n     * @param {string} [opts.format='extended'] - choose between the basic and extended format\n     * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime() //=> '07:34:19.361Z'\n     * @example DateTime.utc().set({ hour: 7, minute: 34, seconds: 0, milliseconds: 0 }).toISOTime({ suppressSeconds: true }) //=> '07:34Z'\n     * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ format: 'basic' }) //=> '073419.361Z'\n     * @return {string}\n     */\n    ;\n\n    _proto.toISOTime = function toISOTime(_temp4) {\n      var _ref6 = _temp4 === void 0 ? {} : _temp4,\n          _ref6$suppressMillise = _ref6.suppressMilliseconds,\n          suppressMilliseconds = _ref6$suppressMillise === void 0 ? false : _ref6$suppressMillise,\n          _ref6$suppressSeconds = _ref6.suppressSeconds,\n          suppressSeconds = _ref6$suppressSeconds === void 0 ? false : _ref6$suppressSeconds,\n          _ref6$includeOffset = _ref6.includeOffset,\n          includeOffset = _ref6$includeOffset === void 0 ? true : _ref6$includeOffset,\n          _ref6$format = _ref6.format,\n          format = _ref6$format === void 0 ? \"extended\" : _ref6$format;\n\n      return toTechTimeFormat(this, {\n        suppressSeconds: suppressSeconds,\n        suppressMilliseconds: suppressMilliseconds,\n        includeOffset: includeOffset,\n        format: format\n      });\n    }\n    /**\n     * Returns an RFC 2822-compatible string representation of this DateTime, always in UTC\n     * @example DateTime.utc(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 +0000'\n     * @example DateTime.local(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 -0400'\n     * @return {string}\n     */\n    ;\n\n    _proto.toRFC2822 = function toRFC2822() {\n      return toTechFormat(this, \"EEE, dd LLL yyyy HH:mm:ss ZZZ\", false);\n    }\n    /**\n     * Returns a string representation of this DateTime appropriate for use in HTTP headers.\n     * Specifically, the string conforms to RFC 1123.\n     * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1\n     * @example DateTime.utc(2014, 7, 13).toHTTP() //=> 'Sun, 13 Jul 2014 00:00:00 GMT'\n     * @example DateTime.utc(2014, 7, 13, 19).toHTTP() //=> 'Sun, 13 Jul 2014 19:00:00 GMT'\n     * @return {string}\n     */\n    ;\n\n    _proto.toHTTP = function toHTTP() {\n      return toTechFormat(this.toUTC(), \"EEE, dd LLL yyyy HH:mm:ss 'GMT'\");\n    }\n    /**\n     * Returns a string representation of this DateTime appropriate for use in SQL Date\n     * @example DateTime.utc(2014, 7, 13).toSQLDate() //=> '2014-07-13'\n     * @return {string}\n     */\n    ;\n\n    _proto.toSQLDate = function toSQLDate() {\n      return toTechFormat(this, \"yyyy-MM-dd\");\n    }\n    /**\n     * Returns a string representation of this DateTime appropriate for use in SQL Time\n     * @param {Object} opts - options\n     * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.\n     * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n     * @example DateTime.utc().toSQL() //=> '05:15:16.345'\n     * @example DateTime.local().toSQL() //=> '05:15:16.345 -04:00'\n     * @example DateTime.local().toSQL({ includeOffset: false }) //=> '05:15:16.345'\n     * @example DateTime.local().toSQL({ includeZone: false }) //=> '05:15:16.345 America/New_York'\n     * @return {string}\n     */\n    ;\n\n    _proto.toSQLTime = function toSQLTime(_temp5) {\n      var _ref7 = _temp5 === void 0 ? {} : _temp5,\n          _ref7$includeOffset = _ref7.includeOffset,\n          includeOffset = _ref7$includeOffset === void 0 ? true : _ref7$includeOffset,\n          _ref7$includeZone = _ref7.includeZone,\n          includeZone = _ref7$includeZone === void 0 ? false : _ref7$includeZone;\n\n      return toTechTimeFormat(this, {\n        includeOffset: includeOffset,\n        includeZone: includeZone,\n        spaceZone: true\n      });\n    }\n    /**\n     * Returns a string representation of this DateTime appropriate for use in SQL DateTime\n     * @param {Object} opts - options\n     * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.\n     * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n     * @example DateTime.utc(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 Z'\n     * @example DateTime.local(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 -04:00'\n     * @example DateTime.local(2014, 7, 13).toSQL({ includeOffset: false }) //=> '2014-07-13 00:00:00.000'\n     * @example DateTime.local(2014, 7, 13).toSQL({ includeZone: true }) //=> '2014-07-13 00:00:00.000 America/New_York'\n     * @return {string}\n     */\n    ;\n\n    _proto.toSQL = function toSQL(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      if (!this.isValid) {\n        return null;\n      }\n\n      return this.toSQLDate() + \" \" + this.toSQLTime(opts);\n    }\n    /**\n     * Returns a string representation of this DateTime appropriate for debugging\n     * @return {string}\n     */\n    ;\n\n    _proto.toString = function toString() {\n      return this.isValid ? this.toISO() : INVALID$2;\n    }\n    /**\n     * Returns the epoch milliseconds of this DateTime. Alias of {@link toMillis}\n     * @return {number}\n     */\n    ;\n\n    _proto.valueOf = function valueOf() {\n      return this.toMillis();\n    }\n    /**\n     * Returns the epoch milliseconds of this DateTime.\n     * @return {number}\n     */\n    ;\n\n    _proto.toMillis = function toMillis() {\n      return this.isValid ? this.ts : NaN;\n    }\n    /**\n     * Returns the epoch seconds of this DateTime.\n     * @return {number}\n     */\n    ;\n\n    _proto.toSeconds = function toSeconds() {\n      return this.isValid ? this.ts / 1000 : NaN;\n    }\n    /**\n     * Returns an ISO 8601 representation of this DateTime appropriate for use in JSON.\n     * @return {string}\n     */\n    ;\n\n    _proto.toJSON = function toJSON() {\n      return this.toISO();\n    }\n    /**\n     * Returns a BSON serializable equivalent to this DateTime.\n     * @return {Date}\n     */\n    ;\n\n    _proto.toBSON = function toBSON() {\n      return this.toJSDate();\n    }\n    /**\n     * Returns a Javascript object with this DateTime's year, month, day, and so on.\n     * @param opts - options for generating the object\n     * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output\n     * @example DateTime.local().toObject() //=> { year: 2017, month: 4, day: 22, hour: 20, minute: 49, second: 42, millisecond: 268 }\n     * @return {Object}\n     */\n    ;\n\n    _proto.toObject = function toObject(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      if (!this.isValid) return {};\n      var base = Object.assign({}, this.c);\n\n      if (opts.includeConfig) {\n        base.outputCalendar = this.outputCalendar;\n        base.numberingSystem = this.loc.numberingSystem;\n        base.locale = this.loc.locale;\n      }\n\n      return base;\n    }\n    /**\n     * Returns a Javascript Date equivalent to this DateTime.\n     * @return {Date}\n     */\n    ;\n\n    _proto.toJSDate = function toJSDate() {\n      return new Date(this.isValid ? this.ts : NaN);\n    } // COMPARE\n\n    /**\n     * Return the difference between two DateTimes as a Duration.\n     * @param {DateTime} otherDateTime - the DateTime to compare this one to\n     * @param {string|string[]} [unit=['milliseconds']] - the unit or array of units (such as 'hours' or 'days') to include in the duration.\n     * @param {Object} opts - options that affect the creation of the Duration\n     * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n     * @example\n     * var i1 = DateTime.fromISO('1982-05-25T09:45'),\n     *     i2 = DateTime.fromISO('1983-10-14T10:30');\n     * i2.diff(i1).toObject() //=> { milliseconds: 43807500000 }\n     * i2.diff(i1, 'hours').toObject() //=> { hours: 12168.75 }\n     * i2.diff(i1, ['months', 'days']).toObject() //=> { months: 16, days: 19.03125 }\n     * i2.diff(i1, ['months', 'days', 'hours']).toObject() //=> { months: 16, days: 19, hours: 0.75 }\n     * @return {Duration}\n     */\n    ;\n\n    _proto.diff = function diff(otherDateTime, unit, opts) {\n      if (unit === void 0) {\n        unit = \"milliseconds\";\n      }\n\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      if (!this.isValid || !otherDateTime.isValid) {\n        return Duration.invalid(this.invalid || otherDateTime.invalid, \"created by diffing an invalid DateTime\");\n      }\n\n      var durOpts = Object.assign({\n        locale: this.locale,\n        numberingSystem: this.numberingSystem\n      }, opts);\n\n      var units = maybeArray(unit).map(Duration.normalizeUnit),\n          otherIsLater = otherDateTime.valueOf() > this.valueOf(),\n          earlier = otherIsLater ? this : otherDateTime,\n          later = otherIsLater ? otherDateTime : this,\n          diffed = _diff(earlier, later, units, durOpts);\n\n      return otherIsLater ? diffed.negate() : diffed;\n    }\n    /**\n     * Return the difference between this DateTime and right now.\n     * See {@link diff}\n     * @param {string|string[]} [unit=['milliseconds']] - the unit or units units (such as 'hours' or 'days') to include in the duration\n     * @param {Object} opts - options that affect the creation of the Duration\n     * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n     * @return {Duration}\n     */\n    ;\n\n    _proto.diffNow = function diffNow(unit, opts) {\n      if (unit === void 0) {\n        unit = \"milliseconds\";\n      }\n\n      if (opts === void 0) {\n        opts = {};\n      }\n\n      return this.diff(DateTime.local(), unit, opts);\n    }\n    /**\n     * Return an Interval spanning between this DateTime and another DateTime\n     * @param {DateTime} otherDateTime - the other end point of the Interval\n     * @return {Interval}\n     */\n    ;\n\n    _proto.until = function until(otherDateTime) {\n      return this.isValid ? Interval.fromDateTimes(this, otherDateTime) : this;\n    }\n    /**\n     * Return whether this DateTime is in the same unit of time as another DateTime\n     * @param {DateTime} otherDateTime - the other DateTime\n     * @param {string} unit - the unit of time to check sameness on\n     * @example DateTime.local().hasSame(otherDT, 'day'); //~> true if both the same calendar day\n     * @return {boolean}\n     */\n    ;\n\n    _proto.hasSame = function hasSame(otherDateTime, unit) {\n      if (!this.isValid) return false;\n\n      if (unit === \"millisecond\") {\n        return this.valueOf() === otherDateTime.valueOf();\n      } else {\n        var inputMs = otherDateTime.valueOf();\n        return this.startOf(unit) <= inputMs && inputMs <= this.endOf(unit);\n      }\n    }\n    /**\n     * Equality check\n     * Two DateTimes are equal iff they represent the same millisecond, have the same zone and location, and are both valid.\n     * To compare just the millisecond values, use `+dt1 === +dt2`.\n     * @param {DateTime} other - the other DateTime\n     * @return {boolean}\n     */\n    ;\n\n    _proto.equals = function equals(other) {\n      return this.isValid && other.isValid && this.valueOf() === other.valueOf() && this.zone.equals(other.zone) && this.loc.equals(other.loc);\n    }\n    /**\n     * Returns a string representation of a this time relative to now, such as \"in two days\". Can only internationalize if your\n     * platform supports Intl.RelativeTimeFormat. Rounds down by default.\n     * @param {Object} options - options that affect the output\n     * @param {DateTime} [options.base=DateTime.local()] - the DateTime to use as the basis to which this time is compared. Defaults to now.\n     * @param {string} [options.style=\"long\"] - the style of units, must be \"long\", \"short\", or \"narrow\"\n     * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of \"years\", \"quarters\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", or \"seconds\"\n     * @param {boolean} [options.round=true] - whether to round the numbers in the output.\n     * @param {boolean} [options.padding=0] - padding in milliseconds. This allows you to round up the result if it fits inside the threshold. Don't use in combination with {round: false} because the decimal output will include the padding.\n     * @param {string} options.locale - override the locale of this DateTime\n     * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this\n     * @example DateTime.local().plus({ days: 1 }).toRelative() //=> \"in 1 day\"\n     * @example DateTime.local().setLocale(\"es\").toRelative({ days: 1 }) //=> \"dentro de 1 d\u00eda\"\n     * @example DateTime.local().plus({ days: 1 }).toRelative({ locale: \"fr\" }) //=> \"dans 23 heures\"\n     * @example DateTime.local().minus({ days: 2 }).toRelative() //=> \"2 days ago\"\n     * @example DateTime.local().minus({ days: 2 }).toRelative({ unit: \"hours\" }) //=> \"48 hours ago\"\n     * @example DateTime.local().minus({ hours: 36 }).toRelative({ round: false }) //=> \"1.5 days ago\"\n     */\n    ;\n\n    _proto.toRelative = function toRelative(options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (!this.isValid) return null;\n      var base = options.base || DateTime.fromObject({\n        zone: this.zone\n      }),\n          padding = options.padding ? this < base ? -options.padding : options.padding : 0;\n      return diffRelative(base, this.plus(padding), Object.assign(options, {\n        numeric: \"always\",\n        units: [\"years\", \"months\", \"days\", \"hours\", \"minutes\", \"seconds\"]\n      }));\n    }\n    /**\n     * Returns a string representation of this date relative to today, such as \"yesterday\" or \"next month\".\n     * Only internationalizes on platforms that supports Intl.RelativeTimeFormat.\n     * @param {Object} options - options that affect the output\n     * @param {DateTime} [options.base=DateTime.local()] - the DateTime to use as the basis to which this time is compared. Defaults to now.\n     * @param {string} options.locale - override the locale of this DateTime\n     * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of \"years\", \"quarters\", \"months\", \"weeks\", or \"days\"\n     * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this\n     * @example DateTime.local().plus({ days: 1 }).toRelativeCalendar() //=> \"tomorrow\"\n     * @example DateTime.local().setLocale(\"es\").plus({ days: 1 }).toRelative() //=> \"\"ma\u00f1ana\"\n     * @example DateTime.local().plus({ days: 1 }).toRelativeCalendar({ locale: \"fr\" }) //=> \"demain\"\n     * @example DateTime.local().minus({ days: 2 }).toRelativeCalendar() //=> \"2 days ago\"\n     */\n    ;\n\n    _proto.toRelativeCalendar = function toRelativeCalendar(options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (!this.isValid) return null;\n      return diffRelative(options.base || DateTime.fromObject({\n        zone: this.zone\n      }), this, Object.assign(options, {\n        numeric: \"auto\",\n        units: [\"years\", \"months\", \"days\"],\n        calendary: true\n      }));\n    }\n    /**\n     * Return the min of several date times\n     * @param {...DateTime} dateTimes - the DateTimes from which to choose the minimum\n     * @return {DateTime} the min DateTime, or undefined if called with no argument\n     */\n    ;\n\n    DateTime.min = function min() {\n      for (var _len = arguments.length, dateTimes = new Array(_len), _key = 0; _key < _len; _key++) {\n        dateTimes[_key] = arguments[_key];\n      }\n\n      if (!dateTimes.every(DateTime.isDateTime)) {\n        throw new InvalidArgumentError(\"min requires all arguments be DateTimes\");\n      }\n\n      return bestBy(dateTimes, function (i) {\n        return i.valueOf();\n      }, Math.min);\n    }\n    /**\n     * Return the max of several date times\n     * @param {...DateTime} dateTimes - the DateTimes from which to choose the maximum\n     * @return {DateTime} the max DateTime, or undefined if called with no argument\n     */\n    ;\n\n    DateTime.max = function max() {\n      for (var _len2 = arguments.length, dateTimes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        dateTimes[_key2] = arguments[_key2];\n      }\n\n      if (!dateTimes.every(DateTime.isDateTime)) {\n        throw new InvalidArgumentError(\"max requires all arguments be DateTimes\");\n      }\n\n      return bestBy(dateTimes, function (i) {\n        return i.valueOf();\n      }, Math.max);\n    } // MISC\n\n    /**\n     * Explain how a string would be parsed by fromFormat()\n     * @param {string} text - the string to parse\n     * @param {string} fmt - the format the string is expected to be in (see description)\n     * @param {Object} options - options taken by fromFormat()\n     * @return {Object}\n     */\n    ;\n\n    DateTime.fromFormatExplain = function fromFormatExplain(text, fmt, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var _options = options,\n          _options$locale = _options.locale,\n          locale = _options$locale === void 0 ? null : _options$locale,\n          _options$numberingSys = _options.numberingSystem,\n          numberingSystem = _options$numberingSys === void 0 ? null : _options$numberingSys,\n          localeToUse = Locale.fromOpts({\n        locale: locale,\n        numberingSystem: numberingSystem,\n        defaultToEN: true\n      });\n      return explainFromTokens(localeToUse, text, fmt);\n    }\n    /**\n     * @deprecated use fromFormatExplain instead\n     */\n    ;\n\n    DateTime.fromStringExplain = function fromStringExplain(text, fmt, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return DateTime.fromFormatExplain(text, fmt, options);\n    } // FORMAT PRESETS\n\n    /**\n     * {@link toLocaleString} format like 10/14/1983\n     * @type {Object}\n     */\n    ;\n\n    _createClass(DateTime, [{\n      key: \"isValid\",\n      get: function get() {\n        return this.invalid === null;\n      }\n      /**\n       * Returns an error code if this DateTime is invalid, or null if the DateTime is valid\n       * @type {string}\n       */\n\n    }, {\n      key: \"invalidReason\",\n      get: function get() {\n        return this.invalid ? this.invalid.reason : null;\n      }\n      /**\n       * Returns an explanation of why this DateTime became invalid, or null if the DateTime is valid\n       * @type {string}\n       */\n\n    }, {\n      key: \"invalidExplanation\",\n      get: function get() {\n        return this.invalid ? this.invalid.explanation : null;\n      }\n      /**\n       * Get the locale of a DateTime, such 'en-GB'. The locale is used when formatting the DateTime\n       *\n       * @type {string}\n       */\n\n    }, {\n      key: \"locale\",\n      get: function get() {\n        return this.isValid ? this.loc.locale : null;\n      }\n      /**\n       * Get the numbering system of a DateTime, such 'beng'. The numbering system is used when formatting the DateTime\n       *\n       * @type {string}\n       */\n\n    }, {\n      key: \"numberingSystem\",\n      get: function get() {\n        return this.isValid ? this.loc.numberingSystem : null;\n      }\n      /**\n       * Get the output calendar of a DateTime, such 'islamic'. The output calendar is used when formatting the DateTime\n       *\n       * @type {string}\n       */\n\n    }, {\n      key: \"outputCalendar\",\n      get: function get() {\n        return this.isValid ? this.loc.outputCalendar : null;\n      }\n      /**\n       * Get the time zone associated with this DateTime.\n       * @type {Zone}\n       */\n\n    }, {\n      key: \"zone\",\n      get: function get() {\n        return this._zone;\n      }\n      /**\n       * Get the name of the time zone.\n       * @type {string}\n       */\n\n    }, {\n      key: \"zoneName\",\n      get: function get() {\n        return this.isValid ? this.zone.name : null;\n      }\n      /**\n       * Get the year\n       * @example DateTime.local(2017, 5, 25).year //=> 2017\n       * @type {number}\n       */\n\n    }, {\n      key: \"year\",\n      get: function get() {\n        return this.isValid ? this.c.year : NaN;\n      }\n      /**\n       * Get the quarter\n       * @example DateTime.local(2017, 5, 25).quarter //=> 2\n       * @type {number}\n       */\n\n    }, {\n      key: \"quarter\",\n      get: function get() {\n        return this.isValid ? Math.ceil(this.c.month / 3) : NaN;\n      }\n      /**\n       * Get the month (1-12).\n       * @example DateTime.local(2017, 5, 25).month //=> 5\n       * @type {number}\n       */\n\n    }, {\n      key: \"month\",\n      get: function get() {\n        return this.isValid ? this.c.month : NaN;\n      }\n      /**\n       * Get the day of the month (1-30ish).\n       * @example DateTime.local(2017, 5, 25).day //=> 25\n       * @type {number}\n       */\n\n    }, {\n      key: \"day\",\n      get: function get() {\n        return this.isValid ? this.c.day : NaN;\n      }\n      /**\n       * Get the hour of the day (0-23).\n       * @example DateTime.local(2017, 5, 25, 9).hour //=> 9\n       * @type {number}\n       */\n\n    }, {\n      key: \"hour\",\n      get: function get() {\n        return this.isValid ? this.c.hour : NaN;\n      }\n      /**\n       * Get the minute of the hour (0-59).\n       * @example DateTime.local(2017, 5, 25, 9, 30).minute //=> 30\n       * @type {number}\n       */\n\n    }, {\n      key: \"minute\",\n      get: function get() {\n        return this.isValid ? this.c.minute : NaN;\n      }\n      /**\n       * Get the second of the minute (0-59).\n       * @example DateTime.local(2017, 5, 25, 9, 30, 52).second //=> 52\n       * @type {number}\n       */\n\n    }, {\n      key: \"second\",\n      get: function get() {\n        return this.isValid ? this.c.second : NaN;\n      }\n      /**\n       * Get the millisecond of the second (0-999).\n       * @example DateTime.local(2017, 5, 25, 9, 30, 52, 654).millisecond //=> 654\n       * @type {number}\n       */\n\n    }, {\n      key: \"millisecond\",\n      get: function get() {\n        return this.isValid ? this.c.millisecond : NaN;\n      }\n      /**\n       * Get the week year\n       * @see https://en.wikipedia.org/wiki/ISO_week_date\n       * @example DateTime.local(2014, 11, 31).weekYear //=> 2015\n       * @type {number}\n       */\n\n    }, {\n      key: \"weekYear\",\n      get: function get() {\n        return this.isValid ? possiblyCachedWeekData(this).weekYear : NaN;\n      }\n      /**\n       * Get the week number of the week year (1-52ish).\n       * @see https://en.wikipedia.org/wiki/ISO_week_date\n       * @example DateTime.local(2017, 5, 25).weekNumber //=> 21\n       * @type {number}\n       */\n\n    }, {\n      key: \"weekNumber\",\n      get: function get() {\n        return this.isValid ? possiblyCachedWeekData(this).weekNumber : NaN;\n      }\n      /**\n       * Get the day of the week.\n       * 1 is Monday and 7 is Sunday\n       * @see https://en.wikipedia.org/wiki/ISO_week_date\n       * @example DateTime.local(2014, 11, 31).weekday //=> 4\n       * @type {number}\n       */\n\n    }, {\n      key: \"weekday\",\n      get: function get() {\n        return this.isValid ? possiblyCachedWeekData(this).weekday : NaN;\n      }\n      /**\n       * Get the ordinal (meaning the day of the year)\n       * @example DateTime.local(2017, 5, 25).ordinal //=> 145\n       * @type {number|DateTime}\n       */\n\n    }, {\n      key: \"ordinal\",\n      get: function get() {\n        return this.isValid ? gregorianToOrdinal(this.c).ordinal : NaN;\n      }\n      /**\n       * Get the human readable short month name, such as 'Oct'.\n       * Defaults to the system's locale if no locale has been specified\n       * @example DateTime.local(2017, 10, 30).monthShort //=> Oct\n       * @type {string}\n       */\n\n    }, {\n      key: \"monthShort\",\n      get: function get() {\n        return this.isValid ? Info.months(\"short\", {\n          locale: this.locale\n        })[this.month - 1] : null;\n      }\n      /**\n       * Get the human readable long month name, such as 'October'.\n       * Defaults to the system's locale if no locale has been specified\n       * @example DateTime.local(2017, 10, 30).monthLong //=> October\n       * @type {string}\n       */\n\n    }, {\n      key: \"monthLong\",\n      get: function get() {\n        return this.isValid ? Info.months(\"long\", {\n          locale: this.locale\n        })[this.month - 1] : null;\n      }\n      /**\n       * Get the human readable short weekday, such as 'Mon'.\n       * Defaults to the system's locale if no locale has been specified\n       * @example DateTime.local(2017, 10, 30).weekdayShort //=> Mon\n       * @type {string}\n       */\n\n    }, {\n      key: \"weekdayShort\",\n      get: function get() {\n        return this.isValid ? Info.weekdays(\"short\", {\n          locale: this.locale\n        })[this.weekday - 1] : null;\n      }\n      /**\n       * Get the human readable long weekday, such as 'Monday'.\n       * Defaults to the system's locale if no locale has been specified\n       * @example DateTime.local(2017, 10, 30).weekdayLong //=> Monday\n       * @type {string}\n       */\n\n    }, {\n      key: \"weekdayLong\",\n      get: function get() {\n        return this.isValid ? Info.weekdays(\"long\", {\n          locale: this.locale\n        })[this.weekday - 1] : null;\n      }\n      /**\n       * Get the UTC offset of this DateTime in minutes\n       * @example DateTime.local().offset //=> -240\n       * @example DateTime.utc().offset //=> 0\n       * @type {number}\n       */\n\n    }, {\n      key: \"offset\",\n      get: function get() {\n        return this.isValid ? +this.o : NaN;\n      }\n      /**\n       * Get the short human name for the zone's current offset, for example \"EST\" or \"EDT\".\n       * Defaults to the system's locale if no locale has been specified\n       * @type {string}\n       */\n\n    }, {\n      key: \"offsetNameShort\",\n      get: function get() {\n        if (this.isValid) {\n          return this.zone.offsetName(this.ts, {\n            format: \"short\",\n            locale: this.locale\n          });\n        } else {\n          return null;\n        }\n      }\n      /**\n       * Get the long human name for the zone's current offset, for example \"Eastern Standard Time\" or \"Eastern Daylight Time\".\n       * Defaults to the system's locale if no locale has been specified\n       * @type {string}\n       */\n\n    }, {\n      key: \"offsetNameLong\",\n      get: function get() {\n        if (this.isValid) {\n          return this.zone.offsetName(this.ts, {\n            format: \"long\",\n            locale: this.locale\n          });\n        } else {\n          return null;\n        }\n      }\n      /**\n       * Get whether this zone's offset ever changes, as in a DST.\n       * @type {boolean}\n       */\n\n    }, {\n      key: \"isOffsetFixed\",\n      get: function get() {\n        return this.isValid ? this.zone.universal : null;\n      }\n      /**\n       * Get whether the DateTime is in a DST.\n       * @type {boolean}\n       */\n\n    }, {\n      key: \"isInDST\",\n      get: function get() {\n        if (this.isOffsetFixed) {\n          return false;\n        } else {\n          return this.offset > this.set({\n            month: 1\n          }).offset || this.offset > this.set({\n            month: 5\n          }).offset;\n        }\n      }\n      /**\n       * Returns true if this DateTime is in a leap year, false otherwise\n       * @example DateTime.local(2016).isInLeapYear //=> true\n       * @example DateTime.local(2013).isInLeapYear //=> false\n       * @type {boolean}\n       */\n\n    }, {\n      key: \"isInLeapYear\",\n      get: function get() {\n        return isLeapYear(this.year);\n      }\n      /**\n       * Returns the number of days in this DateTime's month\n       * @example DateTime.local(2016, 2).daysInMonth //=> 29\n       * @example DateTime.local(2016, 3).daysInMonth //=> 31\n       * @type {number}\n       */\n\n    }, {\n      key: \"daysInMonth\",\n      get: function get() {\n        return daysInMonth(this.year, this.month);\n      }\n      /**\n       * Returns the number of days in this DateTime's year\n       * @example DateTime.local(2016).daysInYear //=> 366\n       * @example DateTime.local(2013).daysInYear //=> 365\n       * @type {number}\n       */\n\n    }, {\n      key: \"daysInYear\",\n      get: function get() {\n        return this.isValid ? daysInYear(this.year) : NaN;\n      }\n      /**\n       * Returns the number of weeks in this DateTime's year\n       * @see https://en.wikipedia.org/wiki/ISO_week_date\n       * @example DateTime.local(2004).weeksInWeekYear //=> 53\n       * @example DateTime.local(2013).weeksInWeekYear //=> 52\n       * @type {number}\n       */\n\n    }, {\n      key: \"weeksInWeekYear\",\n      get: function get() {\n        return this.isValid ? weeksInWeekYear(this.weekYear) : NaN;\n      }\n    }], [{\n      key: \"DATE_SHORT\",\n      get: function get() {\n        return DATE_SHORT;\n      }\n      /**\n       * {@link toLocaleString} format like 'Oct 14, 1983'\n       * @type {Object}\n       */\n\n    }, {\n      key: \"DATE_MED\",\n      get: function get() {\n        return DATE_MED;\n      }\n      /**\n       * {@link toLocaleString} format like 'Fri, Oct 14, 1983'\n       * @type {Object}\n       */\n\n    }, {\n      key: \"DATE_MED_WITH_WEEKDAY\",\n      get: function get() {\n        return DATE_MED_WITH_WEEKDAY;\n      }\n      /**\n       * {@link toLocaleString} format like 'October 14, 1983'\n       * @type {Object}\n       */\n\n    }, {\n      key: \"DATE_FULL\",\n      get: function get() {\n        return DATE_FULL;\n      }\n      /**\n       * {@link toLocaleString} format like 'Tuesday, October 14, 1983'\n       * @type {Object}\n       */\n\n    }, {\n      key: \"DATE_HUGE\",\n      get: function get() {\n        return DATE_HUGE;\n      }\n      /**\n       * {@link toLocaleString} format like '09:30 AM'. Only 12-hour if the locale is.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"TIME_SIMPLE\",\n      get: function get() {\n        return TIME_SIMPLE;\n      }\n      /**\n       * {@link toLocaleString} format like '09:30:23 AM'. Only 12-hour if the locale is.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"TIME_WITH_SECONDS\",\n      get: function get() {\n        return TIME_WITH_SECONDS;\n      }\n      /**\n       * {@link toLocaleString} format like '09:30:23 AM EDT'. Only 12-hour if the locale is.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"TIME_WITH_SHORT_OFFSET\",\n      get: function get() {\n        return TIME_WITH_SHORT_OFFSET;\n      }\n      /**\n       * {@link toLocaleString} format like '09:30:23 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"TIME_WITH_LONG_OFFSET\",\n      get: function get() {\n        return TIME_WITH_LONG_OFFSET;\n      }\n      /**\n       * {@link toLocaleString} format like '09:30', always 24-hour.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"TIME_24_SIMPLE\",\n      get: function get() {\n        return TIME_24_SIMPLE;\n      }\n      /**\n       * {@link toLocaleString} format like '09:30:23', always 24-hour.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"TIME_24_WITH_SECONDS\",\n      get: function get() {\n        return TIME_24_WITH_SECONDS;\n      }\n      /**\n       * {@link toLocaleString} format like '09:30:23 EDT', always 24-hour.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"TIME_24_WITH_SHORT_OFFSET\",\n      get: function get() {\n        return TIME_24_WITH_SHORT_OFFSET;\n      }\n      /**\n       * {@link toLocaleString} format like '09:30:23 Eastern Daylight Time', always 24-hour.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"TIME_24_WITH_LONG_OFFSET\",\n      get: function get() {\n        return TIME_24_WITH_LONG_OFFSET;\n      }\n      /**\n       * {@link toLocaleString} format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"DATETIME_SHORT\",\n      get: function get() {\n        return DATETIME_SHORT;\n      }\n      /**\n       * {@link toLocaleString} format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"DATETIME_SHORT_WITH_SECONDS\",\n      get: function get() {\n        return DATETIME_SHORT_WITH_SECONDS;\n      }\n      /**\n       * {@link toLocaleString} format like 'Oct 14, 1983, 9:30 AM'. Only 12-hour if the locale is.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"DATETIME_MED\",\n      get: function get() {\n        return DATETIME_MED;\n      }\n      /**\n       * {@link toLocaleString} format like 'Oct 14, 1983, 9:30:33 AM'. Only 12-hour if the locale is.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"DATETIME_MED_WITH_SECONDS\",\n      get: function get() {\n        return DATETIME_MED_WITH_SECONDS;\n      }\n      /**\n       * {@link toLocaleString} format like 'Fri, 14 Oct 1983, 9:30 AM'. Only 12-hour if the locale is.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"DATETIME_MED_WITH_WEEKDAY\",\n      get: function get() {\n        return DATETIME_MED_WITH_WEEKDAY;\n      }\n      /**\n       * {@link toLocaleString} format like 'October 14, 1983, 9:30 AM EDT'. Only 12-hour if the locale is.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"DATETIME_FULL\",\n      get: function get() {\n        return DATETIME_FULL;\n      }\n      /**\n       * {@link toLocaleString} format like 'October 14, 1983, 9:30:33 AM EDT'. Only 12-hour if the locale is.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"DATETIME_FULL_WITH_SECONDS\",\n      get: function get() {\n        return DATETIME_FULL_WITH_SECONDS;\n      }\n      /**\n       * {@link toLocaleString} format like 'Friday, October 14, 1983, 9:30 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"DATETIME_HUGE\",\n      get: function get() {\n        return DATETIME_HUGE;\n      }\n      /**\n       * {@link toLocaleString} format like 'Friday, October 14, 1983, 9:30:33 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n       * @type {Object}\n       */\n\n    }, {\n      key: \"DATETIME_HUGE_WITH_SECONDS\",\n      get: function get() {\n        return DATETIME_HUGE_WITH_SECONDS;\n      }\n    }]);\n\n    return DateTime;\n  }();\n  function friendlyDateTime(dateTimeish) {\n    if (DateTime.isDateTime(dateTimeish)) {\n      return dateTimeish;\n    } else if (dateTimeish && dateTimeish.valueOf && isNumber(dateTimeish.valueOf())) {\n      return DateTime.fromJSDate(dateTimeish);\n    } else if (dateTimeish && typeof dateTimeish === \"object\") {\n      return DateTime.fromObject(dateTimeish);\n    } else {\n      throw new InvalidArgumentError(\"Unknown datetime argument: \" + dateTimeish + \", of type \" + typeof dateTimeish);\n    }\n  }\n\n  exports.DateTime = DateTime;\n  exports.Duration = Duration;\n  exports.FixedOffsetZone = FixedOffsetZone;\n  exports.IANAZone = IANAZone;\n  exports.Info = Info;\n  exports.Interval = Interval;\n  exports.InvalidZone = InvalidZone;\n  exports.LocalZone = LocalZone;\n  exports.Settings = Settings;\n  exports.Zone = Zone;\n\n  return exports;\n\n}({}));\n//# sourceMappingURL=luxon.js.map", "/** @odoo-module **/\n\nimport { registry } from \"./core/registry\";\n\n// -----------------------------------------------------------------------------\n// Types\n// -----------------------------------------------------------------------------\n\n/**\n * @typedef {Object} OdooEnv\n * @property {Object} services\n * @property {owl.core.EventBus} bus\n * @property {owl.QWeb} qweb\n * @property {string} debug\n * @property {(str: string) => string} _t\n * @property {boolean} [isSmall]\n */\n\n// -----------------------------------------------------------------------------\n// makeEnv\n// -----------------------------------------------------------------------------\n\n/**\n * Return a value Odoo Env object\n *\n * @returns {OdooEnv}\n */\nexport function makeEnv() {\n    return {\n        qweb: new owl.QWeb(),\n        bus: new owl.core.EventBus(),\n        services: {},\n        debug: odoo.debug,\n        _t: () => {\n            throw new Error(\"Translations are not ready yet. Maybe use _lt instead?\");\n        },\n        get isSmall() {\n            throw new Error(\"UI service not initialized!\");\n        },\n    };\n}\n\n// -----------------------------------------------------------------------------\n// Service Launcher\n// -----------------------------------------------------------------------------\n\nconst serviceRegistry = registry.category(\"services\");\n\nexport const SERVICES_METADATA = {};\n\n/**\n * Start all services registered in the service registry, while making sure\n * each service dependencies are properly fulfilled.\n *\n * @param {OdooEnv} env\n * @returns {Promise<void>}\n */\nexport async function startServices(env) {\n    const toStart = new Set();\n    serviceRegistry.on(\"UPDATE\", null, async (payload) => {\n        // Wait for all synchronous code so that if new services that depend on\n        // one another are added to the registry, they're all present before we\n        // start them regardless of the order they're added to the registry.\n        await Promise.resolve();\n        const { operation, key: name, value: service } = payload;\n        if (operation === \"delete\") {\n            // We hardly see why it would be usefull to remove a service.\n            // Furthermore we could encounter problems with dependencies.\n            // Keep it simple!\n            return;\n        }\n        if (toStart.size) {\n            const namedService = Object.assign(Object.create(service), { name });\n            toStart.add(namedService);\n        } else {\n            await _startServices(env, toStart);\n        }\n    });\n    // Wait for all synchronous code so that if new services that depend on\n    // one another are added to the registry, they're all present before we\n    // start them regardless of the order they're added to the registry.\n    await Promise.resolve();\n    await _startServices(env, toStart);\n}\n\nasync function _startServices(env, toStart) {\n    const services = env.services;\n    for (const [name, service] of serviceRegistry.getEntries()) {\n        if (!(name in services)) {\n            const namedService = Object.assign(Object.create(service), { name });\n            toStart.add(namedService);\n        }\n    }\n\n    // start as many services in parallel as possible\n    async function start() {\n        let service = null;\n        const proms = [];\n        while ((service = findNext())) {\n            let name = service.name;\n            toStart.delete(service);\n            const entries = (service.dependencies || []).map((dep) => [dep, services[dep]]);\n            const dependencies = Object.fromEntries(entries);\n            let value;\n            try {\n                value = service.start(env, dependencies);\n            } catch (e) {\n                value = e;\n                console.error(e);\n            }\n            if (\"async\" in service) {\n                SERVICES_METADATA[name] = service.async;\n            }\n            if (value instanceof Promise) {\n                proms.push(\n                    new Promise(async (resolve) => {\n                        value\n                            .then((val) => {\n                                services[name] = val || null;\n                            })\n                            .catch((error) => {\n                                services[name] = error;\n                                console.error(error);\n                            })\n                            .finally(resolve);\n                    })\n                );\n            } else {\n                services[service.name] = value || null;\n            }\n        }\n        await Promise.all(proms);\n        if (proms.length) {\n            return start();\n        }\n    }\n    await start();\n    if (toStart.size) {\n        const names = [...toStart].map((s) => s.name);\n        const missingDeps = new Set();\n        [...toStart].forEach((s) =>\n            s.dependencies.forEach((dep) => {\n                if (!(dep in services) && !names.includes(dep)) {\n                    missingDeps.add(dep);\n                }\n            })\n        );\n        const depNames = [...missingDeps].join(\", \");\n        throw new Error(\n            `Some services could not be started: ${names}. Missing dependencies: ${depNames}`\n        );\n    }\n\n    function findNext() {\n        for (let s of toStart) {\n            if (s.dependencies) {\n                if (s.dependencies.every((d) => d in services)) {\n                    return s;\n                }\n            } else {\n                return s;\n            }\n        }\n        return null;\n    }\n}\n", "/** @odoo-module **/\n\nconst { useEnv, onWillStart } = owl.hooks;\nimport { memoize } from \"./utils/functions\";\nimport { browser } from \"./browser/browser\";\n\nclass AssetsLoadingError extends Error {}\n\n//------------------------------------------------------------------------------\n// Types\n//------------------------------------------------------------------------------\n\n/**\n * An object describing a bundle to load\n * @typedef {Object} Bundle\n * @property {boolean} [templates] whether to load the qweb templates\n * @property {boolean} [js] whether to load the js from the bundle. Currently\n *      not implemented.\n * @property {boolean} [css] whether to load the css from the bundle. Currently\n *      not implemented.\n */\n\n/**\n * An object describing a bundle to load. The keys are bundle names.\n * @typedef {Object<string, Bundle>} Bundles\n */\n\n/**\n * An object describing a loaded bundle\n * @typedef {Object} LoadedBundle\n * @property {XMLDocument} templates an XML document containing the owl\n *      templates defined in that bundle\n */\n\n/**\n * An object describing a loaded bundle. The keys are bundle names.\n * @typedef {Object<string, LoadedBundle>} LoadedBundles\n */\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/**\n * Loads the given url inside a script tag.\n *\n * @param {string} url the url of the script\n * @returns {Promise} resolved when the script has been loaded\n */\nconst loadJS = memoize(function loadJS(url) {\n    if (document.querySelector(`script[src=\"${url}\"]`)) {\n        // Already in the DOM and wasn't loaded through this function\n        // Unfortunately there is no way to check whether a script has loaded\n        // or not (which may not be the case for async/defer scripts)\n        // so we assume it is.\n        return Promise.resolve();\n    }\n    const scriptEl = document.createElement(\"script\");\n    scriptEl.type = \"text/javascript\";\n    scriptEl.src = url;\n    document.head.appendChild(scriptEl);\n    return new Promise((resolve, reject) => {\n        scriptEl.addEventListener(\"load\", resolve);\n        scriptEl.addEventListener(\"error\", () => {\n            reject(new AssetsLoadingError(`The loading of ${url} failed`));\n        });\n    });\n});\n/**\n * Loads the given url as a stylesheet.\n *\n * @param {string} url the url of the stylesheet\n * @returns {Promise} resolved when the stylesheet has been loaded\n */\nconst loadCSS = memoize(function loadCSS(url) {\n    if (document.querySelector(`link[href=\"${url}\"]`)) {\n        // Already in the DOM and wasn't loaded through this function\n        // Unfortunately there is no way to check whether a link has loaded\n        // or not (which may not be the case for async/defer stylesheets)\n        // so we assume it is.\n        return Promise.resolve();\n    }\n    const linkEl = document.createElement(\"link\");\n    linkEl.type = \"text/css\";\n    linkEl.rel = \"stylesheet\";\n    linkEl.href = url;\n    document.head.appendChild(linkEl);\n    return new Promise(function (resolve, reject) {\n        linkEl.addEventListener(\"load\", resolve);\n        linkEl.addEventListener(\"error\", () => {\n            reject(new AssetsLoadingError(`The loading of ${url} failed`));\n        });\n    });\n});\n/**\n * Loads the qweb templates from a given bundle name.\n *\n * @param {string} name the name of the bundle as declared in the manifest.\n * @returns {Promise<XMLDocument>} A Promise of an XML document containing the\n *      owl templates.\n */\nexport const loadBundleTemplates = memoize(async function loadBundleTemplates(name) {\n    // TODO: quid of the \"unique\" in the URL? We can\"t have one cache_hash\n    // for each and every bundle I\"m guessing.\n    const bundleURL = `/web/webclient/qweb/${Date.now()}?bundle=${name}`;\n    const templates = await (await browser.fetch(bundleURL)).text();\n    return processTemplates(templates);\n});\n\nconst bundlesCache = {};\n/**\n * Loads a bundle.\n *\n * @param {string} name the name of the bundle to load\n * @param {Bundle} options parts of the bundle to load (see Bundle typedef)\n * @returns {Promise<LoadedBundle>}\n */\nasync function loadBundle(name, options) {\n    const { templates } = options;\n    if (!bundlesCache[name]) {\n        bundlesCache[name] = { name };\n    }\n    if (templates && !bundlesCache[name].templates) {\n        bundlesCache[name].templates = loadBundleTemplates(name);\n    }\n    // TODO: if (\"js/css\") {...} to support lazy loading js/css from bundles\n\n    // Wait only for the requested keys\n    const entries = await Promise.all(\n        Object.keys(options).map(async (key) => [key, await bundlesCache[name][key]])\n    );\n    return Object.fromEntries(entries);\n}\n\n//------------------------------------------------------------------------------\n// Exports\n//------------------------------------------------------------------------------\n\n/**\n * Process the qweb templates to obtain only the owl templates. This function\n * does NOT register the templates into Owl.\n *\n * @param {string} templates An xml string describing templates\n * @returns {XMLDocument} An xml document containing only the owl templates\n */\nexport function processTemplates(templates) {\n    const doc = new DOMParser().parseFromString(templates, \"text/xml\");\n    // as we currently have two qweb engines (owl and legacy), owl templates are\n    // flagged with attribute `owl=\"1\"`. The following lines removes the \"owl\"\n    // attribute from the templates, so that it doesn't appear in the DOM. We\n    // also remove the non-owl templates, as those shouldn't be loaded in the\n    // owl environment's QWeb, and will be loaded separately.\n    for (const template of [...doc.querySelector(\"templates\").children]) {\n        if (template.hasAttribute(\"owl\")) {\n            template.removeAttribute(\"owl\");\n        } else {\n            template.remove();\n        }\n    }\n    return doc;\n}\n/**\n * Renders a public asset template and loads the libraries defined inside of it.\n * Only loads js and css, template declarations will be ignored. Only loads\n * scripts and styles that are defined in script src and link href, ignores\n * inline scripts and styles.\n *\n * @deprecated\n * @param {string} xmlid The xmlid of the template that defines the public asset\n * @param {ORM} orm An ORM object capable of calling methods on models\n * @returns {Promise} Resolved when the contents of the asset is loaded\n */\nexport const loadPublicAsset = memoize(async function loadPublicAsset(xmlid, orm) {\n    const xml = await orm.call(\"ir.ui.view\", \"render_public_asset\", [xmlid]);\n    const doc = new DOMParser().parseFromString(`<xml>${xml}</xml>`, \"text/xml\");\n    return loadAssets({\n        cssLibs: [...doc.querySelectorAll(\"link[href]\")].map((node) => node.getAttribute(\"href\")),\n        jsLibs: [...doc.querySelectorAll(\"script[src]\")].map((node) => node.getAttribute(\"src\")),\n    });\n});\n/**\n * Loads the given assets. Currently, when passing bundles, only the templates\n * key is supported, as loading a bundle's JS/CSS asynchronously requires some\n * groundwork.\n *\n * @param {Object} assets\n * @param {Bundles} [assets.bundles] an object describing the bundles to load.\n *      The keys are bundle names, and the values describe whether to load the\n *      templates, js and/or css from that bundle.\n * @param {string[]} [assets.jsLibs] urls of the javascript libraries to load\n * @param {string[]} [assets.cssLibs] urls of the css libraries to load\n * @returns {Promise<{[bundles: LoadedBundle[]]}>} An object describing the loaded\n *      assets. The js and css libs are loaded globally and will be loaded when\n *      this promise is resolved, the owl xml templates will be loaded in the\n *      `templates` key of each LoadedBundle object.\n */\nexport async function loadAssets(assets) {\n    const proms = [];\n    const loadedAssets = {};\n    if (\"bundles\" in assets) {\n        const bundles = Object.entries(assets.bundles);\n        const bundlesProm = Promise.all(\n            bundles.map(async ([name, options]) => [name, await loadBundle(name, options)])\n        ).then((loadedBundles) => {\n            loadedAssets.bundles = Object.fromEntries(loadedBundles);\n        });\n        proms.push(bundlesProm);\n    }\n    if (\"jsLibs\" in assets) {\n        proms.push(Promise.all(assets.jsLibs.map(loadJS)));\n    }\n    if (\"cssLibs\" in assets) {\n        proms.push(Promise.all(assets.cssLibs.map(loadCSS)));\n    }\n    await Promise.all(proms);\n    return loadedAssets;\n}\n/**\n * Loads the given assets, and adds the loaded owl templates into the current\n * environment's qweb instance.\n *\n * @param {Object} assets\n * @param {Bundles} [assets.bundles] the bundles to load. See above typedef for\n *      details.\n * @param {string[]} [assets.jsLibs] urls of the javascript libraries to load\n * @param {string[]} [assets.cssLibs] urls of the css libraries to load\n */\nexport function useAssets(assets) {\n    const env = useEnv();\n    onWillStart(async () => {\n        const loadedAssets = await loadAssets(assets);\n        // TODO: { js, css } = loadedAssets when we support lazy loading js/css from bundles\n        const { bundles } = loadedAssets;\n        if (bundles) {\n            const templateDocs = Object.values(bundles).map(({ templates }) => templates);\n            // Some templates might already be defined by another bundle, but need\n            // to be included in the current bundle for primary inherits to work.\n            // We don't want to add those again. We also have to add them to qweb\n            // one bundle at a time in case multiple bundles were specified that\n            // include the same template (e.g. for inheritance)\n            for (const xmlDoc of templateDocs) {\n                for (const template of [...xmlDoc.querySelector(\"templates\").children]) {\n                    if (template.getAttribute(\"t-name\") in env.qweb.templates) {\n                        template.remove();\n                    }\n                }\n                env.qweb.addTemplates(xmlDoc);\n            }\n        }\n    });\n}\n", "/** @odoo-module **/\n\n/**\n * Browser\n *\n * This file exports an object containing common browser API. It may not look\n * incredibly useful, but it is very convenient when one needs to test code using\n * these methods. With this indirection, it is possible to patch the browser\n * object for a test.\n */\n\nlet sessionStorage = window.sessionStorage;\nlet localStorage = owl.browser.localStorage;\ntry {\n    // Safari crashes in Private Browsing\n    localStorage.setItem(\"__localStorage__\", \"true\");\n    localStorage.removeItem(\"__localStorage__\");\n} catch (e) {\n    localStorage = makeRAMLocalStorage();\n    sessionStorage = makeRAMLocalStorage();\n}\n\nexport const browser = Object.assign({}, owl.browser, {\n    addEventListener: window.addEventListener.bind(window),\n    removeEventListener: window.removeEventListener.bind(window),\n    requestAnimationFrame: window.requestAnimationFrame.bind(window),\n    cancelAnimationFrame: window.cancelAnimationFrame.bind(window),\n    console: window.console,\n    history: window.history,\n    navigator: navigator,\n    open: window.open.bind(window),\n    XMLHttpRequest: window.XMLHttpRequest,\n    localStorage,\n    sessionStorage,\n});\n\nObject.defineProperty(browser, \"location\", {\n    set(val) {\n        window.location = val;\n    },\n    get() {\n        return window.location;\n    },\n    configurable: true,\n});\n\n// -----------------------------------------------------------------------------\n// memory localStorage\n// -----------------------------------------------------------------------------\n\n/**\n * @returns {typeof window[\"localStorage\"]}\n */\nexport function makeRAMLocalStorage() {\n    let store = {};\n    return {\n        setItem(key, value) {\n            store[key] = value;\n        },\n        getItem(key) {\n            return store[key];\n        },\n        clear() {\n            store = {};\n        },\n        removeItem(key) {\n            delete store[key];\n        },\n        get length() {\n            return Object.keys(store).length;\n        },\n        key() {\n            return \"\";\n        },\n    };\n}\n", "/** @odoo-module **/\n\nimport { registry } from \"../registry\";\n\n/**\n * Service to make use of document.cookie\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies\n * As recommended, storage should not be done by the cookie\n * but with localStorage/sessionStorage\n */\n\nconst COOKIE_TTL = 24 * 60 * 60 * 365;\n\nfunction parseCookieString(str) {\n    const cookie = {};\n    const parts = str.split(\"; \");\n    for (let part of parts) {\n        const [key, value] = part.split(\"=\");\n        cookie[key] = value || \"\";\n    }\n    return cookie;\n}\n\nfunction cookieToString(key, value, ttl = COOKIE_TTL) {\n    let fullCookie = [];\n    if (value !== undefined) {\n        fullCookie.push(`${key}=${value}`);\n    }\n    fullCookie = fullCookie.concat([\"path=/\", `max-age=${ttl}`]);\n    return fullCookie.join(\";\");\n}\n\nfunction makeCookieService() {\n    function getCurrent() {\n        return parseCookieString(document.cookie);\n    }\n    let cookie = getCurrent();\n    function setCookie(key, value, ttl) {\n        document.cookie = cookieToString(key, value, ttl);\n        cookie = getCurrent();\n    }\n    return {\n        get current() {\n            return cookie;\n        },\n        setCookie,\n        deleteCookie(key) {\n            setCookie(key, \"kill\", 0);\n        },\n    };\n}\n\nexport const cookieService = {\n    start() {\n        return makeCookieService();\n    },\n};\n\nregistry.category(\"services\").add(\"cookie\", cookieService);\n", "/** @odoo-module **/\n\nimport { browser } from \"./browser\";\n\n// -----------------------------------------------------------------------------\n// Feature detection\n// -----------------------------------------------------------------------------\n\n/**\n * true if the browser is based on Chromium (Google Chrome, Opera, Edge)\n *\n * @returns {boolean}\n */\nexport function isBrowserChrome() {\n    return browser.navigator.userAgent.includes(\"Chrome\");\n}\n\nexport function isAndroid() {\n    return /Android/i.test(browser.navigator.userAgent);\n}\n\nexport function isIOS() {\n    return /(iPad|iPhone|iPod)/i.test(browser.navigator.userAgent) ||\n        (browser.navigator.platform === 'MacIntel' && maxTouchPoints() > 1);\n}\n\nexport function isOtherMobileOS() {\n    return /(webOS|BlackBerry|Windows Phone)/i.test(browser.navigator.userAgent);\n}\n\nexport function isMacOS() {\n    return Boolean(browser.navigator.userAgent.match(/Mac/i));\n}\n\nexport function isMobileOS() {\n    return isAndroid() || isIOS() || isOtherMobileOS();\n}\n\nexport function isIosApp() {\n    return /OdooMobile \\(iOS\\)/i.test(browser.navigator.userAgent);\n}\n\nexport function hasTouch() {\n    return \"ontouchstart\" in window || \"onmsgesturechange\" in window;\n}\n\nexport function maxTouchPoints() {\n    return browser.navigator.maxTouchPoints || 1;\n}\n", "/** @odoo-module **/\n\nimport { registry } from \"../registry\";\nimport { shallowEqual } from \"../utils/objects\";\nimport { objectToUrlEncodedString } from \"../utils/urls\";\nimport { browser } from \"./browser\";\n\n/**\n * Casts the given string to a number if possible.\n *\n * @param {string} value\n * @returns {string|number}\n */\nfunction cast(value) {\n    return !value || isNaN(value) ? value : Number(value);\n}\n\n/**\n * @typedef {{ [key: string]: string }} Query\n * @typedef {{ [key: string]: any }} Route\n */\n\nfunction parseString(str) {\n    const parts = str.split(\"&\");\n    const result = {};\n    for (let part of parts) {\n        const [key, value] = part.split(\"=\");\n        const decoded = decodeURIComponent(value || \"\");\n        result[key] = cast(decoded);\n    }\n    return result;\n}\n\n/**\n * For each push request (replaceState or pushState), filterout keys that have been locked before\n * overrides locked keys that are explicitly re-locked or unlocked\n * registers keys in \"hash\" in \"lockedKeys\" according to the \"lock\" Boolean\n *\n * @param {Set<string>} lockedKeys A set containing all keys that were locked\n * @param {Query} hash An Object representing the pushed url hash\n * @param {Query} currentHash The current hash compare against\n * @param  {Object} [options={}] Whether to lock all hash keys in \"hash\" to prevent them from being changed afterwards\n * @param  {Boolean} [options.lock] Whether to lock all hash keys in \"hash\" to prevent them from being changed afterwards\n * @return {Query} The resulting \"hash\" where previous locking has been applied\n */\nfunction applyLocking(lockedKeys, hash, currentHash, options = {}) {\n    const newHash = {};\n    for (const key in hash) {\n        if (\"lock\" in options) {\n            options.lock ? lockedKeys.add(key) : lockedKeys.delete(key);\n        } else if (lockedKeys.has(key)) {\n            // forbid implicit override of key\n            continue;\n        }\n        newHash[key] = hash[key];\n    }\n    for (const key in currentHash) {\n        if (lockedKeys.has(key) && !(key in newHash)) {\n            newHash[key] = currentHash[key];\n        }\n    }\n    return newHash;\n}\n\nfunction computeNewRoute(hash, replace, currentRoute) {\n    if (!replace) {\n        hash = Object.assign({}, currentRoute.hash, hash);\n    }\n    hash = sanitizeHash(hash);\n    if (!shallowEqual(currentRoute.hash, hash)) {\n        return Object.assign({}, currentRoute, { hash });\n    }\n    return false;\n}\n\nfunction sanitizeHash(hash) {\n    return Object.fromEntries(\n        Object.entries(hash)\n            .filter(([, v]) => v !== undefined)\n            .map(([k, v]) => [k, cast(v)])\n    );\n}\n\n/**\n * @param {string} hash\n * @returns {any}\n */\nexport function parseHash(hash) {\n    return hash && hash !== \"#\" ? parseString(hash.slice(1)) : {};\n}\n\n/**\n * @param {string} search\n * @returns {any}\n */\nexport function parseSearchQuery(search) {\n    return search ? parseString(search.slice(1)) : {};\n}\n\n/**\n * @param {{ [key: string]: any }} route\n * @returns\n */\nexport function routeToUrl(route) {\n    const search = objectToUrlEncodedString(route.search);\n    const hash = objectToUrlEncodedString(route.hash);\n    return route.pathname + (search ? \"?\" + search : \"\") + (hash ? \"#\" + hash : \"\");\n}\n\nasync function redirect(env, url, wait = false) {\n    if (wait) {\n        await new Promise((resolve) => {\n            const waitForServer = (delay) => {\n                browser.setTimeout(async () => {\n                    env.services\n                        .rpc(\"/web/webclient/version_info\", {})\n                        .then(resolve)\n                        .catch(() => waitForServer(250));\n                }, delay);\n            };\n            waitForServer(1000);\n        });\n    }\n    browser.location.assign(url);\n}\n\nfunction getRoute(urlObj) {\n    const { pathname, search, hash } = urlObj;\n    const searchQuery = parseSearchQuery(search);\n    const hashQuery = parseHash(hash);\n    return { pathname, search: searchQuery, hash: hashQuery };\n}\n\nfunction makeRouter(env) {\n    const bus = env.bus;\n    const lockedKeys = new Set();\n    let current = getRoute(browser.location);\n    let pushTimeout;\n    browser.addEventListener(\"hashchange\", (ev) => {\n        browser.clearTimeout(pushTimeout);\n        const loc = new URL(ev.newURL);\n        current = getRoute(loc);\n        bus.trigger(\"ROUTE_CHANGE\");\n    });\n\n    /**\n     * @param {string} mode\n     * @returns {(hash: string, options: any) => any}\n     */\n    function makeDebouncedPush(mode) {\n        let allPushArgs = [];\n        function doPush() {\n            // Aggregates push/replace state arguments\n            const replace = allPushArgs.some(([, options]) => options && options.replace);\n            const newHash = allPushArgs.reduce((finalHash, [hash, options]) => {\n                hash = applyLocking(lockedKeys, hash, current.hash, options);\n                if (finalHash) {\n                    hash = applyLocking(lockedKeys, hash, finalHash, options);\n                }\n                return Object.assign(finalHash || {}, hash);\n            }, null);\n            // Calculates new route based on aggregated hash and options\n            const newRoute = computeNewRoute(newHash, replace, current);\n            if (!newRoute) {\n                return;\n            }\n            // If the route changed: pushes or replaces browser state\n            const url = browser.location.origin + routeToUrl(newRoute);\n            if (mode === \"push\") {\n                browser.history.pushState({}, \"\", url);\n            } else {\n                browser.history.replaceState({}, \"\", url);\n            }\n            current = getRoute(browser.location);\n        }\n        return function pushOrReplaceState(hash, options) {\n            allPushArgs.push([hash, options]);\n            browser.clearTimeout(pushTimeout);\n            pushTimeout = browser.setTimeout(() => {\n                doPush();\n                pushTimeout = null;\n                allPushArgs = [];\n            });\n        };\n    }\n\n    return {\n        get current() {\n            return current;\n        },\n        pushState: makeDebouncedPush(\"push\"),\n        replaceState: makeDebouncedPush(\"replace\"),\n        redirect: (url, wait) => redirect(env, url, wait),\n        cancelPushes: () => browser.clearTimeout(pushTimeout),\n    };\n}\n\nexport const routerService = {\n    start(env) {\n        return makeRouter(env);\n    },\n};\n\nexport function objectToQuery(obj) {\n    const query = {};\n    Object.entries(obj).forEach(([k, v]) => {\n        query[k] = v ? String(v) : v;\n    });\n    return query;\n}\n\nregistry.category(\"services\").add(\"router\", routerService);\n", "/** @odoo-module **/\n\nimport { registry } from \"../registry\";\n\nexport const titleService = {\n    start() {\n        const titleParts = {};\n\n        function getParts() {\n            return Object.assign({}, titleParts);\n        }\n\n        function setParts(parts) {\n            for (const key in parts) {\n                const val = parts[key];\n                if (!val) {\n                    delete titleParts[key];\n                } else {\n                    titleParts[key] = val;\n                }\n            }\n            document.title = Object.values(titleParts).join(\" - \");\n        }\n\n        return {\n            /**\n             * @returns {string}\n             */\n            get current() {\n                return document.title;\n            },\n            getParts,\n            setParts,\n        };\n    },\n};\n\nregistry.category(\"services\").add(\"title\", titleService);\n", "/** @odoo-module **/\n\nconst { Component, QWeb } = owl;\n\n/**\n * Custom checkbox\n *\n * <CheckBox\n *    value=\"boolean\"\n *    disabled=\"boolean\"\n *    t-on-change=\"_onValueChange\"\n *    >\n *    Change the label text\n *  </CheckBox>\n *\n * @extends Component\n */\n\nexport class CheckBox extends Component {\n    setup() {\n        this.id = `checkbox-comp-${CheckBox.nextId++}`;\n    }\n}\n\nCheckBox.template = \"web.CheckBox\";\nCheckBox.nextId = 1;\n\nQWeb.registerComponent(\"CheckBox\", CheckBox);\n", "/** @odoo-module */\n\nimport { Dialog } from \"../dialog/dialog\";\nimport { _lt } from \"../l10n/translation\";\n\nexport class ConfirmationDialog extends Dialog {\n    setup() {\n        super.setup();\n        this.title = this.props.title;\n    }\n    _cancel() {\n        if (this.props.cancel) {\n            this.props.cancel();\n        }\n        this.close();\n    }\n\n    _confirm() {\n        if (this.props.confirm) {\n            this.props.confirm();\n        }\n        this.close();\n    }\n}\nConfirmationDialog.props = {\n    title: {\n        validate: (m) => {\n            return (\n                typeof m === \"string\" || (typeof m === \"object\" && typeof m.toString === \"function\")\n            );\n        },\n    },\n    body: String,\n    confirm: { type: Function, optional: true },\n    cancel: { type: Function, optional: true },\n    close: Function,\n};\nConfirmationDialog.defaultProps = {\n    title: _lt(\"Confirmation\"),\n};\n\nConfirmationDialog.bodyTemplate = \"web.ConfirmationDialogBody\";\nConfirmationDialog.footerTemplate = \"web.ConfirmationDialogFooter\";\nConfirmationDialog.size = \"modal-md\";\n\nexport class AlertDialog extends ConfirmationDialog {\n    setup() {\n        super.setup();\n        if (\"contentClass\" in this.props) {\n            this.contentClass = this.props.contentClass;\n        }\n    }\n}\nAlertDialog.size = \"modal-sm\";\nAlertDialog.props = Object.assign(Object.create(ConfirmationDialog.props), {\n    contentClass: { type: String, optional: true },\n});\n\nAlertDialog.defaultProps = {\n    title: _lt(\"Alert\"),\n};\n", "/** @odoo-module **/\n\nimport { evaluateExpr } from \"./py_js/py\";\n\n/**\n * @typedef {{[key: string]: any}} Context\n * @typedef {Context | string | undefined} ContextDescription\n */\n\n/**\n * Create an evaluated context from an arbitrary list of context representations.\n * The evaluated context in construction is used along the way to evaluate further parts.\n *\n * @param {ContextDescription[]} contexts\n * @param {Context} [initialEvaluationContext] optional evaluation context to start from.\n * @returns {Context}\n */\nexport function makeContext(contexts, initialEvaluationContext) {\n    const evaluationContext = Object.assign({}, initialEvaluationContext);\n    const context = {};\n    for (let ctx of contexts) {\n        if (ctx !== \"\") {\n            ctx = typeof ctx === \"string\" ? evaluateExpr(ctx, evaluationContext) : ctx;\n            Object.assign(context, ctx);\n            Object.assign(evaluationContext, context); // is this behavior really wanted ?\n        }\n    }\n    return context;\n}\n", "/** @odoo-module **/\n\nimport { localization } from \"@web/core/l10n/localization\";\nimport { registry } from \"@web/core/registry\";\nimport { useAutofocus } from \"@web/core/utils/hooks\";\nimport { isIOS } from \"@web/core/browser/feature_detection\";\n\nconst { Component, hooks } = owl;\nconst { DateTime } = luxon;\nconst { useExternalListener, useRef, useState } = hooks;\n\nconst formatters = registry.category(\"formatters\");\nconst parsers = registry.category(\"parsers\");\n\nlet datePickerId = 0;\n\n/**\n * @param {DateTime} date\n * @returns {moment}\n */\nconst luxonDateToMomentDate = (date) => {\n    return window.moment(String(date));\n};\n\n/**\n * @param {string} format\n * @returns {string}\n */\nconst luxonFormatToMomentFormat = (format) => {\n    return format.replace(/[dy]/g, (x) => x.toUpperCase());\n};\n\n/**\n * @param {string} format\n * @returns {boolean}\n */\nconst isValidStaticFormat = (format) => {\n    try {\n        return /^[\\d\\s\\/.,:-]+$/.test(DateTime.local().toFormat(format));\n    } catch (_err) {\n        return false;\n    }\n};\n\n/**\n * Date picker\n *\n * This component exposes the API of the tempusdominus datepicker library.\n * As such, its template is a simple input that will open the TD datepicker\n * when clicked on. The component will also synchronize any user-input value\n * with the library widget and vice-versa.\n *\n * Note that all props given to this component will be passed as arguments to\n * instantiate the picker widget. Also any luxon date is automatically\n * stringified since tempusdominus only works with moment objects.\n * @extends Component\n */\nexport class DatePicker extends Component {\n    setup() {\n        this.inputRef = useRef(\"input\");\n        this.state = useState({ warning: false });\n\n        this.datePickerId = `o_datepicker_${datePickerId++}`;\n        // Manually keep track of the \"open\" state to write the date in the\n        // static format just before bootstrap parses it.\n        this.datePickerShown = false;\n\n        this.initFormat();\n        this.setDate(this.props);\n        this.setFormat(this.props);\n\n        useAutofocus();\n        useExternalListener(window, \"scroll\", this.onWindowScroll);\n    }\n\n    mounted() {\n        this.bootstrapDateTimePicker(this.props);\n        this.updateInput();\n\n        window.$(this.el).on(\"show.datetimepicker\", () => {\n            this.datePickerShown = true;\n            this.inputRef.el.select();\n        });\n        window.$(this.el).on(\"hide.datetimepicker\", () => {\n            this.datePickerShown = false;\n            this.onDateChange({ useStatic: true });\n        });\n        window.$(this.el).on(\"error.datetimepicker\", () => false);\n    }\n\n    willUpdateProps(nextProps) {\n        const pickerParams = {};\n        let shouldUpdateInput = false;\n        for (const prop in nextProps) {\n            const prev = this.props[prop];\n            const next = nextProps[prop];\n            if ((prev instanceof DateTime && !prev.equals(next)) || prev !== next) {\n                pickerParams[prop] = nextProps[prop];\n                if (prop === \"date\") {\n                    this.setDate(nextProps);\n                    shouldUpdateInput = true;\n                } else if (prop === \"format\") {\n                    this.setFormat(nextProps);\n                    shouldUpdateInput = true;\n                }\n            }\n        }\n        if (shouldUpdateInput) {\n            this.updateInput();\n        }\n        this.bootstrapDateTimePicker(pickerParams);\n    }\n\n    willUnmount() {\n        window.$(this.el).off(); // Removes all jQuery events\n\n        this.bootstrapDateTimePicker(\"destroy\");\n    }\n\n    //---------------------------------------------------------------------\n    // Protected\n    //---------------------------------------------------------------------\n\n    getOptions(useStatic = false) {\n        return {\n            format: !useStatic || isValidStaticFormat(this.format) ? this.format : this.staticFormat,\n            locale: this.date.locale,\n            timezone: this.isLocal,\n        };\n    }\n\n    /**\n     * Initialises formatting and parsing parameters\n     */\n    initFormat() {\n        this.defaultFormat = localization.dateFormat;\n        this.staticFormat = \"yyyy/MM/dd\";\n        this.formatValue = formatters.get(\"date\");\n        this.parseValue = parsers.get(\"date\");\n        this.isLocal = false;\n    }\n\n    /**\n     * Sets the current date value. If a locale is provided, the given date\n     * will first be set in that locale.\n     * @param {Object} params\n     * @param {DateTime} params.date\n     * @param {string} [params.locale]\n     */\n    setDate({ date, locale }) {\n        this.date = locale ? date.setLocale(locale) : date;\n    }\n\n    /**\n     * Sets the current format.\n     * @param {Object} params\n     * @param {string} [params.format]\n     */\n    setFormat({ format }) {\n        // Fallback to default localization format in `@web/core/l10n/dates.js`.\n        this.format = format || this.defaultFormat;\n    }\n\n    /**\n     * Updates the input element with the current formatted date value.\n     * @param {Object} [params={}]\n     * @param {boolean} [params.useStatic]\n     */\n    updateInput({ useStatic } = {}) {\n        try {\n            this.inputRef.el.value = this.formatValue(this.date, this.getOptions(useStatic));\n        } catch (_err) {\n            // Ignore\n        }\n    }\n\n    //---------------------------------------------------------------------\n    // Bootstrap datepicker\n    //---------------------------------------------------------------------\n\n    /**\n     * Handles bootstrap datetimepicker calls.\n     * @param {string | Object} commandOrParams\n     */\n    bootstrapDateTimePicker(commandOrParams) {\n        if (typeof commandOrParams === \"object\") {\n            const format = isValidStaticFormat(this.format) ? this.format : this.staticFormat;\n            const params = { ...commandOrParams, format: luxonFormatToMomentFormat(format) };\n            if (!params.locale && commandOrParams.date) {\n                params.locale = commandOrParams.date.locale;\n            }\n            for (const prop in params) {\n                if (params[prop] instanceof DateTime) {\n                    const luxonDate = params[prop];\n                    const momentDate = luxonDateToMomentDate(luxonDate);\n                    params[prop] = momentDate;\n                }\n            }\n            commandOrParams = params;\n        }\n        return window.$(this.el).datetimepicker(commandOrParams);\n    }\n\n    //---------------------------------------------------------------------\n    // Handlers\n    //---------------------------------------------------------------------\n\n    onInputClick() {\n        if (!this.datePickerShown) {\n            this.updateInput({ useStatic: true });\n        }\n        this.bootstrapDateTimePicker(\"toggle\");\n    }\n\n    /**\n     * Called either when the input value has changed or when the boostrap\n     * datepicker is closed. The actual \"datetime-changed\" emitted by the\n     * component is only triggered if the date value has changed.\n     * @param {Object} [params={}]\n     * @param {boolean} [params.useStatic]\n     */\n    onDateChange({ useStatic } = {}) {\n        let date;\n        try {\n            date = this.parseValue(this.inputRef.el.value, this.getOptions(useStatic));\n        } catch (_err) {\n            // Reset to default (= given) date.\n        }\n        if (!date || date.equals(this.date)) {\n            this.updateInput();\n        } else {\n            this.state.warning = date > DateTime.local();\n            this.trigger(\"datetime-changed\", { date });\n        }\n    }\n\n    /**\n     * @param {Event} ev\n     */\n    onWindowScroll(ev) {\n        if (!isIOS() && ev.target !== this.inputRef.el) {\n            this.bootstrapDateTimePicker(\"hide\");\n        }\n    }\n}\n\nDatePicker.defaultProps = {\n    calendarWeeks: true,\n    icons: {\n        clear: \"fa fa-delete\",\n        close: \"fa fa-check primary\",\n        date: \"fa fa-calendar\",\n        down: \"fa fa-chevron-down\",\n        next: \"fa fa-chevron-right\",\n        previous: \"fa fa-chevron-left\",\n        time: \"fa fa-clock-o\",\n        today: \"fa fa-calendar-check-o\",\n        up: \"fa fa-chevron-up\",\n    },\n    maxDate: DateTime.fromObject({ year: 9999, month: 12, day: 31 }),\n    minDate: DateTime.fromObject({ year: 1000 }),\n    useCurrent: false,\n    widgetParent: \"body\",\n};\nDatePicker.props = {\n    // Components props\n    date: DateTime,\n    warn_future: { type: Boolean, optional: true },\n    // Bootstrap datepicker options\n    buttons: {\n        type: Object,\n        shape: {\n            showClear: Boolean,\n            showClose: Boolean,\n            showToday: Boolean,\n        },\n        optional: true,\n    },\n    calendarWeeks: Boolean,\n    format: { type: String, optional: true },\n    icons: {\n        type: Object,\n        shape: {\n            clear: String,\n            close: String,\n            date: String,\n            down: String,\n            next: String,\n            previous: String,\n            time: String,\n            today: String,\n            up: String,\n        },\n    },\n    keyBinds: { validate: (kb) => typeof kb === \"object\" || kb === null, optional: true },\n    locale: { type: String, optional: true },\n    maxDate: DateTime,\n    minDate: DateTime,\n    readonly: { type: Boolean, optional: true },\n    useCurrent: Boolean,\n    widgetParent: String,\n};\nDatePicker.template = \"web.DatePicker\";\n\n/**\n * Date/time picker\n *\n * Similar to the DatePicker component, adding the handling of more specific\n * time values: hour-minute-second.\n *\n * Once again, refer to the tempusdominus documentation for implementation\n * details.\n * @extends DatePicker\n */\nexport class DateTimePicker extends DatePicker {\n    /**\n     * @override\n     */\n    initFormat() {\n        this.defaultFormat = localization.dateTimeFormat;\n        this.staticFormat = \"yyyy/MM/dd HH:mm:ss\";\n        this.formatValue = formatters.get(\"datetime\");\n        this.parseValue = parsers.get(\"datetime\");\n        this.isLocal = true;\n    }\n}\n\nDateTimePicker.defaultProps = {\n    ...DatePicker.defaultProps,\n    buttons: {\n        showClear: false,\n        showClose: true,\n        showToday: false,\n    },\n};\n", "/** @odoo-module **/\n\nimport { registry } from \"../registry\";\nimport { memoize } from \"../utils/functions\";\nimport { useEffect } from \"@web/core/utils/hooks\";\n\nconst { useEnv, useSubEnv } = owl.hooks;\nconst debugRegistry = registry.category(\"debug\");\n\nconst getAccessRights = memoize(async function getAccessRights(orm) {\n    const rightsToCheck = {\n        \"ir.ui.view\": \"write\",\n        \"ir.rule\": \"read\",\n        \"ir.model.access\": \"read\",\n    };\n    const proms = Object.entries(rightsToCheck).map(([model, operation]) => {\n        return orm.call(model, \"check_access_rights\", [], {\n            operation,\n            raise_exception: false,\n        });\n    });\n    const [canEditView, canSeeRecordRules, canSeeModelAccess] = await Promise.all(proms);\n    const accessRights = { canEditView, canSeeRecordRules, canSeeModelAccess };\n    return accessRights;\n});\n\nclass DebugContext {\n    constructor(env, defaultCategories) {\n        this.orm = env.services.orm;\n        this.categories = new Map(defaultCategories.map((cat) => [cat, [{}]]));\n    }\n\n    activateCategory(category, context) {\n        const contexts = this.categories.get(category) || new Set();\n        contexts.add(context);\n        this.categories.set(category, contexts);\n\n        return () => {\n            contexts.delete(context);\n            if (contexts.size === 0) {\n                this.categories.delete(category);\n            }\n        };\n    }\n\n    async getItems(env) {\n        const accessRights = await getAccessRights(this.orm);\n        return [...this.categories.entries()]\n            .flatMap(([category, contexts]) => {\n                return debugRegistry\n                    .category(category)\n                    .getAll()\n                    .map((factory) => factory(Object.assign({ env, accessRights }, ...contexts)));\n            })\n            .filter(Boolean)\n            .sort((x, y) => {\n                const xSeq = x.sequence || 1000;\n                const ySeq = y.sequence || 1000;\n                return xSeq - ySeq;\n            });\n    }\n}\n\nconst debugContextSymbol = Symbol(\"debugContext\");\nexport function createDebugContext(env, { categories = [] } = {}) {\n    return { [debugContextSymbol]: new DebugContext(env, categories) };\n}\n\nexport function useOwnDebugContext({ categories = [] } = {}) {\n    useSubEnv(createDebugContext(useEnv(), { categories }));\n}\n\nexport function useEnvDebugContext() {\n    const debugContext = useEnv()[debugContextSymbol];\n    if (!debugContext) {\n        throw new Error(\"There is no debug context available in the current environment.\");\n    }\n    return debugContext;\n}\n\nexport function useDebugCategory(category, context = {}) {\n    const env = useEnv();\n    if (env.debug) {\n        const debugContext = useEnvDebugContext();\n        useEffect(\n            () => debugContext.activateCategory(category, context),\n            () => []\n        );\n    }\n}\n", "/** @odoo-module **/\n\nimport { useEnvDebugContext } from \"./debug_context\";\n\nconst { Component } = owl;\n\nexport class DebugMenuBasic extends Component {\n    setup() {\n        const debugContext = useEnvDebugContext();\n        // Needs to be bound to this for use in template\n        this.getElements = async () => {\n            this.elements = await debugContext.getItems(this.env);\n        };\n    }\n}\nDebugMenuBasic.template = \"web.DebugMenu\";\n", "/** @odoo-module **/\n\nimport { browser } from \"@web/core/browser/browser\";\nimport { routeToUrl } from \"@web/core/browser/router_service\";\nimport { registry } from \"@web/core/registry\";\n\nfunction activateAssetsDebugging({ env }) {\n    return {\n        type: \"item\",\n        description: env._t(\"Activate Assets Debugging\"),\n        callback: () => {\n            browser.location.search = \"?debug=assets\";\n        },\n        sequence: 410,\n    };\n}\n\nfunction activateTestsAssetsDebugging({ env }) {\n    return {\n        type: \"item\",\n        description: env._t(\"Activate Tests Assets Debugging\"),\n        callback: () => {\n            browser.location.search = \"?debug=assets,tests\";\n        },\n        sequence: 420,\n    };\n}\n\nexport function regenerateAssets({ env }) {\n    return {\n        type: \"item\",\n        description: env._t(\"Regenerate Assets Bundles\"),\n        callback: async () => {\n            const domain = [\n                \"&\",\n                [\"res_model\", \"=\", \"ir.ui.view\"],\n                \"|\",\n                [\"name\", \"=like\", \"%.assets_%.css\"],\n                [\"name\", \"=like\", \"%.assets_%.js\"],\n            ];\n            const ids = await env.services.orm.search(\"ir.attachment\", domain);\n            await env.services.orm.unlink(\"ir.attachment\", ids);\n            browser.location.reload();\n        },\n        sequence: 430,\n    };\n}\n\nfunction becomeSuperuser({ env }) {\n    const becomeSuperuserURL = browser.location.origin + \"/web/become\";\n    return {\n        type: \"item\",\n        description: env._t(\"Become Superuser\"),\n        hide: !env.services.user.isAdmin,\n        href: becomeSuperuserURL,\n        callback: () => {\n            browser.open(becomeSuperuserURL, \"_self\");\n        },\n        sequence: 440,\n    };\n}\n\nfunction leaveDebugMode({ env }) {\n    return {\n        type: \"item\",\n        description: env._t(\"Leave the Developer Tools\"),\n        callback: () => {\n            const route = env.services.router.current;\n            route.search.debug = \"\";\n            browser.location.href = browser.location.origin + routeToUrl(route);\n        },\n        sequence: 450,\n    };\n}\n\nregistry\n    .category(\"debug\")\n    .category(\"default\")\n    .add(\"activateAssetsDebugging\", activateAssetsDebugging)\n    .add(\"regenerateAssets\", regenerateAssets)\n    .add(\"becomeSuperuser\", becomeSuperuser)\n    .add(\"leaveDebugMode\", leaveDebugMode)\n    .add(\"activateTestsAssetsDebugging\", activateTestsAssetsDebugging);\n", "/** @odoo-module */\n\nimport { registry } from \"../registry\";\nimport { browser } from \"../browser/browser\";\nimport { routeToUrl } from \"../browser/router_service\";\n\nconst commandProviderRegistry = registry.category(\"command_provider\");\n\ncommandProviderRegistry.add(\"debug\", {\n    provide: (env, options) => {\n        const result = [];\n        if (env.debug) {\n            result.push({\n                action() {\n                    const route = env.services.router.current;\n                    route.search.debug = \"\";\n                    browser.location.href = browser.location.origin + routeToUrl(route);\n                },\n                category: \"debug\",\n                name: env._t(\"Deactivate debug mode\"),\n            });\n        } else {\n            if (options.searchValue.toLowerCase() === \"debug\") {\n                result.push({\n                    action() {\n                        browser.location.search = \"?debug=assets\";\n                    },\n                    category: \"debug\",\n                    name: env._t(\"Activate debug mode\"),\n                });\n            }\n        }\n        return result;\n    },\n});\n", "/** @odoo-module **/\n\nexport function editModelDebug(env, title, model, id) {\n    return env.services.action.doAction({\n        res_model: model,\n        res_id: id,\n        name: title,\n        type: \"ir.actions.act_window\",\n        views: [[false, \"form\"]],\n        view_mode: \"form\",\n        target: \"new\",\n        flags: { action_buttons: true, headless: true },\n    });\n}\n", "/** @odoo-module **/\n\nimport { DropdownItem } from \"@web/core/dropdown/dropdown_item\";\nimport { useBus, useService } from \"@web/core/utils/hooks\";\n\nconst { Component } = owl;\n\nexport class ProfilingItem extends Component {\n    setup() {\n        this.profiling = useService(\"profiling\");\n        useBus(this.props.bus, \"UPDATE\", this.render);\n    }\n\n    changeParam(param, ev) {\n        this.profiling.setParam(param, ev.target.value);\n    }\n    toggleParam(param, ev) {\n        const value = this.profiling.state.params.execution_context_qweb;\n        this.profiling.setParam(param, !value);\n    }\n    openProfiles() {\n        if (this.env.services.action) {\n            // using doAction in the backend to preserve breadcrumbs and stuff\n            this.env.services.action.doAction(\"base.action_menu_ir_profile\");\n        } else {\n            // No action service means we are in the frontend.\n            window.location = \"/web/#action=base.action_menu_ir_profile\";\n        }\n    }\n}\nProfilingItem.components = { DropdownItem };\nProfilingItem.template = \"web.DebugMenu.ProfilingItem\";\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { ProfilingItem } from \"./profiling_item\";\nimport { session } from \"@web/session\";\n\nconst { core } = owl;\n\nconst profilingService = {\n    dependencies: [\"orm\"],\n    start(env, { orm }) {\n        const state = {\n            session: session.profile_session || false,\n            collectors: session.profile_collectors || [\"sql\", \"traces_async\"],\n            params: session.profile_params || {},\n            get isEnabled() {\n                return Boolean(state.session);\n            },\n        };\n        const bus = new core.EventBus();\n\n        let recordingIcon = null;\n        function updateDebugIcon() {\n            const debugItem = document.querySelector(\".o_main_navbar .o_debug_manager .fa-bug\");\n            if (state.isEnabled) {\n                recordingIcon = document.createElement(\"span\");\n                recordingIcon.classList.add(\"o_recording\", \"text-danger\", \"fa\", \"fa-circle\");\n                debugItem.appendChild(recordingIcon);\n            } else if (recordingIcon) {\n                debugItem.removeChild(recordingIcon);\n                recordingIcon = null;\n            }\n        }\n\n        if (env.debug) {\n            env.bus.on(\"WEB_CLIENT_READY\", null, updateDebugIcon);\n        }\n\n        async function setProfiling(params) {\n            const kwargs = Object.assign(\n                {\n                    collectors: state.collectors,\n                    params: state.params,\n                    profile: state.isEnabled,\n                },\n                params\n            );\n            const resp = await orm.call(\"ir.profile\", \"set_profiling\", [], kwargs);\n            if (resp.type) {  // most likely an \"ir.actions.act_window\"\n                env.services.action.doAction(resp);\n            } else {\n                state.session = resp.session;\n                state.collectors = resp.collectors;\n                state.params = resp.params;\n                bus.trigger(\"UPDATE\");\n                updateDebugIcon();\n            }\n        }\n\n        function profilingSeparator() {\n            return {\n                type: \"separator\",\n                sequence: 500,\n            };\n        }\n\n        function profilingItem() {\n            return {\n                type: \"component\",\n                Component: ProfilingItem,\n                props: { bus },\n                sequence: 510,\n            };\n        }\n\n        registry\n            .category(\"debug\")\n            .category(\"default\")\n            .add(\"profilingSeparator\", profilingSeparator)\n            .add(\"profilingItem\", profilingItem);\n\n        return {\n            state,\n            async toggleProfiling() {\n                await setProfiling({ profile: !state.isEnabled });\n            },\n            async toggleCollector(collector) {\n                let nextCollectors = state.collectors.slice();\n                const index = nextCollectors.indexOf(collector);\n                if (index >= 0) {\n                    nextCollectors.splice(index, 1);\n                } else {\n                    nextCollectors.push(collector);\n                }\n                await setProfiling({ collectors: nextCollectors });\n            },\n            async setParam(key, value) {\n                const nextParams = Object.assign({}, state.params);\n                nextParams[key] = value;\n                await setProfiling({ params: nextParams });\n            },\n            isCollectorEnabled(collector) {\n                return state.collectors.includes(collector);\n            },\n        };\n    },\n};\n\nregistry.category(\"services\").add(\"profiling\", profilingService);\n", "/** @odoo-module **/\n\nimport { useHotkey } from \"@web/core/hotkeys/hotkey_hook\";\nimport { useActiveElement } from \"../ui/ui_service\";\n\nconst { Component, hooks } = owl;\nconst { useRef, useSubEnv } = hooks;\n\nexport class Dialog extends Component {\n    setup() {\n        if (this.constructor === Dialog) {\n            throw new Error(\n                \"Dialog should not be used by itself. Please use the dialog service with a Dialog subclass.\"\n            );\n        }\n        this.modalRef = useRef(\"modal\");\n        useActiveElement(\"modal\");\n        useHotkey(\"escape\", () => {\n            this.close();\n        });\n        useSubEnv({ inDialog: true });\n        this.close = this.close.bind(this);\n        this.contentClass = this.constructor.contentClass;\n        this.fullscreen = this.constructor.fullscreen;\n        this.renderFooter = this.constructor.renderFooter;\n        this.renderHeader = this.constructor.renderHeader;\n        this.size = this.constructor.size;\n        this.technical = this.constructor.technical;\n        this.title = this.constructor.title;\n    }\n\n    /**\n     * Send an event signaling that the dialog should be closed.\n     * @private\n     */\n    close() {\n        this.props.close();\n    }\n}\n\nDialog.template = \"web.Dialog\";\nDialog.contentClass = null;\nDialog.fullscreen = false;\nDialog.renderFooter = true;\nDialog.renderHeader = true;\nDialog.size = \"modal-lg\";\nDialog.technical = true;\nDialog.title = \"Odoo\";\nDialog.bodyTemplate = owl.tags.xml`<div/>`;\nDialog.footerTemplate = \"web.DialogFooterDefault\";\n", "/** @odoo-module **/\n\nimport { ErrorHandler, NotUpdatable } from \"../utils/components\";\n\nconst { Component, tags } = owl;\n\nexport class DialogContainer extends Component {\n    setup() {\n        this.props.bus.on(\"UPDATE\", this, this.render);\n    }\n\n    close(id) {\n        if (this.props.dialogs[id]) {\n            this.props.dialogs[id].props.close();\n        }\n    }\n\n    handleError(error, dialogId) {\n        this.close(dialogId);\n        Promise.resolve().then(() => {\n            throw error;\n        });\n    }\n}\nDialogContainer.components = { ErrorHandler, NotUpdatable };\nDialogContainer.template = tags.xml`\n    <div class=\"o_dialog_container\" t-att-class=\"{'modal-open': Object.keys(props.dialogs).length > 0}\">\n      <t t-foreach=\"Object.values(props.dialogs)\" t-as=\"dialog\" t-key=\"dialog.id\">\n        <NotUpdatable>\n            <ErrorHandler onError=\"(error) => handleError(error, dialog.id)\">\n                <t t-component=\"dialog.class\" t-props=\"dialog.props\"\n                    t-on-dialog-closed=\"dialog.props.close()\" \n                    t-att-class=\"{o_inactive_modal: !dialog_last}\"/>\n            </ErrorHandler>\n        </NotUpdatable>\n      </t>\n    </div>\n    `;\n", "/** @odoo-module **/\n\nimport { registry } from \"../registry\";\nimport { Dialog } from \"./dialog\";\nimport { DialogContainer } from \"./dialog_container\";\n\nconst { core } = owl;\nconst { EventBus } = core;\n\n/**\n *  @typedef {{\n *      onClose?(): void;\n *  }} DialogServiceInterfaceAddOptions\n */\n/**\n *  @typedef {{\n *      add(\n *          Component: any,\n *          props: {},\n *          options?: DialogServiceInterfaceAddOptions\n *      ): () => void;\n *  }} DialogServiceInterface\n */\n\nexport const dialogService = {\n    /** @returns {DialogServiceInterface} */\n    start() {\n        const dialogs = {};\n        const bus = new EventBus();\n        let dialogId = 0;\n\n        registry.category(\"main_components\").add(\"DialogContainer\", {\n            Component: DialogContainer,\n            props: { bus, dialogs },\n        });\n\n        function add(dialogClass, props, options = {}) {\n            if (!(dialogClass.prototype instanceof Dialog)) {\n                throw new Error(`${dialogClass.name} must be a subclass of Dialog`);\n            }\n\n            const id = ++dialogId;\n            function close() {\n                if (dialogs[id]) {\n                    delete dialogs[id];\n                    if (options.onClose) {\n                        options.onClose();\n                    }\n                    bus.trigger(\"UPDATE\");\n                }\n            }\n\n            const dialog = {\n                id,\n                class: dialogClass,\n                props: { ...props, close },\n            };\n            dialogs[id] = dialog;\n            bus.trigger(\"UPDATE\");\n\n            return close;\n        }\n\n        return { add };\n    },\n};\n\nregistry.category(\"services\").add(\"dialog\", dialogService);\n", "/** @odoo-module **/\n\nimport { evaluate, formatAST, parseExpr } from \"./py_js/py\";\nimport { toPyValue } from \"./py_js/py_utils\";\n\n/**\n * @typedef {import(\"./py_js/py_parser\").AST} AST\n * @typedef {[string, string, any]} Condition\n * @typedef {(\"&\" | \"|\" | \"!\" | Condition)[]} DomainListRepr\n * @typedef {DomainListRepr | string | Domain} DomainRepr\n */\n\nclass InvalidDomainError extends Error {}\n\n/**\n * Javascript representation of an Odoo domain\n */\nexport class Domain {\n    /**\n     * Combine various domains together with a given operator\n     * @param {DomainRepr[]} domains\n     * @param {\"AND\" | \"OR\"} operator\n     * @returns {Domain}\n     */\n    static combine(domains, operator) {\n        if (domains.length === 0) {\n            return new Domain([]);\n        }\n        const domain1 = domains[0] instanceof Domain ? domains[0] : new Domain(domains[0]);\n        if (domains.length === 1) {\n            return domain1;\n        }\n        const domain2 = Domain.combine(domains.slice(1), operator);\n        const result = new Domain([]);\n        const astValues1 = domain1.ast.value;\n        const astValues2 = domain2.ast.value;\n        const op = operator === \"AND\" ? \"&\" : \"|\";\n        const combinedAST = { type: 4 /* List */, value: astValues1.concat(astValues2) };\n        result.ast = normalizeDomainAST(combinedAST, op);\n        return result;\n    }\n\n    /**\n     * Combine various domains together with `AND` operator\n     * @param {DomainRepr} domains\n     * @returns {Domain}\n     */\n    static and(domains) {\n        return Domain.combine(domains, \"AND\");\n    }\n\n    /**\n     * Combine various domains together with `OR` operator\n     * @param {DomainRepr} domains\n     * @returns {Domain}\n     */\n    static or(domains) {\n        return Domain.combine(domains, \"OR\");\n    }\n\n    /**\n     * Return the negation of the domain\n     * @returns {Domain}\n     */\n    static not(domain) {\n        const result = new Domain(domain);\n        result.ast.value.unshift({ type: 1, value: \"!\" });\n        return result;\n    }\n\n    /**\n     * @param {DomainRepr} [descr]\n     */\n    constructor(descr = []) {\n        if (descr instanceof Domain) {\n            /** @type {AST} */\n            return new Domain(descr.toString());\n        } else {\n            const rawAST = typeof descr === \"string\" ? parseExpr(descr) : toAST(descr);\n            this.ast = normalizeDomainAST(rawAST);\n        }\n    }\n\n    /**\n     * Check if the set of records represented by a domain contains a record\n     *\n     * @param {Object} record\n     * @returns {boolean}\n     */\n    contains(record) {\n        const expr = evaluate(this.ast, record);\n        return matchDomain(record, expr);\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return formatAST(this.ast);\n    }\n\n    /**\n     * @param {Object} context\n     * @returns {DomainListRepr}\n     */\n    toList(context) {\n        return evaluate(this.ast, context);\n    }\n}\n\nconst TRUE_LEAF = [1, \"=\", 1];\nconst FALSE_LEAF = [0, \"=\", 1];\nconst TRUE_DOMAIN = new Domain([TRUE_LEAF]);\nconst FALSE_DOMAIN = new Domain([FALSE_LEAF]);\n\nDomain.TRUE = TRUE_DOMAIN;\nDomain.FALSE = FALSE_DOMAIN;\n\n// -----------------------------------------------------------------------------\n// Helpers\n// -----------------------------------------------------------------------------\n\n/**\n * @param {DomainListRepr} domain\n * @returns {AST}\n */\nfunction toAST(domain) {\n    const elems = domain.map((elem) => {\n        switch (elem) {\n            case \"!\":\n            case \"&\":\n            case \"|\":\n                return { type: 1 /* String */, value: elem };\n            default:\n                return {\n                    type: 10 /* Tuple */,\n                    value: elem.map(toPyValue),\n                };\n        }\n    });\n    return { type: 4 /* List */, value: elems };\n}\n\n/**\n * Normalizes a domain\n *\n * @param {AST} domain\n * @param {'&' | '|'} [op]\n * @returns {AST}\n */\n\nfunction normalizeDomainAST(domain, op = \"&\") {\n    if (domain.type !== 4 /* List */) {\n        throw new InvalidDomainError(\"Invalid domain AST\");\n    }\n    if (domain.value.length === 0) {\n        return domain;\n    }\n    let expected = 1;\n    for (let child of domain.value) {\n        if (child.type === 1 /* String */ && (child.value === \"&\" || child.value === \"|\")) {\n            expected++;\n        } else if (child.type !== 1 /* String */ || child.value !== \"!\") {\n            expected--;\n        }\n    }\n    let values = domain.value.slice();\n    while (expected < 0) {\n        expected++;\n        values.unshift({ type: 1 /* String */, value: op });\n    }\n    if (expected > 0) {\n        throw new InvalidDomainError(\n            `invalid domain ${formatAST(domain)} (missing ${expected} segment(s))`\n        );\n    }\n    return { type: 4 /* List */, value: values };\n}\n\n/**\n * @param {Object} record\n * @param {Condition | boolean} condition\n * @returns {boolean}\n */\nfunction matchCondition(record, condition) {\n    if (typeof condition === \"boolean\") {\n        return condition;\n    }\n    const [field, operator, value] = condition;\n    const fieldValue = typeof field === \"number\" ? field : record[field];\n    switch (operator) {\n        case \"=?\":\n            if ([false, null].includes(value)) {\n                return true;\n            }\n        // eslint-disable-next-line no-fallthrough\n        case \"=\":\n        case \"==\":\n            return fieldValue === value;\n        case \"!=\":\n        case \"<>\":\n            return fieldValue !== value;\n        case \"<\":\n            return fieldValue < value;\n        case \"<=\":\n            return fieldValue <= value;\n        case \">\":\n            return fieldValue > value;\n        case \">=\":\n            return fieldValue >= value;\n        case \"in\": {\n            const val = Array.isArray(value) ? value : [value];\n            const fieldVal = Array.isArray(fieldValue) ? fieldValue : [fieldValue];\n            return fieldVal.some((fv) => val.includes(fv));\n        }\n        case \"not in\": {\n            const val = Array.isArray(value) ? value : [value];\n            const fieldVal = Array.isArray(fieldValue) ? fieldValue : [fieldValue];\n            return !fieldVal.some((fv) => val.includes(fv));\n        }\n        case \"like\":\n            if (fieldValue === false) {\n                return false;\n            }\n            return fieldValue.indexOf(value) >= 0;\n        case \"=like\":\n            if (fieldValue === false) {\n                return false;\n            }\n            return new RegExp(value.replace(/%/g, \".*\")).test(fieldValue);\n        case \"ilike\":\n            if (fieldValue === false) {\n                return false;\n            }\n            return fieldValue.toLowerCase().indexOf(value.toLowerCase()) >= 0;\n        case \"=ilike\":\n            if (fieldValue === false) {\n                return false;\n            }\n            return new RegExp(value.replace(/%/g, \".*\"), \"i\").test(fieldValue);\n    }\n    throw new InvalidDomainError(\"could not match domain\");\n}\n\n/**\n * @param {Object} record\n * @returns {Object}\n */\nfunction makeOperators(record) {\n    const match = matchCondition.bind(null, record);\n    return {\n        \"!\": (x) => !match(x),\n        \"&\": (a, b) => match(a) && match(b),\n        \"|\": (a, b) => match(a) || match(b),\n    };\n}\n\n/**\n *\n * @param {Object} record\n * @param {DomainListRepr} domain\n * @returns {boolean}\n */\nfunction matchDomain(record, domain) {\n    if (domain.length === 0) {\n        return true;\n    }\n    const operators = makeOperators(record);\n    const reversedDomain = Array.from(domain).reverse();\n    const condStack = [];\n    for (const item of reversedDomain) {\n        if (item in operators) {\n            const operator = operators[item];\n            const operands = condStack.splice(-operator.length);\n            condStack.push(operator(...operands));\n        } else {\n            condStack.push(item);\n        }\n    }\n    return matchCondition(record, condStack.pop());\n}\n", "/** @odoo-module **/\n\nimport { useBus, useEffect, useService } from \"@web/core/utils/hooks\";\nimport { usePosition } from \"../position/position_hook\";\nimport { useDropdownNavigation } from \"./dropdown_navigation_hook\";\nimport { ParentClosingMode } from \"./dropdown_item\";\nimport { localization } from \"../l10n/localization\";\n\nconst { Component, core, hooks, useState, QWeb } = owl;\nconst { EventBus } = core;\nconst { onWillStart, useExternalListener, useRef, useSubEnv } = hooks;\n\nconst DIRECTION_CARET_CLASS = {\n    bottom: \"dropdown\",\n    top: \"dropup\",\n    left: \"dropleft\",\n    right: \"dropright\",\n};\n\n/**\n * @typedef DropdownState\n * @property {boolean} open\n * @property {boolean} groupIsOpen\n */\n\n/**\n * @typedef DropdownStateChangedPayload\n * @property {Dropdown} emitter\n * @property {DropdownState} newState\n */\n\n/**\n * @extends Component\n */\nexport class Dropdown extends Component {\n    setup() {\n        this.state = useState({\n            open: this.props.startOpen,\n            groupIsOpen: this.props.startOpen,\n        });\n\n        // Set up beforeOpen ---------------------------------------------------\n        onWillStart(() => {\n            if (this.state.open && this.props.beforeOpen) {\n                return this.props.beforeOpen();\n            }\n        });\n\n        // Set up dynamic open/close behaviours --------------------------------\n        if (!this.props.manualOnly) {\n            // Close on outside click listener\n            useExternalListener(window, \"click\", this.onWindowClicked);\n            // Listen to all dropdowns state changes\n            useBus(Dropdown.bus, \"state-changed\", this.onDropdownStateChanged);\n        }\n\n        // Set up UI active element related behavior ---------------------------\n        this.ui = useService(\"ui\");\n        useEffect(\n            () => {\n                Promise.resolve().then(() => {\n                    this.myActiveEl = this.ui.activeElement;\n                });\n            },\n            () => []\n        );\n\n        // Set up nested dropdowns ---------------------------------------------\n        this.hasParentDropdown = this.env.inDropdown;\n        useSubEnv({ inDropdown: true });\n\n        // Set up key navigation -----------------------------------------------\n        useDropdownNavigation();\n\n        // Set up toggler and positioning --------------------------------------\n        /** @type {string} **/\n        let position =\n            this.props.position || (this.hasParentDropdown ? \"right-start\" : \"bottom-start\");\n        let [direction, variant = \"middle\"] = position.split(\"-\");\n        if (localization.direction === \"rtl\") {\n            if ([\"bottom\", \"top\"].includes(direction)) {\n                variant = variant === \"start\" ? \"end\" : \"start\";\n            } else {\n                direction = direction === \"left\" ? \"right\" : \"left\";\n            }\n            position = [direction, variant].join(\"-\");\n        }\n        const positioningOptions = {\n            popper: \"menuRef\",\n            position,\n        };\n        this.directionCaretClass = DIRECTION_CARET_CLASS[direction];\n        this.togglerRef = useRef(\"togglerRef\");\n        if (this.props.toggler === \"parent\") {\n            // Add parent click listener to handle toggling\n            useEffect(\n                () => {\n                    const onClick = (ev) => {\n                        if (this.el.contains(ev.target)) {\n                            // ignore clicks inside the dropdown\n                            return;\n                        }\n                        this.toggle();\n                    };\n                    if (this.el.parentElement.tabIndex === -1) {\n                        // If the parent is not focusable, make it focusable programmatically.\n                        // This code may look weird, but an element with a negative tabIndex is\n                        // focusable programmatically ONLY if its tabIndex is explicitly set.\n                        this.el.parentElement.tabIndex = -1;\n                    }\n                    this.el.parentElement.addEventListener(\"click\", onClick);\n                    return () => {\n                        this.el.parentElement.removeEventListener(\"click\", onClick);\n                    };\n                },\n                () => []\n            );\n\n            useEffect(\n                (open) => {\n                    this.el.parentElement.ariaExpanded = open ? \"true\" : \"false\";\n                },\n                () => [this.state.open]\n            );\n\n            // Position menu relatively to parent element\n            usePosition(() => this.el.parentElement, positioningOptions);\n        } else {\n            // Position menu relatively to inner toggler\n            const togglerRef = useRef(\"togglerRef\");\n            usePosition(() => togglerRef.el, positioningOptions);\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    // Private\n    // -------------------------------------------------------------------------\n\n    /**\n     * Changes the dropdown state and notifies over the Dropdown bus.\n     *\n     * All state changes must trigger on the bus, except when reacting to\n     * another dropdown state change.\n     *\n     * @see onDropdownStateChanged()\n     *\n     * @param {Partial<DropdownState>} stateSlice\n     */\n    async changeStateAndNotify(stateSlice) {\n        if (stateSlice.open && this.props.beforeOpen) {\n            await this.props.beforeOpen();\n        }\n        // Update the state\n        Object.assign(this.state, stateSlice);\n        // Notify over the bus\n        /** @type DropdownStateChangedPayload */\n        const stateChangedPayload = {\n            emitter: this,\n            newState: { ...this.state },\n        };\n        Dropdown.bus.trigger(\"state-changed\", stateChangedPayload);\n    }\n\n    /**\n     * Closes the dropdown.\n     *\n     * @returns {Promise<void>}\n     */\n    close() {\n        return this.changeStateAndNotify({ open: false, groupIsOpen: false });\n    }\n\n    /**\n     * Opens the dropdown.\n     *\n     * @returns {Promise<void>}\n     */\n    open() {\n        return this.changeStateAndNotify({ open: true, groupIsOpen: true });\n    }\n\n    /**\n     * Toggles the dropdown open state.\n     *\n     * @returns {Promise<void>}\n     */\n    toggle() {\n        const toggled = !this.state.open;\n        return this.changeStateAndNotify({ open: toggled, groupIsOpen: toggled });\n    }\n\n    // -------------------------------------------------------------------------\n    // Handlers\n    // -------------------------------------------------------------------------\n\n    /**\n     * Checks if should close on dropdown item selection.\n     *\n     * @param {CustomEvent<import(\"./dropdown_item\").DropdownItemSelectedEventDetail>} ev\n     */\n    onItemSelected(ev) {\n        // Handle parent closing request\n        const { dropdownClosingRequest } = ev.detail;\n        const closeAll = dropdownClosingRequest.mode === ParentClosingMode.AllParents;\n        const closeSelf =\n            dropdownClosingRequest.isFresh &&\n            dropdownClosingRequest.mode === ParentClosingMode.ClosestParent;\n        if (!this.props.manualOnly && (closeAll || closeSelf)) {\n            this.close();\n        }\n        // Mark closing request as started\n        ev.detail.dropdownClosingRequest.isFresh = false;\n    }\n\n    /**\n     * Dropdowns react to each other state changes through this method.\n     *\n     * All state changes must trigger on the bus, except when reacting to\n     * another dropdown state change.\n     *\n     * @see changeStateAndNotify()\n     *\n     * @param {DropdownStateChangedPayload} args\n     */\n    onDropdownStateChanged(args) {\n        if (this.el.contains(args.emitter.el)) {\n            // Do not listen to events emitted by self or children\n            return;\n        }\n\n        // Emitted by direct siblings ?\n        if (args.emitter.el.parentElement === this.el.parentElement) {\n            // Sync the group status\n            this.state.groupIsOpen = args.newState.groupIsOpen;\n\n            // Another dropdown is now open ? Close myself without notifying siblings.\n            if (this.state.open && args.newState.open) {\n                this.state.open = false;\n            }\n        } else {\n            // Another dropdown is now open ? Close myself and notify the world (i.e. siblings).\n            if (this.state.open && args.newState.open) {\n                this.close();\n            }\n        }\n    }\n\n    /**\n     * Toggles the dropdown on its toggler click.\n     */\n    onTogglerClick() {\n        this.toggle();\n    }\n\n    /**\n     * Opens the dropdown the mouse enters its toggler.\n     * NB: only if its siblings dropdown group is opened and if not a sub dropdown.\n     */\n    onTogglerMouseEnter() {\n        if (this.state.groupIsOpen && !this.state.open) {\n            this.togglerRef.el.focus();\n            this.open();\n        }\n    }\n\n    /**\n     * Used to close ourself on outside click.\n     *\n     * @param {MouseEvent} ev\n     */\n    onWindowClicked(ev) {\n        // Return if already closed\n        if (!this.state.open) {\n            return;\n        }\n        // Return if it's a different ui active element\n        if (this.ui.activeElement !== this.myActiveEl) {\n            return;\n        }\n        // Close if we clicked outside the dropdown, or outside the parent\n        // element if it is the toggler\n        const rootEl = this.props.toggler === \"parent\" ? this.el.parentElement : this.el;\n        const gotClickedInside = rootEl.contains(ev.target);\n        if (!gotClickedInside) {\n            this.close();\n        }\n    }\n}\nDropdown.bus = new EventBus();\nDropdown.props = {\n    toggler: {\n        type: String,\n        optional: true,\n        validate: (prop) => [\"parent\"].includes(prop),\n    },\n    startOpen: {\n        type: Boolean,\n        optional: true,\n    },\n    manualOnly: {\n        type: Boolean,\n        optional: true,\n    },\n    menuClass: {\n        type: String,\n        optional: true,\n    },\n    beforeOpen: {\n        type: Function,\n        optional: true,\n    },\n    togglerClass: {\n        type: String,\n        optional: true,\n    },\n    hotkey: {\n        type: String,\n        optional: true,\n    },\n    title: {\n        type: String,\n        optional: true,\n    },\n    position: {\n        type: String,\n        optional: true,\n    },\n};\nDropdown.template = \"web.Dropdown\";\n\nQWeb.registerComponent(\"Dropdown\", Dropdown);\n", "/** @odoo-module **/\n\nconst { Component, QWeb } = owl;\n\n/**\n * @enum {string}\n */\nexport const ParentClosingMode = {\n    None: \"none\",\n    ClosestParent: \"closest\",\n    AllParents: \"all\",\n};\n\n/**\n * @typedef DropdownItemSelectedEventDetail\n * @property {*} payload\n * @property {Object} dropdownClosingRequest\n * @property {boolean} dropdownClosingRequest.isFresh\n * @property {ParentClosingMode} dropdownClosingRequest.mode\n *\n * @typedef {CustomEvent<DropdownItemSelectedEventDetail>} DropdownItemSelectedEvent\n */\n\n/**\n * @extends Component\n */\nexport class DropdownItem extends Component {\n    /**\n     * Triggers a custom DropdownItemSelectedEvent\n     * @param {MouseEvent} ev\n     */\n    onClick(ev) {\n        if (this.props.href){\n            ev.preventDefault();\n        }\n\n        /** @type DropdownItemSelectedEventDetail */\n        const detail = {\n            payload: this.props.payload,\n            dropdownClosingRequest: {\n                isFresh: true,\n                mode: this.props.parentClosingMode,\n            },\n        };\n        this.trigger(\"dropdown-item-selected\", detail);\n    }\n}\nDropdownItem.template = \"web.DropdownItem\";\nDropdownItem.props = {\n    payload: {\n        type: Object,\n        optional: true,\n    },\n    parentClosingMode: {\n        type: ParentClosingMode,\n        optional: true,\n    },\n    hotkey: {\n        type: String,\n        optional: true,\n    },\n    href: {\n        type: String,\n        optional: true,\n    },\n    title: {\n        type: String,\n        optional: true,\n    },\n};\nDropdownItem.defaultProps = {\n    parentClosingMode: ParentClosingMode.AllParents,\n};\n\nQWeb.registerComponent(\"DropdownItem\", DropdownItem);\n", "/** @odoo-module */\n\nimport { useEffect, useService } from \"@web/core/utils/hooks\";\nimport { browser } from \"../browser/browser\";\nimport { localization } from \"@web/core/l10n/localization\";\nimport { scrollTo } from \"../utils/scrolling\";\n\n/**\n * @typedef {{\n *  el: HTMLElement,\n *  isActive: boolean,\n *  makeOnlyActive: ()=>void,\n *  navTarget: HTMLElement,\n *  isSubDropdown: boolean,\n *  isSubDropdownOpen: boolean,\n *  closeSubDropdown: ()=>void,\n *  openSubDropdown: (immediate?:boolean)=>void,\n * }} MenuElement\n */\n\nconst { hooks } = owl;\nconst { useComponent, useRef } = hooks;\n\nconst ACTIVE_MENU_ELEMENT_CLASS = \"focus\";\nconst MENU_ELEMENTS_SELECTORS = [\":scope > .dropdown-item\", \":scope > .dropdown\"];\nconst NEXT_ACTIVE_INDEX_FNS = {\n    FIRST: () => 0,\n    LAST: (list) => list.length - 1,\n    NEXT: (list, prevActiveIndex) => (prevActiveIndex + 1) % list.length,\n    PREV: (list, prevActiveIndex) => (prevActiveIndex <= 0 ? list.length : prevActiveIndex) - 1,\n};\n\nexport function useDropdownNavigation() {\n    /** @type {import(\"./dropdown\").Dropdown} */\n    const comp = useComponent();\n\n    // As this navigation hook relies on clicking \".dropdown-toggle\" elements,\n    // it is incompatible with a toggler=\"parent\" strategy for subdropdowns.\n    if (comp.hasParentDropdown && comp.props.toggler === \"parent\") {\n        throw new Error(\"A nested Dropdown must use its standard toggler\");\n    }\n\n    // Needed to avoid unwanted mouseclick behavior on a subdropdown toggler.\n    const originalOnTogglerClick = comp.onTogglerClick.bind(comp);\n    comp.onTogglerClick = (ev) => {\n        if (comp.hasParentDropdown && !ev.__fromDropdownNavigation) {\n            return;\n        }\n        originalOnTogglerClick();\n    };\n\n    // Needed to avoid unwanted mouseenter behavior on a subdropdown toggler.\n    const originalOnTogglerMouseEnter = comp.onTogglerMouseEnter.bind(comp);\n    comp.onTogglerMouseEnter = () => {\n        if (comp.hasParentDropdown) {\n            return;\n        }\n        originalOnTogglerMouseEnter();\n    };\n\n    // Needed to avoid unwanted selection when the mouse pointer is not in use\n    // but still somewhere in the middle of the dropdown menu list.\n    let mouseSelectionActive = true;\n\n    // Set up menu elements logic ----------------------------------------------\n    const menuRef = useRef(\"menuRef\");\n    /** @type {MenuElement[]} */\n    let menuElements = [];\n    useEffect(() => {\n        if (!comp.state.open) {\n            return;\n        }\n        // Prepare MenuElements\n        const addedListeners = [];\n        /** @type {NodeListOf<HTMLElement>} */\n        const queryResult = menuRef.el.querySelectorAll(MENU_ELEMENTS_SELECTORS.join());\n        for (const el of queryResult) {\n            const isSubDropdown = el.classList.contains(\"dropdown\");\n            const isSubDropdownOpen = () => el.classList.contains(\"show\");\n            const navTarget = isSubDropdown ? el.querySelector(\":scope > .dropdown-toggle\") : el;\n            let subDropdownTimeout;\n            const closeSubDropdown = () => {\n                browser.clearTimeout(subDropdownTimeout);\n                subDropdownTimeout = browser.setTimeout(() => {\n                    if (isSubDropdownOpen()) {\n                        const ev = new MouseEvent(\"click\", { bubbles: false });\n                        ev.__fromDropdownNavigation = true;\n                        navTarget.dispatchEvent(ev);\n                    }\n                }, 200);\n            };\n            const openSubDropdown = (immediate = false) => {\n                browser.clearTimeout(subDropdownTimeout);\n                subDropdownTimeout = browser.setTimeout(\n                    () => {\n                        if (!isSubDropdownOpen()) {\n                            const ev = new MouseEvent(\"click\", { bubbles: false });\n                            ev.__fromDropdownNavigation = true;\n                            navTarget.dispatchEvent(ev);\n                        }\n                    },\n                    immediate ? 0 : 200\n                );\n            };\n            const makeOnlyActive = () => {\n                // Make all others inactive\n                for (const menuElement of menuElements) {\n                    if (menuElement.el === el) {\n                        continue;\n                    }\n                    menuElement.navTarget.classList.remove(ACTIVE_MENU_ELEMENT_CLASS);\n                    if (menuElement.isSubDropdown) {\n                        menuElement.closeSubDropdown();\n                    }\n                }\n                // Make myself active\n                navTarget.classList.add(ACTIVE_MENU_ELEMENT_CLASS);\n                navTarget.focus();\n            };\n\n            /** @type {MenuElement} */\n            const menuElement = {\n                el,\n                get isActive() {\n                    return navTarget.classList.contains(ACTIVE_MENU_ELEMENT_CLASS);\n                },\n                makeOnlyActive,\n                navTarget,\n                get isSubDropdownOpen() {\n                    return isSubDropdownOpen();\n                },\n                isSubDropdown,\n                closeSubDropdown,\n                openSubDropdown,\n            };\n            menuElements.push(menuElement);\n\n            // Set up selection listeners\n            const elementListeners = {\n                mouseenter: () => {\n                    if (!mouseSelectionActive) {\n                        mouseSelectionActive = true;\n                    } else {\n                        makeOnlyActive();\n                        if (isSubDropdown) {\n                            openSubDropdown();\n                        }\n                    }\n                },\n            };\n            for (const [eventType, listener] of Object.entries(elementListeners)) {\n                navTarget.addEventListener(eventType, listener);\n            }\n            addedListeners.push([navTarget, elementListeners]);\n        }\n        return () => {\n            menuElements = [];\n            mouseSelectionActive = true;\n\n            // Clear mouse selection listeners\n            for (const [navTarget, listeners] of addedListeners) {\n                for (const [eventType, listener] of Object.entries(listeners)) {\n                    navTarget.removeEventListener(eventType, listener);\n                }\n            }\n        };\n    });\n\n    // Set up active menu element helpers --------------------------------------\n    /**\n     * @returns {MenuElement|undefined}\n     */\n    const getActiveMenuElement = () => {\n        return menuElements.find((menuElement) => menuElement.isActive);\n    };\n\n    /**\n     * @param {MenuElement|keyof NEXT_ACTIVE_INDEX_FNS} menuElement\n     */\n    const setActiveMenuElement = (menuElement) => {\n        if (menuElements.length) {\n            if (typeof menuElement === \"string\") {\n                const prevIndex = menuElements.indexOf(getActiveMenuElement());\n                const nextIndex = NEXT_ACTIVE_INDEX_FNS[menuElement](menuElements, prevIndex);\n                menuElement = menuElements[nextIndex];\n            }\n            menuElement.makeOnlyActive();\n            scrollTo(menuElement.el, { scrollable: menuElement.el.parentElement });\n        }\n    };\n\n    // Set up nested dropdowns - active first menu element behavior ------------\n    useEffect(\n        (open) => {\n            // If we just opened and we are a subdropdown, make active our first menu element.\n            if (open && comp.hasParentDropdown) {\n                setActiveMenuElement(\"FIRST\");\n            }\n        },\n        () => [comp.state.open]\n    );\n\n    // Set up keyboard navigation ----------------------------------------------\n    const hotkeyService = useService(\"hotkey\");\n    const closeAndRefocus = () => {\n        const toFocus =\n            comp.props.toggler === \"parent\"\n                ? comp.el.parentElement\n                : comp.el.querySelector(\":scope > .dropdown-toggle\");\n        comp.close().then(() => {\n            toFocus.focus();\n        });\n    };\n    const closeSubDropdown = comp.hasParentDropdown ? closeAndRefocus : () => {};\n    const openSubDropdown = () => {\n        const menuElement = getActiveMenuElement();\n        // Active menu element is a sub dropdown\n        if (menuElement && menuElement.isSubDropdown) {\n            menuElement.openSubDropdown(true);\n        }\n    };\n    const selectActiveMenuElement = () => {\n        const menuElement = getActiveMenuElement();\n        if (menuElement) {\n            if (menuElement.isSubDropdown) {\n                menuElement.openSubDropdown(true);\n            } else {\n                menuElement.navTarget.click();\n            }\n        }\n    };\n    let hotkeyRemoves = [];\n    const hotkeyCallbacks = {\n        home: () => setActiveMenuElement(\"FIRST\"),\n        end: () => setActiveMenuElement(\"LAST\"),\n        tab: () => setActiveMenuElement(\"NEXT\"),\n        \"shift+tab\": () => setActiveMenuElement(\"PREV\"),\n        arrowdown: () => setActiveMenuElement(\"NEXT\"),\n        arrowup: () => setActiveMenuElement(\"PREV\"),\n        arrowleft: localization.direction === \"rtl\" ? openSubDropdown : closeSubDropdown,\n        arrowright: localization.direction === \"rtl\" ? closeSubDropdown : openSubDropdown,\n        enter: selectActiveMenuElement,\n        escape: closeAndRefocus,\n    };\n    useEffect(\n        (open) => {\n            if (!open) {\n                return;\n            }\n            // Subscribe keynav\n            for (const [hotkey, callback] of Object.entries(hotkeyCallbacks)) {\n                const callbackWrapper = () => {\n                    const hasOpenedSubDropdown = menuElements.some((m) => m.isSubDropdownOpen);\n                    // Leave priority to last opened sub dropdown\n                    if (!hasOpenedSubDropdown) {\n                        mouseSelectionActive = false;\n                        callback.call(comp);\n                    }\n                };\n                hotkeyRemoves.push(\n                    hotkeyService.add(hotkey, callbackWrapper, { allowRepeat: true })\n                );\n            }\n            return () => {\n                // Unsubscribe keynav\n                for (const removeHotkey of hotkeyRemoves) {\n                    removeHotkey();\n                }\n                hotkeyRemoves = [];\n            };\n        },\n        () => [comp.state.open]\n    );\n}\n", "/** @odoo-module **/\n\nconst { Component, tags } = owl;\n\nexport class EffectContainer extends Component {\n    setup() {\n        this.effect = null;\n        this.props.bus.on(\"UPDATE\", this, (effect) => {\n            this.effect = effect;\n            this.render();\n        });\n    }\n    removeEffect() {\n        this.effect = null;\n        this.render();\n    }\n}\n\nEffectContainer.template = tags.xml`\n  <div class=\"o_effects_manager\">\n    <t t-if=\"effect\">\n        <t t-component=\"effect.Component\" t-props=\"effect.props\" t-key=\"effect.id\" close=\"() => removeEffect()\"/>\n    </t>\n  </div>`;\n", "/** @odoo-module **/\n\nimport { registry } from \"../registry\";\nimport { EffectContainer } from \"./effect_container\";\nimport { RainbowMan } from \"./rainbow_man\";\n\nconst { EventBus } = owl.core;\n\nconst effectRegistry = registry.category(\"effects\");\n\n// -----------------------------------------------------------------------------\n// RainbowMan effect\n// -----------------------------------------------------------------------------\n\n/**\n * Handles effect of type \"rainbow_man\". If the effects aren't disabled, returns\n * the RainbowMan component to instantiate and its props. If the effects are\n * disabled, displays the message in a notification.\n *\n * @param {Object} env\n * @param {Object} [params={}]\n * @param {string} [params.message=\"Well Done\"]\n *    The message in the notice the rainbowman holds or the content of the notification if effects are disabled\n *    Can be a simple a string\n *    Can be a string representation of html (prefer component if you want interactions in the DOM)\n * @param {boolean} [params.img_url=\"/web/static/img/smile.svg\"]\n *    The url of the image to display inside the rainbow\n * @param {boolean} [params.messageIsHtml]\n *    Set to true if the message encodes html, s.t. it will be correctly inserted into the DOM.\n * @param {\"slow\"|\"medium\"|\"fast\"|\"no\"} [params.fadeout=\"medium\"]\n *    Delay for rainbowman to disappear\n *    'fast' will make rainbowman dissapear quickly\n *    'medium' and 'slow' will wait little longer before disappearing (can be used when options.message is longer)\n *    'no' will keep rainbowman on screen until user clicks anywhere outside rainbowman\n * @param {owl.Component} [params.Component=RainbowMan]\n *    Component class to instantiate (if effects aren't disabled)\n * @param {Object} [params.props]\n *    If params.Component is given, its props can be passed with this argument\n */\nfunction rainbowMan(env, params = {}) {\n    let message = params.message;\n    if (message instanceof jQuery) {\n        console.log(\n            \"Providing a jQuery element to an effect is deprecated. Note that all event handlers will be lost.\"\n        );\n        message = message.html();\n    } else if (message instanceof Element) {\n        console.log(\n            \"Providing an HTML element to an effect is deprecated. Note that all event handlers will be lost.\"\n        );\n        message = message.outerHTML;\n    } else if (!message) {\n        message = env._t(\"well Done!\");\n    }\n    if (env.services.user.showEffect) {\n        return {\n            Component: params.Component || RainbowMan,\n            props: {\n                imgUrl: params.img_url || \"/web/static/img/smile.svg\",\n                fadeout: params.fadeout,\n                message,\n                messageIsHtml: params.messageIsHtml || false,\n                ...params.props,\n            },\n        };\n    }\n    env.services.notification.add(message);\n}\neffectRegistry.add(\"rainbow_man\", rainbowMan);\n\n// -----------------------------------------------------------------------------\n// Effect service\n// -----------------------------------------------------------------------------\n\nexport const effectService = {\n    start(env) {\n        const bus = new EventBus();\n        registry.category(\"main_components\").add(\"EffectContainer\", {\n            Component: EffectContainer,\n            props: { bus },\n        });\n        let effectId = 0;\n\n        /**\n         * @param {Object} params various params depending on the type of effect\n         * @param {string} [params.type=\"rainbow_man\"] the effect to display\n         */\n        function add(params) {\n            const type = params.type || \"rainbow_man\";\n            const effect = effectRegistry.get(type);\n            const { Component, props } = effect(env, params) || {};\n            if (Component) {\n                bus.trigger(\"UPDATE\", { Component, props, id: effectId++ });\n            }\n        }\n\n        return { add };\n    },\n};\n\nregistry.category(\"services\").add(\"effect\", effectService);\n", "/** @odoo-module **/\n\nimport { browser } from \"@web/core/browser/browser\";\nimport { useEffect } from \"@web/core/utils/hooks\";\n\nconst { Component, hooks } = owl;\n\n/**\n * The RainbowMan widget is the widget displayed by default as a 'fun/rewarding'\n * effect in some cases.  For example, when the user marked a large deal as won,\n * or when he cleared its inbox.\n *\n * This widget is mostly a picture and a message with a rainbow animation around\n * If you want to display a RainbowMan, you probably do not want to do it by\n * importing this file.  The usual way to do that would be to use the effect\n * service (by triggering the 'show_effect' event)\n */\nexport class RainbowMan extends Component {\n    /**\n     * @override\n     * @constructor\n     * @param {Object} [options]\n     * @param {string} [options.message] Message to be displayed on rainbowman card\n     * @param {string} [options.fadeout='medium'] Delay for rainbowman to disappear. 'fast' will make rainbowman dissapear quickly, 'medium' and 'slow' will wait little longer before disappearing (can be used when options.message is longer), 'no' will keep rainbowman on screen until user clicks anywhere outside rainbowman\n     * @param {string} [options.img_url] URL of the image to be displayed\n     */\n    setup() {\n        hooks.useExternalListener(document.body, \"click\", this.closeRainbowMan);\n        const fadeout = \"fadeout\" in this.props ? this.props.fadeout : \"medium\";\n        const delay = fadeout ? RainbowMan.rainbowFadeouts[fadeout] : false;\n        this.delay = typeof delay === \"number\" ? delay : false;\n        if (this.delay !== false) {\n            useEffect(\n                () => {\n                    const timeout = browser.setTimeout(() => {\n                        this.el.classList.add(\"o_reward_fading\");\n                    }, this.delay);\n                    return () => browser.clearTimeout(timeout);\n                },\n                () => []\n            );\n        }\n    }\n\n    onAnimationEnd(ev) {\n        if (this.delay !== false && ev.animationName === \"reward-fading-reverse\") {\n            ev.stopPropagation();\n            this.closeRainbowMan();\n        }\n    }\n\n    closeRainbowMan() {\n        this.props.close();\n    }\n}\nRainbowMan.template = \"web.RainbowMan\";\nRainbowMan.rainbowFadeouts = { slow: 4500, medium: 3500, fast: 2000, no: false };\n", "/** @odoo-module **/\n\nimport { browser } from \"../browser/browser\";\nimport { Dialog } from \"../dialog/dialog\";\nimport { _lt } from \"../l10n/translation\";\nimport { registry } from \"../registry\";\nimport { useService } from \"@web/core/utils/hooks\";\nimport { capitalize } from \"../utils/strings\";\n\nconst { hooks } = owl;\nconst { useState } = hooks;\n\nexport const odooExceptionTitleMap = new Map(\n    Object.entries({\n        \"odoo.addons.base.models.ir_mail_server.MailDeliveryException\": _lt(\n            \"MailDeliveryException\"\n        ),\n        \"odoo.exceptions.AccessDenied\": _lt(\"Access Denied\"),\n        \"odoo.exceptions.MissingError\": _lt(\"Missing Record\"),\n        \"odoo.exceptions.UserError\": _lt(\"User Error\"),\n        \"odoo.exceptions.ValidationError\": _lt(\"Validation Error\"),\n        \"odoo.exceptions.AccessError\": _lt(\"Access Error\"),\n        \"odoo.exceptions.Warning\": _lt(\"Warning\"),\n    })\n);\n\n// -----------------------------------------------------------------------------\n// Generic Error Dialog\n// -----------------------------------------------------------------------------\nexport class ErrorDialog extends Dialog {\n    setup() {\n        super.setup();\n        this.state = useState({\n            showTraceback: false,\n        });\n    }\n    onClickClipboard() {\n        browser.navigator.clipboard.writeText(\n            `${this.props.name}\\n${this.props.message}\\n${this.props.traceback}`\n        );\n    }\n}\nErrorDialog.contentClass = \"o_dialog_error\";\nErrorDialog.bodyTemplate = \"web.ErrorDialogBody\";\nErrorDialog.title = _lt(\"Odoo Error\");\n\n// -----------------------------------------------------------------------------\n// Client Error Dialog\n// -----------------------------------------------------------------------------\nexport class ClientErrorDialog extends ErrorDialog {}\nClientErrorDialog.title = _lt(\"Odoo Client Error\");\n\n// -----------------------------------------------------------------------------\n// Network Error Dialog\n// -----------------------------------------------------------------------------\nexport class NetworkErrorDialog extends ErrorDialog {}\nNetworkErrorDialog.title = _lt(\"Odoo Network Error\");\n\n// -----------------------------------------------------------------------------\n// RPC Error Dialog\n// -----------------------------------------------------------------------------\nexport class RPCErrorDialog extends ErrorDialog {\n    setup() {\n        super.setup();\n        this.inferTitle();\n        this.traceback = this.props.traceback;\n        if (this.props.data && this.props.data.debug) {\n            this.traceback = `${this.props.data.debug}`;\n        }\n    }\n    inferTitle() {\n        // If the server provides an exception name that we have in a registry.\n        if (this.props.exceptionName && odooExceptionTitleMap.has(this.props.exceptionName)) {\n            this.title = odooExceptionTitleMap.get(this.props.exceptionName).toString();\n            return;\n        }\n        // Fall back to a name based on the error type.\n        if (!this.props.type) return;\n        switch (this.props.type) {\n            case \"server\":\n                this.title = this.env._t(\"Odoo Server Error\");\n                break;\n            case \"script\":\n                this.title = this.env._t(\"Odoo Client Error\");\n                break;\n            case \"network\":\n                this.title = this.env._t(\"Odoo Network Error\");\n                break;\n        }\n    }\n\n    onClickClipboard() {\n        browser.navigator.clipboard.writeText(\n            `${this.props.name}\\n${this.props.message}\\n${this.traceback}`\n        );\n    }\n}\n\n// -----------------------------------------------------------------------------\n// Warning Dialog\n// -----------------------------------------------------------------------------\nexport class WarningDialog extends Dialog {\n    setup() {\n        super.setup();\n        this.title = this.env._t(\"Odoo Warning\");\n        this.inferTitle();\n        const { data, message } = this.props;\n        if (data && data.arguments && data.arguments.length > 0) {\n            this.message = data.arguments[0];\n        } else {\n            this.message = message;\n        }\n    }\n    inferTitle() {\n        if (this.props.exceptionName && odooExceptionTitleMap.has(this.props.exceptionName)) {\n            this.title = odooExceptionTitleMap.get(this.props.exceptionName).toString();\n        }\n    }\n}\nWarningDialog.bodyTemplate = \"web.WarningDialogBody\";\n\n// -----------------------------------------------------------------------------\n// Redirect Warning Dialog\n// -----------------------------------------------------------------------------\nexport class RedirectWarningDialog extends Dialog {\n    setup() {\n        super.setup();\n        this.actionService = useService(\"action\");\n        const { data, subType } = this.props;\n        const [message, actionId, buttonText, additional_context] = data.arguments;\n        this.title = capitalize(subType) || this.env._t(\"Odoo Warning\");\n        this.message = message;\n        this.actionId = actionId;\n        this.buttonText = buttonText;\n        this.additionalContext = additional_context;\n    }\n    async onClick() {\n        const options = {};\n        if (this.additionalContext) {\n            options.additionalContext = this.additionalContext;\n        }\n        await this.actionService.doAction(this.actionId, options);\n        this.close();\n    }\n    onCancel() {\n        this.close();\n    }\n}\nRedirectWarningDialog.bodyTemplate = \"web.RedirectWarningDialogBody\";\nRedirectWarningDialog.footerTemplate = \"web.RedirectWarningDialogFooter\";\n\n// -----------------------------------------------------------------------------\n// Error 504 Dialog\n// -----------------------------------------------------------------------------\nexport class Error504Dialog extends Dialog {}\nError504Dialog.bodyTemplate = \"web.Error504DialogBody\";\nError504Dialog.title = _lt(\"Request timeout\");\n\n// -----------------------------------------------------------------------------\n// Expired Session Error Dialog\n// -----------------------------------------------------------------------------\nexport class SessionExpiredDialog extends Dialog {\n    onClick() {\n        browser.location.reload();\n    }\n}\nSessionExpiredDialog.bodyTemplate = \"web.SessionExpiredDialogBody\";\nSessionExpiredDialog.footerTemplate = \"web.SessionExpiredDialogFooter\";\nSessionExpiredDialog.title = _lt(\"Odoo Session Expired\");\n\nregistry\n    .category(\"error_dialogs\")\n    .add(\"odoo.exceptions.AccessDenied\", WarningDialog)\n    .add(\"odoo.exceptions.AccessError\", WarningDialog)\n    .add(\"odoo.exceptions.MissingError\", WarningDialog)\n    .add(\"odoo.exceptions.UserError\", WarningDialog)\n    .add(\"odoo.exceptions.ValidationError\", WarningDialog)\n    .add(\"odoo.exceptions.RedirectWarning\", RedirectWarningDialog)\n    .add(\"odoo.http.SessionExpiredException\", SessionExpiredDialog)\n    .add(\"werkzeug.exceptions.Forbidden\", SessionExpiredDialog)\n    .add(\"504\", Error504Dialog);\n", "/** @odoo-module **/\n\nimport { browser } from \"../browser/browser\";\nimport { isIOS } from \"../browser/feature_detection\";\nimport { session } from \"../../session\";\nimport { ConnectionLostError, RPCError } from \"../network/rpc_service\";\nimport { registry } from \"../registry\";\nimport {\n    ClientErrorDialog,\n    ErrorDialog,\n    NetworkErrorDialog,\n    RPCErrorDialog,\n} from \"./error_dialogs\";\nimport { UncaughtClientError, UncaughtCorsError, UncaughtPromiseError } from \"./error_service\";\n\n/**\n * @typedef {import(\"../../env\").OdooEnv} OdooEnv\n * @typedef {import(\"./error_service\").UncaughtError} UncaughError\n */\n\nconst errorHandlerRegistry = registry.category(\"error_handlers\");\nconst errorDialogRegistry = registry.category(\"error_dialogs\");\nconst errorNotificationRegistry = registry.category(\"error_notifications\");\n\n// -----------------------------------------------------------------------------\n// CORS errors\n// -----------------------------------------------------------------------------\n\n/**\n * @param {OdooEnv} env\n * @param {UncaughError} error\n * @returns {boolean}\n */\nfunction corsErrorHandler(env, error) {\n    if (error instanceof UncaughtCorsError) {\n        // In Safari 16.4+ (as of Jun 14th 2023), an error occurs\n        // when going back and forward through the browser when the\n        // cache is enabled. A feedback has been reported but in the\n        // meantime, hide any script error in these versions.\n        if (isIOS() && session.is_frontend && odoo.debug !== \"assets\") {\n            return true;\n        }\n        env.services.dialog.add(NetworkErrorDialog, {\n            traceback: error.traceback,\n            message: error.message,\n            name: error.name,\n        });\n        return true;\n    }\n}\nerrorHandlerRegistry.add(\"corsErrorHandler\", corsErrorHandler, { sequence: 95 });\n\n// -----------------------------------------------------------------------------\n// Client errors\n// -----------------------------------------------------------------------------\n\n/**\n * @param {OdooEnv} env\n * @param {UncaughError} error\n * @returns {boolean}\n */\nfunction clientErrorHandler(env, error) {\n    if (error instanceof UncaughtClientError) {\n        env.services.dialog.add(ClientErrorDialog, {\n            traceback: error.traceback,\n            message: error.message,\n            name: error.name,\n        });\n        return true;\n    }\n}\nerrorHandlerRegistry.add(\"clientErrorHandler\", clientErrorHandler, { sequence: 96 });\n\n// -----------------------------------------------------------------------------\n// RPC errors\n// -----------------------------------------------------------------------------\n\n/**\n * @param {OdooEnv} env\n * @param {UncaughError} error\n * @param {Error} originalError\n * @returns {boolean}\n */\nexport function rpcErrorHandler(env, error, originalError) {\n    if (!(error instanceof UncaughtPromiseError)) {\n        return false;\n    }\n    if (originalError instanceof RPCError) {\n        // When an error comes from the server, it can have an exeption name.\n        // (or any string truly). It is used as key in the error dialog from\n        // server registry to know which dialog component to use.\n        // It's how a backend dev can easily map its error to another component.\n        // Note that for a client side exception, we don't use this registry\n        // as we can directly assign a value to `component`.\n        // error is here a RPCError\n        error.unhandledRejectionEvent.preventDefault();\n        const exceptionName = originalError.exceptionName;\n        let ErrorComponent = originalError.Component;\n        if (!ErrorComponent && exceptionName) {\n            if (errorNotificationRegistry.contains(exceptionName)) {\n                const notif = errorNotificationRegistry.get(exceptionName);\n                env.services.notification.add(notif.message || originalError.data.message, notif);\n                return true;\n            }\n            if (errorDialogRegistry.contains(exceptionName)) {\n                ErrorComponent = errorDialogRegistry.get(exceptionName);\n            }\n        }\n        if (!ErrorComponent && originalError.data.context) {\n            const exceptionClass = originalError.data.context.exception_class;\n            if (errorDialogRegistry.contains(exceptionClass)) {\n                ErrorComponent = errorDialogRegistry.get(exceptionClass);\n            }\n        }\n\n        env.services.dialog.add(ErrorComponent || RPCErrorDialog, {\n            traceback: error.traceback,\n            message: originalError.message,\n            name: originalError.name,\n            exceptionName: originalError.exceptionName,\n            data: originalError.data,\n            subType: originalError.subType,\n            code: originalError.code,\n            type: originalError.type,\n        });\n        return true;\n    }\n}\nerrorHandlerRegistry.add(\"rpcErrorHandler\", rpcErrorHandler, { sequence: 97 });\n\n// -----------------------------------------------------------------------------\n// Lost connection errors\n// -----------------------------------------------------------------------------\n\nlet connectionLostNotifRemove = null;\n/**\n * @param {OdooEnv} env\n * @param {UncaughError} error\n * @param {Error} originalError\n * @returns {boolean}\n */\nexport function lostConnectionHandler(env, error, originalError) {\n    if (!(error instanceof UncaughtPromiseError)) {\n        return false;\n    }\n    if (originalError instanceof ConnectionLostError) {\n        if (connectionLostNotifRemove) {\n            // notification already displayed (can occur if there were several\n            // concurrent rpcs when the connection was lost)\n            return true;\n        }\n        connectionLostNotifRemove = env.services.notification.add(\n            env._t(\"Connection lost. Trying to reconnect...\"),\n            { sticky: true }\n        );\n        let delay = 2000;\n        browser.setTimeout(function checkConnection() {\n            env.services\n                .rpc(\"/web/webclient/version_info\", {})\n                .then(function () {\n                    if (connectionLostNotifRemove) {\n                        connectionLostNotifRemove();\n                        connectionLostNotifRemove = null;\n                    }\n                    env.services.notification.add(\n                        env._t(\"Connection restored. You are back online.\"),\n                        {\n                            type: \"info\",\n                        }\n                    );\n                })\n                .catch(() => {\n                    // exponential backoff, with some jitter\n                    delay = delay * 1.5 + 500 * Math.random();\n                    browser.setTimeout(checkConnection, delay);\n                });\n        }, delay);\n        return true;\n    }\n}\nerrorHandlerRegistry.add(\"lostConnectionHandler\", lostConnectionHandler, { sequence: 98 });\n\n// -----------------------------------------------------------------------------\n// Empty rejection errors\n// -----------------------------------------------------------------------------\n\n/**\n * @param {OdooEnv} env\n * @param {UncaughError} error\n * @returns {boolean}\n */\nfunction emptyRejectionErrorHandler(env, error) {\n    if (!(error instanceof UncaughtPromiseError)) {\n        return false;\n    }\n    env.services.dialog.add(ClientErrorDialog, {\n        traceback: error.traceback,\n        message: error.message,\n        name: error.name,\n    });\n    return true;\n}\nerrorHandlerRegistry.add(\"emptyRejectionErrorHandler\", emptyRejectionErrorHandler, {\n    sequence: 99,\n});\n\n// -----------------------------------------------------------------------------\n// Default handler\n// -----------------------------------------------------------------------------\n\n/**\n * @param {OdooEnv} env\n * @param {UncaughError} error\n * @returns {boolean}\n */\nfunction defaultHandler(env, error) {\n    env.services.dialog.add(ErrorDialog, {\n        traceback: error.traceback,\n        message: error.message,\n        name: error.name,\n    });\n    return true;\n}\nerrorHandlerRegistry.add(\"defaultHandler\", defaultHandler, { sequence: 100 });\n", "/** @odoo-module **/\n\nimport { browser } from \"../browser/browser\";\nimport { _lt } from \"../l10n/translation\";\nimport { registry } from \"../registry\";\nimport { annotateTraceback, formatTraceback, getErrorTechnicalName } from \"./error_utils\";\n\n/**\n * Uncaught Errors have 4 properties:\n * - name: technical name of the error (UncaughtError, ...)\n * - message: short user visible description of the issue (\"Uncaught Cors Error\")\n * - traceback: long description, possibly technical of the issue (such as a traceback)\n * - originalError: the error that was actually being caught. Note that it is not\n *      necessarily an error (for ex, if some code does throw \"boom\")\n */\nexport class UncaughtError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = getErrorTechnicalName(this);\n        this.traceback = null;\n    }\n}\n\nexport class UncaughtClientError extends UncaughtError {\n    constructor(message = _lt(\"Uncaught Javascript Error\")) {\n        super(message);\n    }\n}\n\nexport class UncaughtPromiseError extends UncaughtError {\n    constructor(message = _lt(\"Uncaught Promise\")) {\n        super(message);\n        this.unhandledRejectionEvent = null;\n    }\n}\n\nexport class UncaughtCorsError extends UncaughtError {\n    constructor(message = _lt(\"Uncaught CORS Error\")) {\n        super(message);\n    }\n}\n\n/**\n * @param {UncaughtError} uncaughtError\n * @param {Error} originalError\n * @returns {string}\n */\nfunction combineErrorNames(uncaughtError, originalError) {\n    const originalErrorName = getErrorTechnicalName(originalError);\n    const uncaughtErrorName = getErrorTechnicalName(uncaughtError);\n    if (originalErrorName === Error.name) {\n        return uncaughtErrorName;\n    } else {\n        return `${uncaughtErrorName} > ${originalErrorName}`;\n    }\n}\n\n/**\n * @param {import(\"../../env\").OdooEnv} env\n * @param {UncaughtError} uncaughtError\n * @param {Error} originalError\n * @returns {Promise<void>}\n */\nasync function completeUncaughtError(env, uncaughtError, originalError) {\n    uncaughtError.name = combineErrorNames(uncaughtError, originalError);\n    if (env.debug.includes(\"assets\")) {\n        uncaughtError.traceback = await annotateTraceback(originalError);\n    } else {\n        uncaughtError.traceback = formatTraceback(originalError);\n    }\n    if (originalError.message) {\n        uncaughtError.message = `${uncaughtError.message} > ${originalError.message}`;\n    }\n}\n\nexport const errorService = {\n    start(env) {\n        function handleError(error, originalError, retry = true) {\n            const services = env.services;\n            if (!services.dialog || !services.notification || !services.rpc) {\n                // here, the environment is not ready to provide feedback to the user.\n                // We simply wait 1 sec and try again, just in case the application can\n                // recover.\n                if (retry) {\n                    browser.setTimeout(() => {\n                        handleError(error, originalError, false);\n                    }, 1000);\n                }\n                return;\n            }\n            for (let handler of registry.category(\"error_handlers\").getAll()) {\n                if (handler(env, error, originalError)) {\n                    break;\n                }\n            }\n        }\n\n        browser.addEventListener(\"error\", async (ev) => {\n            const { colno, error: originalError, filename, lineno, message } = ev;\n            const errorsToIgnore = [\n                // Ignore some unnecessary \"ResizeObserver loop limit exceeded\" error in Firefox.\n                \"ResizeObserver loop completed with undelivered notifications.\",\n                // ignore Chrome video internal error: https://crbug.com/809574\n                \"ResizeObserver loop limit exceeded\"\n            ]\n            if (!originalError && errorsToIgnore.includes(message)) {\n                return;\n            }\n            let uncaughtError;\n            if (!filename && !lineno && !colno) {\n                uncaughtError = new UncaughtCorsError();\n                uncaughtError.traceback = env._t(\n                    `Unknown CORS error\\n\\n` +\n                        `An unknown CORS error occured.\\n` +\n                        `The error probably originates from a JavaScript file served from a different origin.\\n` +\n                        `(Opening your browser console might give you a hint on the error.)`\n                );\n            } else {\n                uncaughtError = new UncaughtClientError();\n                await completeUncaughtError(env, uncaughtError, originalError);\n            }\n            handleError(uncaughtError, originalError);\n        });\n\n        browser.addEventListener(\"unhandledrejection\", async (ev) => {\n            const originalError = ev.reason;\n            const uncaughtError = new UncaughtPromiseError();\n            uncaughtError.unhandledRejectionEvent = ev;\n            if (originalError instanceof Error) {\n                await completeUncaughtError(env, uncaughtError, originalError);\n            }\n            handleError(uncaughtError, originalError);\n        });\n    },\n};\n\nregistry.category(\"services\").add(\"error\", errorService, { sequence: 1 });\n", "/** @odoo-module **/\n\nimport { loadAssets } from \"../assets\";\nimport { isBrowserChrome } from \"../browser/feature_detection\";\n\n/**\n * @param {Error} error\n * @returns {string}\n */\nexport function getErrorTechnicalName(error) {\n    return error.name !== Error.name ? error.name : error.constructor.name;\n}\n\n/**\n * Format the traceback of an error. Basically, we just add the error message\n * in the traceback if necessary (Chrome already does it by default, but not\n * other browser.)\n *\n * @param {Error} error\n * @returns {string}\n */\nexport function formatTraceback(error) {\n    let traceback = error.stack;\n    const errorName = getErrorTechnicalName(error);\n    if (!isBrowserChrome()) {\n        // transforms the stack into a chromium stack\n        // Chromium stack example:\n        // Error: Mock: Can't write value\n        //     _onOpenFormView@http://localhost:8069/web/content/425-baf33f1/web.assets.js:1064:30\n        //     ...\n        traceback = `${errorName}: ${error.message}\\n${error.stack}`.replace(/\\n/g, \"\\n    \");\n    } else if (error.stack) {\n        // Chromium stack starts with the error's name but the name is \"Error\" by default\n        // so we replace it to have the error type name\n        traceback = error.stack.replace(/^[^:]*/g, errorName);\n    }\n    return traceback;\n}\n\n/**\n * Returns an annotated traceback from an error. This is asynchronous because\n * it needs to fetch the sourcemaps for each script involved in the error,\n * then compute the correct file/line numbers and add the information to the\n * correct line.\n *\n * @param {Error} error\n * @returns {Promise<string>}\n */\nexport async function annotateTraceback(error) {\n    const traceback = formatTraceback(error);\n    try {\n        await loadAssets({\n            jsLibs: [\"/web/static/lib/stacktracejs/stacktrace.js\"],\n        });\n    } catch (e) {\n        return traceback;\n    }\n    // In Firefox, the error stack generated by anonymous code (example: invalid\n    // code in a template) is not compatible with the stacktrace lib. This code\n    // corrects the stack to make it compatible with the lib stacktrace.\n    if (error.stack) {\n        const regex = / line (\\d*) > (Function):(\\d*)/gm;\n        const subst = `:$1`;\n        error.stack = error.stack.replace(regex, subst);\n    }\n    // eslint-disable-next-line no-undef\n    let frames;\n    try {\n        frames = await StackTrace.fromError(error);\n    } catch (e) {\n        // This can crash if the originalError has no stack/stacktrace property\n        console.warn(\"The following error could not be annotated:\", error, e);\n        return traceback;\n    }\n    const lines = traceback.split(\"\\n\");\n    if (lines[lines.length - 1].trim() === \"\") {\n        // firefox traceback have an empty line at the end\n        lines.splice(-1);\n    }\n\n    // Chrome stacks contains some lines with (index 0) which apparently\n    // corresponds to some native functions (at least Promise.all). We need to\n    // ignore them because they will not correspond to a stackframe.\n    const skips = lines.filter((l) => l.includes(\"(index 0\")).length;\n    const offset = lines.length - frames.length - skips;\n    let lineIndex = offset;\n    let frameIndex = 0;\n    while (frameIndex < frames.length) {\n        const line = lines[lineIndex];\n        if (line.includes(\"(index 0)\")) {\n            lineIndex++;\n            continue;\n        }\n        const frame = frames[frameIndex];\n        const info = ` (${frame.fileName}:${frame.lineNumber})`;\n        lines[lineIndex] = line + info;\n        lineIndex++;\n        frameIndex++;\n    }\n    return lines.join(\"\\n\");\n}\n", "/** @odoo-module **/\n\nimport { useService } from \"@web/core/utils/hooks\";\n\nconst { Component, hooks, QWeb } = owl;\nconst { useRef } = hooks;\n\n/**\n * Custom file input\n *\n * Component representing a customized input of type file. It takes a sub-template\n * in its default t-slot and uses it as the trigger to open the file upload\n * prompt.\n * @extends Component\n *\n * Props:\n * @param {string} [props.accepted_file_extensions='*'] Comma-separated\n *      list of authorized file extensions (default to all).\n * @param {string} [props.action='/web/binary/upload'] Route called when\n *      a file is uploaded in the input.\n * @param {string} [props.id]\n * @param {string} [props.model]\n * @param {string} [props.multi_upload=false] Whether the input should allow\n *      to upload multiple files at once.\n */\nexport class FileInput extends Component {\n    setup() {\n        this.http = useService(\"http\");\n        this.fileInputRef = useRef(\"file-input\");\n    }\n\n    //--------------------------------------------------------------------------\n    // Handlers\n    //--------------------------------------------------------------------------\n\n    /**\n     * Upload an attachment to the given action with the given parameters:\n     * - ufile: list of files contained in the file input\n     * - csrf_token: CSRF token provided by the odoo global object\n     * - model: a specific model which will be given when creating the attachment\n     * - id: the id of the model target instance\n     * @private\n     */\n    async onFileInputChange() {\n        const { action, model, id } = this.props;\n        const params = {\n            csrf_token: odoo.csrf_token,\n            ufile: [...this.fileInputRef.el.files],\n        };\n        if (model) {\n            params.model = model;\n        }\n        if (id) {\n            params.id = id;\n        }\n        const fileData = await this.http.post(action, params, \"text\");\n        const parsedFileData = JSON.parse(fileData);\n        if (parsedFileData.error) {\n            throw new Error(parsedFileData.error);\n        }\n        this.trigger(\"uploaded\", { files: parsedFileData });\n    }\n\n    /**\n     * Redirect clicks from the trigger element to the input.\n     * @private\n     */\n    onTriggerClicked() {\n        this.fileInputRef.el.click();\n    }\n}\n\nFileInput.defaultProps = {\n    accepted_file_extensions: \"*\",\n    action: \"/web/binary/upload\",\n    multi_upload: false,\n};\nFileInput.props = {\n    accepted_file_extensions: { type: String, optional: 1 },\n    action: { type: String, optional: 1 },\n    id: { type: Number, optional: 1 },\n    model: { type: String, optional: 1 },\n    multi_upload: { type: Boolean, optional: 1 },\n};\nFileInput.template = \"web.FileInput\";\n\nQWeb.registerComponent(\"FileInput\", FileInput);\n", "/** @odoo-module **/\n\nimport { useEffect, useService } from \"@web/core/utils/hooks\";\n\n/**\n * This hook will register/unregister the given registration\n * when the caller component will mount/unmount.\n *\n * @param {string} hotkey\n * @param {()=>void} callback\n * @param {Object} options additional options\n * @param {boolean} [options.allowRepeat=false]\n *  allow registration to perform multiple times when hotkey is held down\n * @param {boolean} [options.bypassEditableProtection=false]\n *  if true the hotkey service will call this registration\n *  even if an editable element is focused\n * @param {boolean} [options.global=false]\n *  allow registration to perform no matter the UI active element\n */\nexport function useHotkey(hotkey, callback, options = {}) {\n    const hotkeyService = useService(\"hotkey\");\n    useEffect(\n        () => hotkeyService.add(hotkey, callback, options),\n        () => []\n    );\n}\n", "/** @odoo-module **/\n\nimport { isMacOS } from \"../browser/feature_detection\";\nimport { registry } from \"../registry\";\nimport { browser } from \"../browser/browser\";\nimport { getVisibleElements } from \"../utils/ui\";\n\nconst ALPHANUM_KEYS = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\");\nconst NAV_KEYS = [\n    \"arrowleft\",\n    \"arrowright\",\n    \"arrowup\",\n    \"arrowdown\",\n    \"pageup\",\n    \"pagedown\",\n    \"home\",\n    \"end\",\n    \"backspace\",\n    \"enter\",\n    \"tab\",\n    \"delete\",\n];\nconst MODIFIERS = new Set([\"alt\", \"control\", \"shift\"]);\nconst AUTHORIZED_KEYS = new Set([...ALPHANUM_KEYS, ...NAV_KEYS, \"escape\"]);\n\nexport const hotkeyService = {\n    dependencies: [\"ui\"],\n    // Be aware that all odoo hotkeys are designed with this modifier in mind,\n    // so changing the overlay modifier may conflict with some shortcuts.\n    overlayModifier: \"alt\",\n    start(env, { ui }) {\n        const registrations = new Map();\n        let nextToken = 0;\n        let overlaysVisible = false;\n\n        addListeners(browser);\n\n        function addListeners(target) {\n            target.addEventListener(\"keydown\", onKeydown);\n            target.addEventListener(\"keyup\", removeHotkeyOverlays);\n            target.addEventListener(\"blur\", removeHotkeyOverlays);\n            target.addEventListener(\"click\", removeHotkeyOverlays);\n        }\n\n        /**\n         * Handler for keydown events.\n         * Verifies if the keyboard event can be dispatched or not.\n         * Rules sequence to forbid dispatching :\n         * - UI is blocked\n         * - the pressed key is not whitelisted\n         *\n         * @param {KeyboardEvent} event\n         */\n        function onKeydown(event) {\n            if (!event.key) {\n                // Chrome may trigger incomplete keydown events under certain circumstances.\n                // E.g. when using browser built-in autocomplete on an input.\n                // See https://stackoverflow.com/questions/59534586/google-chrome-fires-keydown-event-when-form-autocomplete\n                return;\n            }\n\n            if (event.code && event.code.indexOf(\"Numpad\") === 0 && /^\\d$/.test(event.key)) {\n                // Ignore all number keys from the Keypad because of a certain input method\n                // of (advance-)ASCII characters on Windows OS: ALT+[numerical code from keypad]\n                // See https://support.microsoft.com/en-us/office/insert-ascii-or-unicode-latin-based-symbols-and-characters-d13f58d3-7bcb-44a7-a4d5-972ee12e50e0#bm1\n                return;\n            }\n\n            const hotkey = getActiveHotkey(event);\n\n            // Do not dispatch if UI is blocked\n            if (ui.isBlocked) {\n                return;\n            }\n\n            // Replace all [accesskey] attrs by [data-hotkey] on all elements.\n            // This is needed to take over on the default accesskey behavior\n            // and also to avoid any conflict with it.\n            const elementsWithAccessKey = document.querySelectorAll(\"[accesskey]\");\n            for (const el of elementsWithAccessKey) {\n                if (el instanceof HTMLElement) {\n                    el.dataset.hotkey = el.accessKey;\n                    el.removeAttribute(\"accesskey\");\n                }\n            }\n\n            // Special case: open hotkey overlays\n            if (hotkey === hotkeyService.overlayModifier) {\n                addHotkeyOverlays();\n                event.preventDefault();\n                return;\n            }\n\n            // Is the pressed key NOT whitelisted ?\n            const singleKey = hotkey.split(\"+\").pop();\n            if (!AUTHORIZED_KEYS.has(singleKey)) {\n                return;\n            }\n\n            // Protect any editable target that does not explicitly accept hotkeys\n            // NB: except for ESC, which is always allowed as hotkey in editables.\n            const targetIsEditable =\n                event.target instanceof HTMLElement &&\n                (/input|textarea/i.test(event.target.tagName) || event.target.isContentEditable);\n            const shouldProtectEditable =\n                targetIsEditable && !event.target.dataset.allowHotkeys && singleKey !== \"escape\";\n\n            // Finally, prepare and dispatch.\n            const infos = {\n                hotkey,\n                shouldProtectEditable,\n                _originalEvent: event,\n            };\n            dispatch(infos);\n            removeHotkeyOverlays(event);\n        }\n\n        /**\n         * Dispatches an hotkey to first matching registration.\n         * Registrations are iterated in following order:\n         * - priority to all registrations done through the hotkeyService.add()\n         *   method (NB: in descending order of insertion = newer first)\n         * - then all registrations done through the DOM [data-hotkey] attribute\n         *\n         * @param {{\n         *  hotkey: string,\n         *  shouldProtectEditable: boolean,\n         *  _originalEvent: KeyboardEvent\n         * }} infos\n         */\n        function dispatch(infos) {\n            let dispatched = false;\n            const { hotkey, shouldProtectEditable, _originalEvent: event } = infos;\n            const activeElement = ui.activeElement;\n\n            // Dispatch actual hotkey to all matching registrations\n            for (const reg of Array.from(registrations.values()).reverse()) {\n                if (!reg.global && reg.activeElement !== activeElement) {\n                    continue;\n                }\n\n                if (reg.hotkey !== hotkey) {\n                    continue;\n                }\n\n                if (!reg.allowRepeat && event.repeat) {\n                    continue;\n                }\n\n                if (!reg.bypassEditableProtection && shouldProtectEditable) {\n                    continue;\n                }\n\n                reg.callback();\n                dispatched = true;\n                break;\n            }\n            const overlayModParts = hotkeyService.overlayModifier.split(\"+\");\n            if (\n                !dispatched &&\n                !event.repeat &&\n                overlayModParts.every((el) => hotkey.includes(el))\n            ) {\n                // Click on all elements having a data-hotkey attribute matching the actual hotkey without the overlayModifier.\n                const cleanHotkey = hotkey\n                    .split(\"+\")\n                    .filter((key) => !overlayModParts.includes(key))\n                    .join(\"+\");\n                const elems = getVisibleElements(\n                    ui.activeElement,\n                    `[data-hotkey='${cleanHotkey}' i]`\n                );\n                for (const el of elems) {\n                    // AAB: not sure it is enough, we might need to trigger all events that occur when you actually click\n                    el.focus();\n                    el.click();\n                    dispatched = true;\n                    break;\n                }\n            }\n\n            // Only if event has been handheld.\n            if (dispatched) {\n                // Purpose: prevent browser defaults\n                event.preventDefault();\n                // Purpose: stop other window keydown listeners (e.g. home menu)\n                event.stopImmediatePropagation();\n            }\n        }\n\n        /**\n         * Add the hotkey overlays respecting the ui active element.\n         */\n        function addHotkeyOverlays() {\n            if (overlaysVisible) {\n                return;\n            }\n            for (const el of getVisibleElements(ui.activeElement, \"[data-hotkey]:not(:disabled)\")) {\n                const hotkey = el.dataset.hotkey;\n                const overlay = document.createElement(\"div\");\n                overlay.className = \"o_web_hotkey_overlay\";\n                overlay.appendChild(document.createTextNode(hotkey.toUpperCase()));\n\n                let overlayParent;\n                if (el.tagName.toUpperCase() === \"INPUT\") {\n                    // special case for the search input that has an access key\n                    // defined. We cannot set the overlay on the input itself,\n                    // only on its parent.\n                    overlayParent = el.parentElement;\n                } else {\n                    overlayParent = el;\n                }\n\n                if (overlayParent.style.position !== \"absolute\") {\n                    overlayParent.style.position = \"relative\";\n                }\n                overlayParent.appendChild(overlay);\n            }\n            overlaysVisible = true;\n        }\n\n        /**\n         * Remove all the hotkey overlays.\n         */\n        function removeHotkeyOverlays(event) {\n            if (!overlaysVisible) {\n                return;\n            }\n            for (const overlay of document.querySelectorAll(\".o_web_hotkey_overlay\")) {\n                overlay.remove();\n            }\n            overlaysVisible = false;\n            event.preventDefault();\n        }\n\n        /**\n         * Get the actual hotkey being pressed.\n         *\n         * @param {KeyboardEvent} ev\n         * @returns {string} the active hotkey, in lowercase\n         */\n        function getActiveHotkey(ev) {\n            const hotkey = [];\n\n            // ------- Modifiers -------\n            // Modifiers are pushed in ascending order to the hotkey.\n            if (isMacOS() ? ev.ctrlKey : ev.altKey) {\n                hotkey.push(\"alt\");\n            }\n            if (isMacOS() ? ev.metaKey : ev.ctrlKey) {\n                hotkey.push(\"control\");\n            }\n            if (ev.shiftKey) {\n                hotkey.push(\"shift\");\n            }\n\n            // ------- Key -------\n            let key = ev.key.toLowerCase();\n            // Identify if the user has tapped on the number keys above the text keys.\n            if (ev.code && ev.code.indexOf(\"Digit\") === 0) {\n                key = ev.code.slice(-1);\n            }\n            // Prefer physical keys for non-latin keyboard layout.\n            if (!AUTHORIZED_KEYS.has(key) && ev.code && ev.code.indexOf(\"Key\") === 0) {\n                key = ev.code.slice(-1).toLowerCase();\n            }\n            // Make sure we do not duplicate a modifier key\n            if (!MODIFIERS.has(key)) {\n                hotkey.push(key);\n            }\n            return hotkey.join(\"+\");\n        }\n\n        /**\n         * Registers a new hotkey.\n         *\n         * @param {string} hotkey\n         * @param {()=>void} callback\n         * @param {Object} options additional options\n         * @param {boolean} [options.allowRepeat=false]\n         *  allow registration to perform multiple times when hotkey is held down\n         * @param {boolean} [options.bypassEditableProtection=false]\n         *  if true the hotkey service will call this registration\n         *  even if an editable element is focused\n         * @param {boolean} [options.global=false]\n         *  allow registration to perform no matter the UI active element\n         * @returns {number} registration token\n         */\n        function registerHotkey(hotkey, callback, options = {}) {\n            // Validate some informations\n            if (!hotkey || hotkey.length === 0) {\n                throw new Error(\"You must specify an hotkey when registering a registration.\");\n            }\n\n            if (!callback || typeof callback !== \"function\") {\n                throw new Error(\n                    \"You must specify a callback function when registering a registration.\"\n                );\n            }\n\n            /**\n             * An hotkey must comply to these rules:\n             *  - all parts are whitelisted\n             *  - single key part comes last\n             *  - each part is separated by the dash character: \"+\"\n             */\n            const keys = hotkey\n                .toLowerCase()\n                .split(\"+\")\n                .filter((k) => !MODIFIERS.has(k));\n            if (keys.some((k) => !AUTHORIZED_KEYS.has(k))) {\n                throw new Error(\n                    `You are trying to subscribe for an hotkey ('${hotkey}')\n            that contains parts not whitelisted: ${keys.join(\", \")}`\n                );\n            } else if (keys.length > 1) {\n                throw new Error(\n                    `You are trying to subscribe for an hotkey ('${hotkey}')\n            that contains more than one single key part: ${keys.join(\"+\")}`\n                );\n            }\n\n            // Add registration\n            const token = nextToken++;\n            const registration = {\n                hotkey: hotkey.toLowerCase(),\n                callback,\n                activeElement: null,\n                allowRepeat: options && options.allowRepeat,\n                bypassEditableProtection: options && options.bypassEditableProtection,\n                global: options && options.global,\n            };\n            registrations.set(token, registration);\n\n            // Due to the way elements are mounted in the DOM by Owl (bottom-to-top),\n            // we need to wait the next micro task tick to set the context owner of the registration.\n            Promise.resolve().then(() => {\n                registration.activeElement = ui.activeElement;\n            });\n\n            return token;\n        }\n\n        /**\n         * Unsubscribes the token corresponding registration.\n         *\n         * @param {number} token\n         */\n        function unregisterHotkey(token) {\n            registrations.delete(token);\n        }\n\n        return {\n            /**\n             * @param {string} hotkey\n             * @param {() => void} callback\n             * @param {Object} options\n             * @param {boolean} [options.allowRepeat=false]\n             * @param {boolean} [options.bypassEditableProtection=false]\n             * @param {boolean} [options.global=false]\n             * @returns {() => void}\n             */\n            add(hotkey, callback, options = {}) {\n                const token = registerHotkey(hotkey, callback, options);\n                return () => {\n                    unregisterHotkey(token);\n                };\n            },\n            /**\n             * @param {HTMLIFrameElement} iframe\n             */\n            registerIframe(iframe) {\n                addListeners(iframe.contentWindow);\n            },\n        };\n    },\n};\n\nregistry.category(\"services\").add(\"hotkey\", hotkeyService);\n", "/** @odoo-module **/\n\nimport { localization } from \"@web/core/l10n/localization\";\nimport { _t } from \"@web/core/l10n/translation\";\nimport { memoize } from \"@web/core/utils/functions\";\nimport { sprintf } from \"@web/core/utils/strings\";\n\nconst { DateTime, Settings } = luxon;\n\nconst SERVER_DATE_FORMAT = \"yyyy-MM-dd\";\nconst SERVER_TIME_FORMAT = \"HH:mm:ss\";\n\n// -----------------------------------------------------------------------------\n// Helpers\n// -----------------------------------------------------------------------------\n\nconst alphaRegex = /[a-zA-Z]/g;\nconst nonAlphaRegex = /[^a-zA-Z]/g;\nconst nonDigitsRegex = /[^0-9]/g;\n\nconst normalizeFormatTable = {\n    // Python strftime to luxon.js conversion table\n    // See odoo/addons/base/views/res_lang_views.xml\n    // for details about supported directives\n    a: \"ccc\",\n    A: \"cccc\",\n    b: \"MMM\",\n    B: \"MMMM\",\n    d: \"dd\",\n    H: \"HH\",\n    I: \"hh\",\n    j: \"o\",\n    m: \"MM\",\n    M: \"mm\",\n    p: \"a\",\n    S: \"ss\",\n    W: \"WW\",\n    w: \"c\",\n    y: \"yy\",\n    Y: \"yyyy\",\n    c: \"ccc MMM d HH:mm:ss yyyy\",\n    x: \"MM/dd/yy\",\n    X: \"HH:mm:ss\",\n};\n\nconst smartDateUnits = {\n    d: \"days\",\n    m: \"months\",\n    w: \"weeks\",\n    y: \"years\",\n};\nconst smartDateRegex = new RegExp(`^([+-])(\\\\d+)([${Object.keys(smartDateUnits).join(\"\")}]?)$`);\n\n/**\n * Smart date inputs are shortcuts to write dates quicker.\n * These shortcuts should respect the format ^[+-]\\d+[dmwy]?$\n *\n * e.g.\n *   \"+1d\" or \"+1\" will return now + 1 day\n *   \"-2w\" will return now - 2 weeks\n *   \"+3m\" will return now + 3 months\n *   \"-4y\" will return now + 4 years\n *\n * @param {string} value\n * @returns {DateTime|false} Luxon datetime object (in the UTC timezone)\n */\nfunction parseSmartDateInput(value) {\n    const match = smartDateRegex.exec(value);\n    if (match) {\n        let date = DateTime.utc();\n        const offset = parseInt(match[2], 10);\n        const unit = smartDateUnits[match[3] || \"d\"];\n        if (match[1] === \"+\") {\n            date = date.plus({ [unit]: offset });\n        } else {\n            date = date.minus({ [unit]: offset });\n        }\n        return date;\n    }\n    return false;\n}\n\n/**\n * Enforces some restrictions to a Luxon DateTime object.\n * Returns it if within those restrictions.\n * Returns false otherwise.\n *\n * @param {DateTime | false} date\n * @returns {DateTime | false}\n */\nfunction constrain(dt) {\n    let valid = dt !== false;\n    valid = valid && dt.isValid;\n    valid = valid && dt.year >= 1000;\n    valid = valid && dt.year < 10000;\n    return valid ? dt : false;\n}\n\n/**\n * Removes any duplicated alphabetic characters in a given string.\n * Example: \"aa-bb-CCcc-ddD xxxx-Yy-ZZ\" -> \"a-b-Cc-dD x-Yy-Z\"\n *\n * @param {string} str\n * @returns {string}\n */\nconst stripAlphaDupes = memoize(function stripAlphaDupes(str) {\n    return str.replace(alphaRegex, (letter, index, str) => {\n        return letter === str[index - 1] ? \"\" : letter;\n    });\n});\n\n/**\n * Convert Python strftime to escaped luxon.js format.\n *\n * @param {string} value original format\n * @returns {string} valid Luxon format\n */\nexport const strftimeToLuxonFormat = memoize(function strftimeToLuxonFormat(value) {\n    const output = [];\n    let inToken = false;\n    for (let index = 0; index < value.length; ++index) {\n        let character = value[index];\n        if (character === \"%\" && !inToken) {\n            inToken = true;\n            continue;\n        }\n        if (character.match(alphaRegex)) {\n            if (inToken && normalizeFormatTable[character] !== undefined) {\n                character = normalizeFormatTable[character];\n            } else {\n                character = \"'\" + character + \"'\";  // luxon escape\n            }\n        }\n        output.push(character);\n        inToken = false;\n    }\n    return output.join(\"\");\n});\n\n// -----------------------------------------------------------------------------\n// Formatting\n// -----------------------------------------------------------------------------\n\n/**\n * Formats a DateTime object to a date string\n *\n * `options.timezone` is defaulted to false on dates since we assume they\n * shouldn't be affected by timezones like datetimes.\n *\n * @see formatDateTime\n * @returns {string}\n */\nexport function formatDate(value, options = {}) {\n    value = value.setZone(\"utc\", { keepLocalTime: true });\n    return formatDateTime(value, {\n        timezone: false, // Timezone should never alter a 'date' value.\n        ...options,\n        format: options.format || localization.dateFormat,\n    });\n}\n\n/**\n * Formats a DateTime object to a datetime string\n *\n * @param {DateTime | false} value\n * @param {Object} options\n * @param {string} [options.format]\n *  Provided format used to format the input DateTime object.\n *\n *  Default=the session localization format.\n *\n * @param {boolean} [options.timezone]\n *  - True = input will be set in local time before being formatted.\n *  - False = input will be set in UTC time before being formatted.\n *\n *  Default=false.\n *\n * @param {string} [options.numberingSystem]\n *  Provided numbering system used to parse the input value.\n *\n * Default=the default numbering system assigned to luxon\n * @see localization_service.js\n *\n * @returns {string}\n */\nexport function formatDateTime(value, options = {}) {\n    if (value === false) {\n        return \"\";\n    }\n    const format = options.format || localization.dateTimeFormat;\n    const numberingSystem = options.numberingSystem || Settings.defaultNumberingSystem;\n    const zone = options.timezone ? \"local\" : \"utc\";\n    value = value.setZone(zone, { keepLocaltime: options.timezone });\n    return value.toFormat(format, { numberingSystem });\n}\n\n// -----------------------------------------------------------------------------\n// Parsing\n// -----------------------------------------------------------------------------\n\n/**\n * Parses a string value to a Luxon DateTime object.\n *\n * `options.timezone` is defaulted to false on dates since we assume they\n * shouldn't be affected by timezones like datetimes.\n *\n * @see parseDateTime (Note: since we're only interested by the date itself, the\n *  returned value will always be set at the start of the day)\n * @returns {DateTime | false} Luxon DateTime object\n */\nexport function parseDate(value, options = {}) {\n    return parseDateTime(value, { timezone: false, ...options }).startOf(\"day\");\n}\n\n/**\n * Parses a string value to a Luxon DateTime object.\n *\n * @param {string} value value to parse.\n *  - Value can take the form of a smart date:\n *    e.g. \"+3w\" for three weeks from now.\n *    (`options.format` and `options.timezone` are ignored in this case)\n *\n *  - If value cannot be parsed within the provided format,\n *    ISO8601 and SQL formats are then tried.\n *\n * @param {object} options\n * @param {string} [options.format]\n *  Provided format used to parse the input value.\n *\n *  Default=the session localization format\n *\n * @param {boolean} [options.timezone]\n *  - True = input value is considered being in localtime.\n *  - False = input value is considered being in utc time, and the returned\n *            value will have the UTC zone.\n *\n *  NB: ISO strings containing timezone information\n *      will have priority over this option.\n *\n *  Default=false.\n *\n * @param {string} [options.locale]\n *  Provided locale used to parse the input value.\n *\n * Default=the session localization locale\n *\n * @param {string} [options.numberingSystem]\n *  Provided numbering system used to parse the input value.\n *\n * Default=the default numbering system assigned to luxon\n * @see localization_service.js\n *\n * @returns {DateTime | false} Luxon DateTime object\n */\nexport function parseDateTime(value, options = {}) {\n    if (!value) {\n        return false;\n    }\n\n    const valueDigitsOnly = value.replace(nonDigitsRegex, \"\");\n    const parseOpts = {\n        setZone: true,\n        zone: options.timezone ? \"local\" : \"utc\",\n        locale: options.locale,\n        numberingSystem: options.numberingSystem || Settings.defaultNumberingSystem,\n    };\n\n    let result = constrain(parseSmartDateInput(value));\n\n    if (!result) {\n        const fmt = options.format || localization.dateTimeFormat;\n        const fmtWoZero = stripAlphaDupes(fmt);\n\n        // Luxon is not permissive regarding delimiting characters in the format.\n        // So if the value to parse has less characters than the format, we would\n        // try to parse without the delimiting characters.\n        const woSeps = {\n            val: valueDigitsOnly,\n            fmt: fmt.replace(nonAlphaRegex, \"\").slice(0, valueDigitsOnly.length),\n        };\n\n        result =\n            constrain(DateTime.fromFormat(value, fmt, parseOpts)) ||\n            constrain(DateTime.fromFormat(value, fmtWoZero, parseOpts)) ||\n            constrain(DateTime.fromFormat(woSeps.val, woSeps.fmt, parseOpts));\n    }\n\n    if (!result) {\n        if (valueDigitsOnly.length > 4) {\n            // Also try some fallback formats, but only if value counts more than\n            // four digit characters as this could get misinterpreted as the time of\n            // the actual date.\n            result =\n                constrain(DateTime.fromISO(value, parseOpts)) || // ISO8601\n                constrain(DateTime.fromSQL(value, parseOpts)); // last try: SQL\n        }\n    }\n\n    if (!result) {\n        throw new Error(sprintf(_t(\"'%s' is not a correct date or datetime\"), value));\n    }\n\n    return options.timezone ? result : result.toUTC();\n}\n\n/**\n * Returns a date object parsed from the given serialized string.\n * @param {string} value\n * @returns {DateTime | false}\n */\nexport const deserializeDate = (value) => {\n    return parseDate(value, {\n        format: SERVER_DATE_FORMAT,\n        numberingSystem: \"latn\",\n    });\n};\n\n/**\n * Returns a datetime object parsed from the given serialized string.\n * @param {string} value\n * @returns {DateTime | false}\n */\nexport const deserializeDateTime = (value) => {\n    return parseDateTime(value, {\n        format: `${SERVER_DATE_FORMAT} ${SERVER_TIME_FORMAT}`,\n        numberingSystem: \"latn\",\n    });\n};\n\n/**\n * Returns a serialized string representing the given date.\n * @param {DateTime} value\n * @returns {string}\n */\nexport const serializeDate = (value) => {\n    return formatDate(value, {\n        format: SERVER_DATE_FORMAT,\n        numberingSystem: \"latn\",\n    });\n};\n\n/**\n * Returns a serialized string representing the given datetime.\n * @param {DateTime} value\n * @returns {string}\n */\nexport const serializeDateTime = (value) => {\n    return formatDateTime(value, {\n        format: `${SERVER_DATE_FORMAT} ${SERVER_TIME_FORMAT}`,\n        numberingSystem: \"latn\",\n    });\n};\n", "/** @odoo-module **/\n\n/**\n * @type {any}\n */\nconst notReadyError = new Error(\n    \"Localization parameters not ready yet. Maybe add 'localization' to your dependencies?\"\n);\n\n/**\n * This is the main object holding user specific data about the localization. Its basically\n * the JS counterpart of the \"res.lang\" model.\n * It is useful to directly access those data anywhere, even outside Components.\n *\n * Important Note: its data are actually loaded by the localization_service,\n * so a code like the following would not work:\n *   import { localization } from \"@web/core/l10n/localization\";\n *   const dateFormat = localization.dateFormat; // dateFormat isn't set yet\n */\nexport const localization = {\n    dateFormat: notReadyError,\n    dateTimeFormat: notReadyError,\n    timeFormat: notReadyError,\n    decimalPoint: notReadyError,\n    direction: notReadyError,\n    grouping: notReadyError,\n    multiLang: notReadyError,\n    thousandsSep: notReadyError,\n    weekStart: notReadyError,\n};\n", "/** @odoo-module **/\n\nimport { session } from \"@web/session\";\nimport { browser } from \"../browser/browser\";\nimport { registry } from \"../registry\";\nimport { strftimeToLuxonFormat } from \"./dates\";\nimport { localization } from \"./localization\";\nimport { translatedTerms, _t } from \"./translation\";\n\nconst { Settings } = luxon;\n\n/** @type {[RegExp, string][]} */\nconst NUMBERING_SYSTEMS = [\n    [/^ar-(sa|sy|001)$/i, \"arab\"],\n    [/^bn/i, \"beng\"],\n    [/^bo/i, \"tibt\"],\n    // [/^fa/i, \"Farsi (Persian)\"], // No numberingSystem found in Intl\n    // [/^(hi|mr|ne)/i, \"Hindi\"], // No numberingSystem found in Intl\n    // [/^my/i, \"Burmese\"], // No numberingSystem found in Intl\n    [/^pa-in/i, \"guru\"],\n    [/^ta/i, \"tamldec\"],\n    [/.*/i, \"latn\"],\n];\n\nexport const localizationService = {\n    dependencies: [\"user\"],\n    start: async (env, { user }) => {\n        // add \"data-toolip\" to the list of translatable attributes in owl templates\n        owl.config.translatableAttributes.push(\"data-tooltip\");\n\n        const cacheHashes = session.cache_hashes || {};\n        const translationsHash = cacheHashes.translations || new Date().getTime().toString();\n        const lang = user.lang || null;\n        const translationURL = session.translationURL || \"/web/webclient/translations\";\n        let url = `${translationURL}/${translationsHash}`;\n        if (lang) {\n            url += `?lang=${lang}`;\n        }\n\n        const response = await browser.fetch(url);\n        if (!response.ok) {\n            throw new Error(\"Error while fetching translations\");\n        }\n\n        const {\n            lang_parameters: userLocalization,\n            modules: modules,\n            multi_lang: multiLang,\n        } = await response.json();\n\n        // FIXME We flatten the result of the python route.\n        // Eventually, we want a new python route to return directly the good result.\n        let terms = {};\n        for (const addon of Object.keys(modules)) {\n            for (const message of modules[addon].messages) {\n                terms[message.id] = message.string;\n            }\n        }\n\n        Object.setPrototypeOf(translatedTerms, terms);\n        env._t = _t;\n        env.qweb.translateFn = _t;\n\n        if (lang) {\n            // Setup lang inside luxon. The locale codes received from the server contain \"_\",\n            // whereas the Intl codes use \"-\" (Unicode BCP 47). There's only one exception, which\n            // is locale \"sr@latin\", for which we manually fallback to the \"sr-Latn-RS\" locale.\n            const locale = lang === \"sr@latin\" ? \"sr-Latn-RS\" : lang.replace(/_/g, \"-\");\n            Settings.defaultLocale = locale;\n            for (const [re, numberingSystem] of NUMBERING_SYSTEMS) {\n                if (re.test(locale)) {\n                    Settings.defaultNumberingSystem = numberingSystem;\n                    break;\n                }\n            }\n        }\n\n        const dateFormat = strftimeToLuxonFormat(userLocalization.date_format);\n        const timeFormat = strftimeToLuxonFormat(userLocalization.time_format);\n        const dateTimeFormat = `${dateFormat} ${timeFormat}`;\n        const grouping = JSON.parse(userLocalization.grouping);\n\n        Object.assign(localization, {\n            dateFormat,\n            timeFormat,\n            dateTimeFormat,\n            decimalPoint: userLocalization.decimal_point,\n            direction: userLocalization.direction,\n            grouping,\n            multiLang,\n            thousandsSep: userLocalization.thousands_sep,\n            weekStart: userLocalization.week_start,\n        });\n    },\n};\n\nregistry.category(\"services\").add(\"localization\", localizationService);\n", "/** @odoo-module **/\n\nexport const translatedTerms = {};\n\n/**\n * Translate a term, or return the term if no translation can be found.\n *\n * Note that it translates eagerly, which means that if the translations have\n * not been loaded yet, it will return the untranslated term. If it cannot be\n * guaranteed that translations are ready, one should use the _lt function\n * instead (see below)\n *\n * @param {string} term\n * @returns {string}\n */\nexport function _t(term) {\n    return translatedTerms[term] || term;\n}\n\nclass LazyTranslatedString extends String {\n    valueOf() {\n        const str = super.valueOf();\n        return _t(str);\n    }\n    toString() {\n        return this.valueOf();\n    }\n}\n\n/**\n * Lazy translation function, only performs the translation when actually\n * printed (e.g. inserted into a template).\n * Useful when defining translatable strings in code evaluated before the\n * translations are loaded, as class attributes or at the top-level of\n * an Odoo Web module\n *\n * @param {string} term\n * @returns {LazyTranslatedString}\n */\nexport function _lt(term) {\n    return new LazyTranslatedString(term);\n}\n\n/*\n * Setup jQuery timeago:\n * Strings in timeago are \"composed\" with prefixes, words and suffixes. This\n * makes their detection by our translating system impossible. Use all literal\n * strings we're using with a translation mark here so the extractor can do its\n * job.\n */\n_lt(\"less than a minute ago\");\n_lt(\"about a minute ago\");\n_lt(\"%d minutes ago\");\n_lt(\"about an hour ago\");\n_lt(\"%d hours ago\");\n_lt(\"a day ago\");\n_lt(\"%d days ago\");\n_lt(\"about a month ago\");\n_lt(\"%d months ago\");\n_lt(\"about a year ago\");\n_lt(\"%d years ago\");\n", "/** @odoo-module */\nimport { registry } from \"./registry\";\nimport { NotUpdatable, ErrorHandler } from \"./utils/components\";\n\nconst { Component, tags } = owl;\n\nexport class MainComponentsContainer extends Component {\n    setup() {\n        this.Components = registry.category(\"main_components\").getEntries();\n    }\n\n    handleComponentError(error, C) {\n        // remove the faulty component and rerender without it\n        this.Components.splice(this.Components.indexOf(C), 1);\n        this.render();\n        /**\n         * we rethrow the error to notify the user something bad happened.\n         * We do it after a tick to make sure owl can properly finish its\n         * rendering\n         */\n        Promise.resolve().then(() => {\n            throw error;\n        });\n    }\n}\n\nMainComponentsContainer.template = tags.xml`\n<div>\n    <t t-foreach=\"Components\" t-as=\"C\" t-key=\"C[0]\">\n        <NotUpdatable>\n            <ErrorHandler onError=\"error => handleComponentError(error, C)\">\n                <t t-component=\"C[1].Component\" t-props=\"C[1].props\"/>\n            </ErrorHandler>\n        </NotUpdatable>\n    </t>\n</div>\n`;\nMainComponentsContainer.components = { NotUpdatable, ErrorHandler };\n", "/** @odoo-module **/\n\nimport { _lt } from \"../l10n/translation\";\nimport { makeErrorFromResponse } from \"@web/core/network/rpc_service\";\nimport { ConnectionLostError } from \"@web/core/network/rpc_service\";\nimport { browser } from \"@web/core/browser/browser\";\n\n// -----------------------------------------------------------------------------\n// Content Disposition Library\n// -----------------------------------------------------------------------------\n\n/*\n(The MIT License)\nCopyright (c) 2014-2017 Douglas Christopher Wilson\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Stripped down to only parsing/decoding.\n * Slightly changed for export and lint compliance\n */\n\n/**\n * RegExp to match percent encoding escape.\n * @private\n */\nconst HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g;\n\n/**\n * RegExp to match non-latin1 characters.\n * @private\n */\nconst NON_LATIN1_REGEXP = /[^\\x20-\\x7e\\xa0-\\xff]/g;\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n * @private\n */\nconst QESC_REGEXP = /\\\\([\\u0000-\\u007f])/g;\n\n/**\n * RegExp for various RFC 2616 grammar\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * HT            = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n * @private\n */\nconst PARAM_REGEXP = /;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*(\"(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*\"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g;\n\n/**\n * RegExp for various RFC 5987 grammar\n *\n * ext-value     = charset  \"'\" [ language ] \"'\" value-chars\n * charset       = \"UTF-8\" / \"ISO-8859-1\" / mime-charset\n * mime-charset  = 1*mime-charsetc\n * mime-charsetc = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"%\" / \"&\"\n *               / \"+\" / \"-\" / \"^\" / \"_\" / \"`\"\n *               / \"{\" / \"}\" / \"~\"\n * language      = ( 2*3ALPHA [ extlang ] )\n *               / 4ALPHA\n *               / 5*8ALPHA\n * extlang       = *3( \"-\" 3ALPHA )\n * value-chars   = *( pct-encoded / attr-char )\n * pct-encoded   = \"%\" HEXDIG HEXDIG\n * attr-char     = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"&\" / \"+\" / \"-\" / \".\"\n *               / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n * @private\n */\nconst EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/;\n\n/**\n * RegExp for various RFC 6266 grammar\n *\n * disposition-type = \"inline\" | \"attachment\" | disp-ext-type\n * disp-ext-type    = token\n * disposition-parm = filename-parm | disp-ext-parm\n * filename-parm    = \"filename\" \"=\" value\n *                  | \"filename*\" \"=\" ext-value\n * disp-ext-parm    = token \"=\" value\n *                  | ext-token \"=\" ext-value\n * ext-token        = <the characters in token, followed by \"*\">\n * @private\n */\nconst DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/;\n\n/**\n * Decode a RFC 6987 field value (gracefully).\n *\n * @param {string} str\n * @return {string}\n * @private\n */\nfunction decodefield(str) {\n    const match = EXT_VALUE_REGEXP.exec(str);\n\n    if (!match) {\n        throw new TypeError(\"invalid extended field value\");\n    }\n\n    const charset = match[1].toLowerCase();\n    const encoded = match[2];\n\n    switch (charset) {\n        case \"iso-8859-1\":\n            return encoded\n                .replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode)\n                .replace(NON_LATIN1_REGEXP, \"?\");\n        case \"utf-8\":\n            return decodeURIComponent(encoded);\n        default:\n            throw new TypeError(\"unsupported charset in extended field\");\n    }\n}\n\n/**\n * Parse Content-Disposition header string.\n *\n * @param {string} string\n * @return {ContentDisposition}\n * @public\n */\nfunction parse(string) {\n    if (!string || typeof string !== \"string\") {\n        throw new TypeError(\"argument string is required\");\n    }\n\n    let match = DISPOSITION_TYPE_REGEXP.exec(string);\n\n    if (!match) {\n        throw new TypeError(\"invalid type format\");\n    }\n\n    // normalize type\n    let index = match[0].length;\n    const type = match[1].toLowerCase();\n\n    let key;\n    const names = [];\n    const params = {};\n    let value;\n\n    // calculate index to start at\n    index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === \";\" ? index - 1 : index;\n\n    // match parameters\n    while ((match = PARAM_REGEXP.exec(string))) {\n        if (match.index !== index) {\n            throw new TypeError(\"invalid parameter format\");\n        }\n\n        index += match[0].length;\n        key = match[1].toLowerCase();\n        value = match[2];\n\n        if (names.indexOf(key) !== -1) {\n            throw new TypeError(\"invalid duplicate parameter\");\n        }\n\n        names.push(key);\n\n        if (key.indexOf(\"*\") + 1 === key.length) {\n            // decode extended value\n            key = key.slice(0, -1);\n            value = decodefield(value);\n\n            // overwrite existing value\n            params[key] = value;\n            continue;\n        }\n\n        if (typeof params[key] === \"string\") {\n            continue;\n        }\n\n        if (value[0] === '\"') {\n            // remove quotes and escapes\n            value = value.substr(1, value.length - 2).replace(QESC_REGEXP, \"$1\");\n        }\n\n        params[key] = value;\n    }\n\n    if (index !== -1 && index !== string.length) {\n        throw new TypeError(\"invalid parameter format\");\n    }\n\n    return new ContentDisposition(type, params);\n}\n\n/**\n * Percent decode a single character.\n *\n * @param {string} str\n * @param {string} hex\n * @return {string}\n * @private\n */\nfunction pdecode(str, hex) {\n    return String.fromCharCode(parseInt(hex, 16));\n}\n\n/**\n * Class for parsed Content-Disposition header for v8 optimization\n *\n * @public\n * @param {string} type\n * @param {object} parameters\n * @constructor\n */\nfunction ContentDisposition(type, parameters) {\n    this.type = type;\n    this.parameters = parameters;\n}\n\n// -----------------------------------------------------------------------------\n// download.js library\n// -----------------------------------------------------------------------------\n\n/*\nMIT License\nCopyright (c) 2016 dandavis\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n */\n\n/**\n * download.js v4.2, by dandavis; 2008-2018. [MIT] see http://danml.com/download.html for tests/usage\n * v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\n * v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\n * v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\n * v4 adds AMD/UMD, commonJS, and plain browser support\n * v4.1 adds url download capability via solo URL argument (same domain/CORS only)\n * v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\n *\n * Slightly modified for export and lint compliance\n *\n * @param {Blob | File | String} data\n * @param {String} [filename]\n * @param {String} [mimetype]\n */\nfunction _download(data, filename, mimetype) {\n    let self = window, // this script is only for browsers anyway...\n        defaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\n        mimeType = mimetype || defaultMime,\n        payload = data,\n        url = !filename && !mimetype && payload,\n        anchor = document.createElement(\"a\"),\n        toString = function (a) {\n            return String(a);\n        },\n        myBlob = self.Blob || self.MozBlob || self.WebKitBlob || toString,\n        fileName = filename || \"download\",\n        blob,\n        reader;\n    myBlob = myBlob.call ? myBlob.bind(self) : Blob;\n\n    if (String(this) === \"true\") {\n        //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n        payload = [payload, mimeType];\n        mimeType = payload[0];\n        payload = payload[1];\n    }\n\n    if (url && url.length < 2048) {\n        // if no filename and no mime, assume a url was passed as the only argument\n        fileName = url.split(\"/\").pop().split(\"?\")[0];\n        anchor.href = url; // assign href prop to temp anchor\n        if (anchor.href.indexOf(url) !== -1) {\n            // if the browser determines that it's a potentially valid url path:\n            let ajax = new XMLHttpRequest();\n            ajax.open(\"GET\", url, true);\n            ajax.responseType = \"blob\";\n            ajax.onload = function (e) {\n                _download(e.target.response, fileName, defaultMime);\n            };\n            setTimeout(() => {\n                ajax.send();\n            }, 0); // allows setting custom ajax headers using the return:\n            return ajax;\n        }\n    }\n\n    //go ahead and download dataURLs right away\n    if (/^data:[\\w+\\-]+\\/[\\w+\\-]+[,;]/.test(payload)) {\n        if (payload.length > 1024 * 1024 * 1.999 && myBlob !== toString) {\n            payload = dataUrlToBlob(payload);\n            mimeType = payload.type || defaultMime;\n        } else {\n            return navigator.msSaveBlob // IE10 can't do a[download], only Blobs:\n                ? navigator.msSaveBlob(dataUrlToBlob(payload), fileName)\n                : saver(payload); // everyone else can save dataURLs un-processed\n        }\n    }\n\n    blob = payload instanceof myBlob ? payload : new myBlob([payload], { type: mimeType });\n\n    function dataUrlToBlob(strUrl) {\n        let parts = strUrl.split(/[:;,]/),\n            type = parts[1],\n            decoder = parts[2] === \"base64\" ? atob : decodeURIComponent,\n            binData = decoder(parts.pop()),\n            mx = binData.length,\n            i = 0,\n            uiArr = new Uint8Array(mx);\n\n        for (i; i < mx; ++i) {\n            uiArr[i] = binData.charCodeAt(i);\n        }\n\n        return new myBlob([uiArr], { type });\n    }\n\n    function saver(url, winMode) {\n        if (\"download\" in anchor) {\n            //html5 A[download]\n            anchor.href = url;\n            anchor.setAttribute(\"download\", fileName);\n            anchor.className = \"download-js-link\";\n            anchor.innerText = _lt(\"downloading...\");\n            anchor.style.display = \"none\";\n            document.body.appendChild(anchor);\n            setTimeout(() => {\n                anchor.click();\n                document.body.removeChild(anchor);\n                if (winMode === true) {\n                    setTimeout(() => {\n                        self.URL.revokeObjectURL(anchor.href);\n                    }, 250);\n                }\n            }, 66);\n            return true;\n        }\n\n        // handle non-a[download] safari as best we can:\n        if (/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n            url = url.replace(/^data:([\\w\\/\\-+]+)/, defaultMime);\n            if (!window.open(url)) {\n                // popup blocked, offer direct download:\n                if (\n                    confirm(\n                        \"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\"\n                    )\n                ) {\n                    location.href = url;\n                }\n            }\n            return true;\n        }\n\n        //do iframe dataURL download (old ch+FF):\n        let f = document.createElement(\"iframe\");\n        document.body.appendChild(f);\n\n        if (!winMode) {\n            // force a mime that will download:\n            url = `data:${url.replace(/^data:([\\w\\/\\-+]+)/, defaultMime)}`;\n        }\n        f.src = url;\n        setTimeout(() => {\n            document.body.removeChild(f);\n        }, 333);\n    }\n\n    if (navigator.msSaveBlob) {\n        // IE10+ : (has Blob, but not a[download] or URL)\n        return navigator.msSaveBlob(blob, fileName);\n    }\n\n    if (self.URL) {\n        // simple fast and modern way using Blob and URL:\n        saver(self.URL.createObjectURL(blob), true);\n    } else {\n        // handle non-Blob()+non-URL browsers:\n        if (typeof blob === \"string\" || blob.constructor === toString) {\n            try {\n                return saver(`data:${mimeType};base64,${self.btoa(blob)}`);\n            } catch (y) {\n                return saver(`data:${mimeType},${encodeURIComponent(blob)}`);\n            }\n        }\n\n        // Blob but not URL support:\n        reader = new FileReader();\n        reader.onload = function () {\n            saver(this.result);\n        };\n        reader.readAsDataURL(blob);\n    }\n    return true;\n}\n\n// -----------------------------------------------------------------------------\n// Exported download function\n// -----------------------------------------------------------------------------\n\n/**\n * Download a file\n *\n * Note: the actual implementation is certainly unconventional, but sadly\n * necessary to be able to test code using the download function\n *\n * @param {*} options\n * @returns {Promise<any>}\n */\nexport function download(options) {\n    return download._download(options);\n}\n\ndownload._download = (options) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new browser.XMLHttpRequest();\n        let data;\n        if (Object.prototype.hasOwnProperty.call(options, \"form\")) {\n            xhr.open(options.form.method, options.form.action);\n            data = new FormData(options.form);\n        } else {\n            xhr.open(\"POST\", options.url);\n            data = new FormData();\n            Object.entries(options.data).forEach((entry) => {\n                const [key, value] = entry;\n                data.append(key, value);\n            });\n        }\n        data.append(\"token\", \"dummy-because-api-expects-one\");\n        if (odoo.csrf_token) {\n            data.append(\"csrf_token\", odoo.csrf_token);\n        }\n        // IE11 wants this after xhr.open or it throws\n        xhr.responseType = \"blob\";\n        xhr.onload = () => {\n            const mimetype = xhr.response.type;\n            // In Odoo, the default mimetype, including for JSON errors is text/html (ref: http.py:Root.get_response )\n            // in that case, we have to assume the file is not valid, hence that there was an error\n            if (xhr.status === 200 && mimetype !== \"text/html\") {\n                // replace because apparently we send some C-D headers with a trailing \";\"\n                const header = (xhr.getResponseHeader(\"Content-Disposition\") || \"\").replace(\n                    /;$/,\n                    \"\"\n                );\n                const filename = header ? parse(header).parameters.filename : null;\n                _download(xhr.response, filename, mimetype);\n                return resolve(filename);\n\n            } else if (xhr.status === 502) { // If Odoo is behind another server (nginx)\n                reject(new ConnectionLostError());\n            } else {\n                const decoder = new FileReader();\n                decoder.onload = () => {\n                    const contents = decoder.result;\n                    const doc = new DOMParser().parseFromString(contents, \"text/html\");\n                    const nodes =\n                        doc.body.children.length === 0 ? doc.body.childNodes : doc.body.children;\n\n                    let error;\n                    try { // a Serialized python Error\n                        const node = nodes[1] || nodes[0];\n                        error = JSON.parse(node.textContent);\n                    } catch (e) {\n                        error = {\n                            message: \"Arbitrary Uncaught Python Exception\",\n                            data: {\n                                debug: `${xhr.status}` + `\\n` +\n                                   `${nodes.length > 0 ? nodes[0].textContent : \"\"}\n                                    ${nodes.length > 1 ? nodes[1].textContent : \"\"}`\n                            },\n\n                        };\n                    }\n                    error = makeErrorFromResponse(error);\n                    reject(error);\n                };\n                decoder.readAsText(xhr.response);\n            }\n        };\n        xhr.onerror = () => {\n            reject(new ConnectionLostError());\n        };\n        xhr.send(data);\n    });\n};\n", "/** @odoo-module **/\n\nimport { registry } from \"../registry\";\n\nfunction checkResponseStatus(response) {\n    if (response.status === 502) {\n        throw new Error(\"Failed to fetch\");\n    }\n}\n\nexport const httpService = {\n    start() {\n        return {\n            async get(route, readMethod = \"json\") {\n                const response = await fetch(route, { method: \"GET\" });\n                checkResponseStatus(response);\n                return response[readMethod]();\n            },\n            async post(route, params = {}, readMethod = \"json\") {\n                const formData = new FormData();\n                for (const key in params) {\n                    const value = params[key];\n                    if (Array.isArray(value) && value.length) {\n                        for (const val of value) {\n                            formData.append(key, val);\n                        }\n                    } else {\n                        formData.append(key, value);\n                    }\n                }\n                const info = {\n                    body: formData,\n                    method: \"POST\",\n                };\n                const response = await fetch(route, info);\n                checkResponseStatus(response);\n                return response[readMethod]();\n            },\n        };\n    },\n};\n\nregistry.category(\"services\").add(\"http\", httpService);\n", "/** @odoo-module **/\n\nimport { browser } from \"../browser/browser\";\nimport { registry } from \"../registry\";\n\n// -----------------------------------------------------------------------------\n// Errors\n// -----------------------------------------------------------------------------\nexport class RPCError extends Error {\n    constructor() {\n        super(...arguments);\n        this.name = \"RPC_ERROR\";\n        this.type = \"server\";\n        this.code = null;\n        this.data = null;\n        this.exceptionName = null;\n        this.subType = null;\n    }\n}\n\nexport class ConnectionLostError extends Error {}\n\nexport class ConnectionAbortedError extends Error {}\n\nexport class HTTPError extends Error {}\n\n// -----------------------------------------------------------------------------\n// Main RPC method\n// -----------------------------------------------------------------------------\nexport function makeErrorFromResponse(reponse) {\n    // Odoo returns error like this, in a error field instead of properly\n    // using http error codes...\n    const { code, data: errorData, message, type: subType } = reponse;\n    const error = new RPCError();\n    error.exceptionName = errorData.name;\n    error.subType = subType;\n    error.data = errorData;\n    error.message = message;\n    error.code = code;\n    return error;\n}\n\nexport function jsonrpc(env, rpcId, url, params, settings = {}) {\n    const bus = env.bus;\n    const XHR = browser.XMLHttpRequest;\n    const data = {\n        id: rpcId,\n        jsonrpc: \"2.0\",\n        method: \"call\",\n        params: params,\n    };\n    const request = settings.xhr || new XHR();\n    let rejectFn;\n    const promise = new Promise((resolve, reject) => {\n        rejectFn = reject;\n        if (!settings.silent) {\n            bus.trigger(\"RPC:REQUEST\", data.id);\n        }\n        // handle success\n        request.addEventListener(\"load\", () => {\n            if (request.status === 502) {\n                // If Odoo is behind another server (eg.: nginx)\n                if (!settings.silent) {\n                    bus.trigger(\"RPC:RESPONSE\", data.id);\n                }\n                reject(new ConnectionLostError());\n                return;\n            }\n            let params;\n            try {\n                params = JSON.parse(request.response);\n            } catch (_) {\n                // the response isn't json parsable, which probably means that the rpc request could\n                // not be handled by the server, e.g. PoolError('The Connection Pool Is Full')\n                if (!settings.silent) {\n                    bus.trigger(\"RPC:RESPONSE\", data.id);\n                }\n                return reject(new ConnectionLostError());\n            }\n            const { error: responseError, result: responseResult } = params;\n            if (!settings.silent) {\n                bus.trigger(\"RPC:RESPONSE\", data.id);\n            }\n            if (!responseError) {\n                return resolve(responseResult);\n            }\n            const error = makeErrorFromResponse(responseError);\n            reject(error);\n        });\n        // handle failure\n        request.addEventListener(\"error\", () => {\n            if (!settings.silent) {\n                bus.trigger(\"RPC:RESPONSE\", data.id);\n            }\n            reject(new ConnectionLostError());\n        });\n        // configure and send request\n        request.open(\"POST\", url);\n        request.setRequestHeader(\"Content-Type\", \"application/json\");\n        request.send(JSON.stringify(data));\n    });\n    /**\n     * @param {Boolean} rejectError Returns an error if true. Allows you to cancel\n     *                  ignored rpc's in order to unblock the ui and not display an error.\n     */\n    promise.abort = function (rejectError = true) {\n        if (request.abort) {\n            request.abort();\n        }\n        if (!settings.silent) {\n            bus.trigger(\"RPC:RESPONSE\", data.id);\n        }\n        if (rejectError) {\n            rejectFn(new ConnectionAbortedError(\"XmlHttpRequestError abort\"));\n        }\n    };\n    return promise;\n}\n\n// -----------------------------------------------------------------------------\n// RPC service\n// -----------------------------------------------------------------------------\nexport const rpcService = {\n    async: true,\n    start(env) {\n        let rpcId = 0;\n        return function rpc(route, params = {}, settings) {\n            return jsonrpc(env, rpcId++, route, params, settings);\n        };\n    },\n};\n\nregistry.category(\"services\").add(\"rpc\", rpcService);\n", "/** @odoo-module **/\n\nconst { Component, hooks } = owl;\n\nexport class Notification extends Component {\n    setup() {\n        if (this.props.onClose) {\n            hooks.onWillUnmount(() => this.props.onClose());\n        }\n    }\n\n    shouldUpdate() {\n        return false;\n    }\n\n    get className() {\n        let className;\n        switch (this.props.type) {\n            case \"danger\":\n                className = \"bg-danger\";\n                break;\n            case \"warning\":\n                className = \"bg-warning\";\n                break;\n            case \"success\":\n                className = \"bg-success\";\n                break;\n            case \"info\":\n                className = \"bg-info\";\n                break;\n        }\n        return className ? `${className} ${this.props.className}` : this.props.className;\n    }\n}\n\nNotification.template = \"web.NotificationWowl\";\nNotification.props = {\n    message: {\n        validate: (m) => {\n            return (\n                typeof m === \"string\" || (typeof m === \"object\" && typeof m.toString === \"function\")\n            );\n        }\n    },\n    title: { type: [String, Boolean, { toString: Function }], optional: true },\n    type: {\n        type: String,\n        optional: true,\n        validate: (t) => [\"warning\", \"danger\", \"success\", \"info\"].includes(t)\n    },\n    messageIsHtml: { type: Boolean, optional: true },\n    className: { type: String, optional: true },\n    buttons: {\n        type: Array,\n        element: {\n            type: Object,\n            shape: {\n                name: { type: String },\n                icon: { type: String, optional: true },\n                primary: { type: Boolean, optional: true },\n                onClick: Function\n            }\n        }\n    },\n    onClose: { type: Function, optional: true }\n};\nNotification.defaultProps = {\n    buttons: [],\n    className: \"\",\n    messageIsHtml: false,\n    type: \"warning\"\n};\n", "/** @odoo-module **/\n\nimport { Notification } from \"./notification\";\n\nconst { Component, tags } = owl;\n\nexport class NotificationContainer extends Component {\n    setup() {\n        // this works, but then this component cannot be unmounted, then\n        // remounted. would need a destroyed hook different from willunmount\n        this.props.bus.on(\"UPDATE\", this, this.render);\n    }\n}\n\nNotificationContainer.template = tags.xml`\n    <div class=\"o_notification_manager\">\n        <t t-foreach=\"props.notifications\" t-as=\"notification\" t-key=\"notification.id\">\n            <Notification\n                t-props=\"notification.props\"\n                t-transition=\"o_notification_fade\"\n                t-on-close=\"notification.close()\"\n            />\n        </t>\n    </div>`;\nNotificationContainer.components = { Notification };\n", "/** @odoo-module **/\n\nimport { browser } from \"../browser/browser\";\nimport { registry } from \"../registry\";\nimport { NotificationContainer } from \"./notification_container\";\n\nconst { EventBus } = owl.core;\n\nconst AUTOCLOSE_DELAY = 4000;\n\n/**\n * @typedef {Object} NotificationButton\n * @property {string} name\n * @property {string} [icon]\n * @property {boolean} [primary=false]\n * @property {function(): void} onClick\n *\n * @typedef {Object} NotificationOptions\n * @property {string} [title]\n * @property {\"warning\" | \"danger\" | \"success\" | \"info\"} [type]\n * @property {boolean} [sticky=false]\n * @property {string} [className]\n * @property {function(): void} [onClose]\n * @property {NotificationButton[]} [buttons]\n */\n\nexport const notificationService = {\n    start() {\n        let notifId = 0;\n        let notifications = [];\n        const bus = new EventBus();\n\n        registry.category(\"main_components\").add(\"NotificationContainer\", {\n            Component: NotificationContainer,\n            props: { bus, notifications },\n        });\n\n        /**\n         * @param {string} message\n         * @param {NotificationOptions} [options]\n         */\n        function add(message, options = {}) {\n            const id = ++notifId;\n            const props = Object.assign({}, options, { message });\n            const sticky = props.sticky;\n            delete props.sticky;\n            const closeFn = () => close(id);\n            const notification = {\n                id,\n                props,\n                close: closeFn,\n            };\n            notifications.push(notification);\n            bus.trigger(\"UPDATE\");\n            if (!sticky) {\n                browser.setTimeout(closeFn, AUTOCLOSE_DELAY);\n            }\n            return closeFn;\n        }\n\n        function close(id) {\n            const index = notifications.findIndex((n) => n.id === id);\n            if (index > -1) {\n                notifications.splice(index, 1);\n                bus.trigger(\"UPDATE\");\n            }\n        }\n\n        return { add };\n    },\n};\n\nregistry.category(\"services\").add(\"notification\", notificationService);\n", "/** @odoo-module **/\n\nimport { registry } from \"./registry\";\n\n/**\n * This ORM service is the standard way to interact with the ORM in python from\n * the javascript codebase.\n */\n\n// -----------------------------------------------------------------------------\n// Helper\n// -----------------------------------------------------------------------------\nfunction assignOptions(kwargs, options, whileList) {\n    for (let elem of whileList) {\n        if (elem in options) {\n            kwargs[elem] = options[elem];\n        }\n    }\n}\n\n// -----------------------------------------------------------------------------\n// ORM\n// -----------------------------------------------------------------------------\n\n/**\n * One2many and Many2many fields expect a special command to manipulate the\n * relation they implement.\n *\n * Internally, each command is a 3-elements tuple where the first element is a\n * mandatory integer that identifies the command, the second element is either\n * the related record id to apply the command on (commands update, delete,\n * unlink and link) either 0 (commands create, clear and set), the third\n * element is either the ``values`` to write on the record (commands create\n * and update) either the new ``ids`` list of related records (command set),\n * either 0 (commands delete, unlink, link, and clear).\n */\nexport const Commands = {\n    create(virtualID, values) {\n        delete values.id;\n        return [0, virtualID || false, values];\n    },\n\n    update(id, values) {\n        delete values.id;\n        return [1, id, values];\n    },\n\n    delete(id) {\n        return [2, id, false];\n    },\n\n    forget(id) {\n        return [3, id, false];\n    },\n\n    linkTo(id) {\n        return [4, id, false];\n    },\n\n    deleteAll() {\n        return [5, false, false];\n    },\n\n    replaceWith(ids) {\n        return [6, false, ids];\n    },\n};\n\nfunction validateModel(value) {\n    if (typeof value !== \"string\" || value.length === 0) {\n        throw new Error(`Invalid model name: ${value}`);\n    }\n}\nfunction validatePrimitiveList(name, type, value) {\n    if (!Array.isArray(value) || value.some((val) => typeof val !== type)) {\n        throw new Error(`Invalid ${name} list: ${value}`);\n    }\n}\nfunction validateObject(name, obj) {\n    if (typeof obj !== \"object\" || obj === null || Array.isArray(obj)) {\n        throw new Error(`${name} should be an object`);\n    }\n}\nfunction validateArray(name, array) {\n    if (!Array.isArray(array)) {\n        throw new Error(`${name} should be an array`);\n    }\n}\n\nexport class ORM {\n    constructor(rpc, user) {\n        this.rpc = rpc;\n        this.user = user;\n        this._silent = false;\n    }\n\n    get silent() {\n        return Object.assign(Object.create(this), { _silent: true });\n    }\n\n    call(model, method, args = [], kwargs = {}) {\n        validateModel(model);\n        let url = `/web/dataset/call_kw/${model}/${method}`;\n        const fullContext = Object.assign({}, this.user.context, kwargs.context || {});\n        const fullKwargs = Object.assign({}, kwargs, { context: fullContext });\n        let params = {\n            model,\n            method,\n            args,\n            kwargs: fullKwargs,\n        };\n        return this.rpc(url, params, { silent: this._silent });\n    }\n\n    create(model, state, ctx) {\n        validateObject(\"state\", state);\n        return this.call(model, \"create\", [state], { context: ctx });\n    }\n\n    read(model, ids, fields, ctx) {\n        validatePrimitiveList(\"ids\", \"number\", ids);\n        if (fields) {\n            validatePrimitiveList(\"fields\", \"string\", fields);\n        }\n        if (!ids.length) {\n            return Promise.resolve([]);\n        }\n        return this.call(model, \"read\", [ids, fields], { context: ctx });\n    }\n\n    readGroup(model, domain, fields, groupby, options = {}, ctx = {}) {\n        validateArray(\"domain\", domain);\n        validatePrimitiveList(\"fields\", \"string\", fields);\n        validatePrimitiveList(\"groupby\", \"string\", groupby);\n        const kwargs = {\n            domain,\n            groupby,\n            fields,\n            context: ctx,\n        };\n        assignOptions(kwargs, options, [\"lazy\", \"offset\", \"orderby\", \"limit\"]);\n        return this.call(model, \"read_group\", [], kwargs);\n    }\n\n    search(model, domain, options = {}, ctx = {}) {\n        validateArray(\"domain\", domain);\n        const kwargs = {\n            context: ctx,\n        };\n        assignOptions(kwargs, options, [\"offset\", \"limit\", \"order\"]);\n        return this.call(model, \"search\", [domain], kwargs);\n    }\n\n    searchRead(model, domain, fields, options = {}, ctx = {}) {\n        validateArray(\"domain\", domain);\n        if (fields) {\n            validatePrimitiveList(\"fields\", \"string\", fields);\n        }\n        const kwargs = { context: ctx, domain, fields };\n        assignOptions(kwargs, options, [\"offset\", \"limit\", \"order\"]);\n        return this.call(model, \"search_read\", [], kwargs);\n    }\n\n    unlink(model, ids, ctx) {\n        validatePrimitiveList(\"ids\", \"number\", ids);\n        if (!ids.length) {\n            return true;\n        }\n        return this.call(model, \"unlink\", [ids], { context: ctx });\n    }\n\n    webReadGroup(model, domain, fields, groupby, options = {}, ctx = {}) {\n        validateArray(\"domain\", domain);\n        validatePrimitiveList(\"fields\", \"string\", fields);\n        validatePrimitiveList(\"groupby\", \"string\", groupby);\n        const kwargs = {\n            domain,\n            groupby,\n            fields,\n            context: ctx,\n        };\n        assignOptions(kwargs, options, [\"lazy\", \"offset\", \"orderby\", \"limit\"]);\n        return this.call(model, \"web_read_group\", [], kwargs);\n    }\n\n    webSearchRead(model, domain, fields, options = {}, ctx = {}) {\n        validateArray(\"domain\", domain);\n        validatePrimitiveList(\"fields\", \"string\", fields);\n        const kwargs = { context: ctx, domain, fields };\n        assignOptions(kwargs, options, [\"offset\", \"limit\", \"order\"]);\n        return this.call(model, \"web_search_read\", [], kwargs);\n    }\n\n    write(model, ids, data, ctx) {\n        validatePrimitiveList(\"ids\", \"number\", ids);\n        validateObject(\"data\", data);\n        return this.call(model, \"write\", [ids, data], { context: ctx });\n    }\n}\n\n/**\n * Note:\n *\n * when we will need a way to configure a rpc (for example, to setup a \"shadow\"\n * flag, or some way of not displaying errors), we can use the following api:\n *\n * this.orm = useService('orm');\n *\n * ...\n *\n * const result = await this.orm.withOption({shadow: true}).read('res.partner', [id]);\n */\nexport const ormService = {\n    dependencies: [\"rpc\", \"user\"],\n    async: [\n        \"call\",\n        \"create\",\n        \"read\",\n        \"readGroup\",\n        \"search\",\n        \"searchRead\",\n        \"unlink\",\n        \"webSearchRead\",\n        \"write\",\n    ],\n    start(env, { rpc, user }) {\n        return new ORM(rpc, user);\n    },\n};\n\nregistry.category(\"services\").add(\"orm\", ormService);\n", "/** @odoo-module **/\n\nimport { usePosition } from \"../position/position_hook\";\n\nconst { Component } = owl;\n\nexport class Popover extends Component {\n    setup() {\n        usePosition(this.props.target, {\n            margin: 16,\n            position: this.props.position,\n        });\n    }\n}\n\nPopover.template = \"web.PopoverWowl\";\nPopover.defaultProps = {\n    position: \"bottom\",\n};\nPopover.props = {\n    popoverClass: {\n        optional: true,\n        type: String,\n    },\n    position: {\n        type: String,\n        validate: (p) => [\"top\", \"bottom\", \"left\", \"right\"].includes(p),\n    },\n    target: HTMLElement,\n};\n", "/** @odoo-module **/\n\nimport { Popover } from \"./popover\";\n\nconst { Component } = owl;\nconst { useExternalListener, useState } = owl.hooks;\nconst { xml } = owl.tags;\n\nclass PopoverController extends Component {\n    setup() {\n        this.state = useState({ displayed: false });\n        this.targetObserver = new MutationObserver(this.onTargetMutate.bind(this));\n\n        useExternalListener(window, \"click\", this.onClickAway, { capture: true });\n    }\n    mounted() {\n        this.targetObserver.observe(this.target.parentElement, { childList: true });\n    }\n    willUnmount() {\n        this.targetObserver.disconnect();\n    }\n\n    shouldUpdate() {\n        return false;\n    }\n\n    get popoverProps() {\n        return {\n            target: this.target,\n            position: this.props.position,\n            popoverClass: this.props.popoverClass,\n        };\n    }\n    get target() {\n        if (typeof this.props.target === \"string\") {\n            return document.querySelector(this.props.target);\n        } else {\n            return this.props.target;\n        }\n    }\n    onClickAway(ev) {\n        if (this.target.contains(ev.target) || ev.target.closest(\".o_popover\")) {\n            return;\n        }\n        if (this.props.closeOnClickAway) {\n            this.props.close();\n        }\n    }\n    onTargetMutate() {\n        const target = this.target;\n        if (!target || !target.parentElement) {\n            this.props.close();\n        }\n    }\n}\nPopoverController.components = { Popover };\nPopoverController.defaultProps = {\n    alwaysDisplayed: false,\n    closeOnClickAway: true,\n};\nPopoverController.template = xml/*xml*/ `\n    <Popover t-props=\"popoverProps\" t-on-popover-closed=\"props.close()\">\n        <t t-component=\"props.Component\" t-props=\"props.props\" />\n    </Popover>\n`;\n\nexport class PopoverContainer extends Component {\n    setup() {\n        this.props.bus.on(\"UPDATE\", this, this.render);\n    }\n}\nPopoverContainer.components = { PopoverController };\nPopoverContainer.template = xml`\n    <div class=\"o_popover_container\">\n        <t t-foreach=\"Object.values(props.popovers)\" t-as=\"popover\" t-key=\"popover.id\">\n            <PopoverController t-props=\"popover\" />\n        </t>\n    </div>\n`;\n", "/** @odoo-module **/\n\nimport { useService } from \"@web/core/utils/hooks\";\n\nconst { onWillUnmount, useComponent } = owl.hooks;\n\nexport function usePopover() {\n    const removeFns = new Set();\n    const service = useService(\"popover\");\n    const component = useComponent();\n\n    onWillUnmount(function () {\n        for (const removeFn of removeFns) {\n            removeFn();\n        }\n        removeFns.clear();\n    });\n    return {\n        /**\n         * Signals the manager to add a popover.\n         *\n         * @param {string | HTMLElement}    target\n         * @param {any}                     Component\n         * @param {Object}                  props\n         * @param {Object}                  [options]\n         * @param {boolean}                 [options.closeOnClickAway=true]\n         * @param {function()}              [options.onClose]\n         * @param {string}                  [options.popoverClass]\n         * @param {string}                  [options.position]\n         * @returns {function()}\n         */\n        add(target, Component, props, options = {}) {\n            const newOptions = Object.create(options);\n            newOptions.onClose = function () {\n                removeFns.delete(removeFn);\n                if (options.onClose && component.__owl__.status !== 5 /* DESTROYED */) {\n                    options.onClose();\n                }\n            };\n\n            const removeFn = service.add(target, Component, props, newOptions);\n            removeFns.add(removeFn);\n            return removeFn;\n        },\n    };\n}\n", "/** @odoo-module **/\n\nimport { registry } from \"../registry\";\nimport { PopoverContainer } from \"./popover_container\";\n\nconst { EventBus } = owl.core;\n\nexport const popoverService = {\n    start() {\n        let nextId = 0;\n        const popovers = {};\n        const bus = new EventBus();\n\n        registry\n            .category(\"main_components\")\n            .add(\"PopoverContainer\", { Component: PopoverContainer, props: { bus, popovers } });\n\n        /**\n         * Signals the manager to add a popover.\n         *\n         * @param {string | HTMLElement}    target\n         * @param {any}                     Component\n         * @param {Object}                  props\n         * @param {Object}                  [options]\n         * @param {boolean}                 [options.closeOnClickAway=true]\n         * @param {function(): void}        [options.onClose]\n         * @param {string}                  [options.popoverClass]\n         * @param {string}                  [options.position]\n         * @returns {function(): void}\n         */\n        function add(target, Component, props, options = {}) {\n            const id = ++nextId;\n            const closeFn = () => close(id);\n            const popover = {\n                id,\n                target,\n                Component,\n                props,\n                close: closeFn,\n                onClose: options.onClose,\n                position: options.position,\n                popoverClass: options.popoverClass,\n                closeOnClickAway: options.closeOnClickAway,\n            };\n            popovers[id] = popover;\n            bus.trigger(\"UPDATE\");\n            return closeFn;\n        }\n\n        function close(id) {\n            if (id in popovers) {\n                const popover = popovers[id];\n                if (popover.onClose) {\n                    popover.onClose();\n                }\n                delete popovers[id];\n                bus.trigger(\"UPDATE\");\n            }\n        }\n\n        return { add };\n    },\n};\n\nregistry.category(\"services\").add(\"popover\", popoverService);\n", "/** @odoo-module */\n\nimport { onDestroyed, useEffect } from \"@web/core/utils/hooks\";\nimport { throttleForAnimation } from \"../utils/timing\";\n\nconst { core, hooks } = owl;\nconst { useComponent, useExternalListener, useRef, useSubEnv, onWillUnmount } = hooks;\nconst { EventBus } = core;\n\n/**\n * @typedef {{\n *  popper?: string;\n *  container?: HTMLElement;\n *  margin?: number;\n *  position?: Position;\n * }} Options\n *\n * @typedef {{\n *  directions: (DirectionsDataKey)[];\n *  variants: (VariantsDataKey)[];\n *  get: (d?: DirectionsDataKey, v?: VariantsDataKey, containerRestricted?: boolean) => PositioningSolution | null;\n * }} Positioning\n *\n * @typedef {keyof DirectionsData} DirectionsDataKey\n * @typedef {{\n *  t: number;\n *  b: number;\n *  l: number;\n *  r: number;\n * }} DirectionsData\n *\n * @typedef {keyof VariantsData} VariantsDataKey\n * @typedef {{\n *  vs: number;\n *  vm: number;\n *  ve: number;\n *  hs: number;\n *  hm: number;\n *  he: number;\n * }} VariantsData\n *\n * @typedef {\"top\" | \"left\" | \"bottom\" | \"right\"} Direction\n * @typedef {\"start\" | \"middle\" | \"end\"} Variant\n *\n * @typedef {{[direction in Direction]: string}} DirectionFlipOrder\n *  values are successive DirectionsDataKey represented as a single string\n *\n * @typedef {{[variant in Variant]: string}} VariantFlipOrder\n *  values are successive VariantsDataKey represented as a single string\n *\n * @typedef {Direction\n *  | \"top-start\" | \"top-middle\" | \"top-end\"\n *  | \"left-start\" | \"left-middle\" | \"left-end\"\n *  | \"right-start\" | \"right-middle\" | \"right-end\"\n *  | \"bottom-start\" | \"bottom-middle\" | \"bottom-end\"} Position\n *\n * @typedef {{ className: string, top: number, left: number }} PositioningSolution\n */\n\nconst POPPER_CLASS = \"o-popper-position\";\n/** @type DirectionFlipOrder */\nconst DIRECTION_FLIP_ORDER = { top: \"tbrl\", right: \"rltb\", bottom: \"btrl\", left: \"lrbt\" };\n/** @type VariantFlipOrder */\nconst VARIANT_FLIP_ORDER = { start: \"sme\", middle: \"mse\", end: \"ems\" };\n\n/** @type {Options} */\nexport const DEFAULTS = {\n    margin: 0,\n    position: \"bottom\",\n};\n\n/**\n * Computes positioning data used to determine each possible position\n * based on the reference, popper, and container sizes.\n * Particularly, a popper must not overflow the container in any direction,\n * it should actually stay at `margin` distance from the border to look good.\n *\n * @param {HTMLElement} reference\n * @param {HTMLElement} popper\n * @param {Options} options\n * @returns {Positioning} a positioning object containing:\n *  - ascendingly sorted directions and variants\n *  - a method returning style to apply to the popper for a given direction and variant\n */\nexport function computePositioning(reference, popper, options) {\n    const { container, margin, position } = options;\n\n    // Retrieve directions and variants\n    const [directionKey, variantKey = \"middle\"] = position.split(\"-\");\n    const directions = DIRECTION_FLIP_ORDER[directionKey];\n    const variants = VARIANT_FLIP_ORDER[variantKey];\n\n    // Boxes\n    const popBox = popper.getBoundingClientRect();\n    const refBox = reference.getBoundingClientRect();\n    const contBox = container.getBoundingClientRect();\n\n    const containerIsHTMLNode = container === document.firstElementChild;\n\n    // Compute positioning data\n    /** @type {DirectionsData} */\n    const directionsData = {\n        t: refBox.top - popBox.height - margin,\n        b: refBox.bottom + margin,\n        r: refBox.right + margin,\n        l: refBox.left - popBox.width - margin,\n    };\n    /** @type {VariantsData} */\n    const variantsData = {\n        vs: refBox.left,\n        vm: refBox.left + refBox.width / 2 + -popBox.width / 2,\n        ve: refBox.right - popBox.width,\n        hs: refBox.top,\n        hm: refBox.top + refBox.height / 2 + -popBox.height / 2,\n        he: refBox.bottom - popBox.height,\n    };\n\n    function get(d = directions[0], v = variants[0], containerRestricted = false) {\n        const vertical = [\"t\", \"b\"].includes(d);\n        const variantPrefix = vertical ? \"v\" : \"h\";\n        const directionValue = directionsData[d];\n        const variantValue = variantsData[variantPrefix + v];\n\n        if (containerRestricted) {\n            const [directionSize, variantSize] = vertical\n                ? [popBox.height + margin, popBox.width]\n                : [popBox.width, popBox.height + margin];\n            let [directionMin, directionMax] = vertical\n                ? [contBox.top, contBox.bottom]\n                : [contBox.left, contBox.right];\n            let [variantMin, variantMax] = vertical\n                ? [contBox.left, contBox.right]\n                : [contBox.top, contBox.bottom];\n\n            if (containerIsHTMLNode) {\n                if (vertical) {\n                    directionMin += container.scrollTop;\n                    directionMax += container.scrollTop;\n                } else {\n                    variantMin += container.scrollTop;\n                    variantMax += container.scrollTop;\n                }\n            }\n\n            // Abort if outside container boundaries\n            const directionOverflow =\n                directionValue < directionMin || directionValue + directionSize > directionMax;\n            const variantOverflow =\n                variantValue < variantMin || variantValue + variantSize > variantMax;\n            if (directionOverflow || variantOverflow) {\n                return null;\n            }\n        }\n\n        const positioning = vertical\n            ? {\n                  top: directionValue,\n                  left: variantValue,\n              }\n            : {\n                  top: variantValue,\n                  left: directionValue,\n              };\n        return { ...positioning, className: `${POPPER_CLASS}--${d}${v}` };\n    }\n\n    return {\n        directions,\n        variants,\n        get,\n    };\n}\n\n/**\n * This method will try to position the popper as requested (according to options).\n * If the requested position does not fit the container, other positions will be\n * tried in different direction and variant flip orders (depending on the requested position).\n * If no position is found that fits the container, the requested position stays used.\n *\n * When the final position is applied, a corresponding CSS class is also added to the popper.\n * This could be used to further styling.\n *\n * @param {HTMLElement} reference\n * @param {HTMLElement} popper\n * @param {Options} options\n */\nfunction reposition(reference, popper, options) {\n    options = {\n        container: document.documentElement,\n        ...DEFAULTS,\n        ...options,\n    };\n\n    // Reset all existing popper classes and only leave it as standalone\n    for (const popperClass of popper.classList) {\n        if (popperClass.startsWith(POPPER_CLASS)) {\n            popper.classList.remove(popperClass);\n        }\n    }\n    popper.classList.add(POPPER_CLASS);\n\n    // Compute positioning and find first match\n    const positioning = computePositioning(reference, popper, options);\n    for (const d of positioning.directions) {\n        for (const v of positioning.variants) {\n            const posData = positioning.get(d, v, true);\n            if (!posData) {\n                continue;\n            }\n\n            // From now, a position match have been found.\n            // Apply styles\n            const { className, top, left } = posData;\n            popper.classList.add(className);\n            popper.style.top = `${top}px`;\n            popper.style.left = `${left}px`;\n            return;\n        }\n    }\n\n    // use the given `position` because no position fits\n    const { className, top, left } = positioning.get();\n    popper.classList.add(className);\n    popper.style.top = `${top}px`;\n    popper.style.left = `${left}px`;\n}\n\nconst POSITION_BUS = Symbol(\"position-bus\");\n\n/**\n * Makes sure that the `popper` element is always\n * placed at `position` from the `reference` element.\n * If doing so the `popper` element is clipped off `container`,\n * sensible fallback positions are tried.\n * If all of fallback positions are also clipped off `container`,\n * the original position is used.\n *\n * @param {HTMLElement | (()=>HTMLElement)} reference\n * @param {Options} options\n */\nexport function usePosition(reference, options) {\n    options = { ...DEFAULTS, ...options };\n    const { popper } = options;\n    const popperRef = popper ? useRef(popper) : useComponent();\n    const getReference = typeof reference === \"function\" ? reference : () => reference;\n    const update = () => {\n        const ref = getReference();\n        if (popperRef.el && ref) {\n            reposition(ref, popperRef.el, options);\n        }\n    };\n    const component = useComponent();\n    const bus = component.env[POSITION_BUS] || new EventBus();\n    bus.on(\"update\", component, update);\n    onDestroyed(() => bus.off(\"update\", component));\n    useEffect(() => bus.trigger(\"update\"));\n    if (!(POSITION_BUS in component.env)) {\n        useSubEnv({ [POSITION_BUS]: bus });\n        const throttledUpdate = throttleForAnimation(() => bus.trigger(\"update\"));\n        useExternalListener(document, \"scroll\", throttledUpdate, { capture: true });\n        useExternalListener(window, \"resize\", throttledUpdate);\n        onWillUnmount(throttledUpdate.cancel);\n    }\n}\n", "/** @odoo-module **/\n\nimport { evaluate } from \"./py_interpreter\";\nimport { parse } from \"./py_parser\";\nimport { tokenize } from \"./py_tokenizer\";\n\nexport { evaluate } from \"./py_interpreter\";\nexport { parse } from \"./py_parser\";\nexport { tokenize } from \"./py_tokenizer\";\nexport { formatAST } from \"./py_utils\";\n\n/**\n * @typedef { import(\"./py_tokenizer\").Token } Token\n * @typedef { import(\"./py_parser\").AST } AST\n */\n\n/**\n * Parses an expression into a valid AST representation\n \n * @param {string} expr \n * @returns { AST }\n */\nexport function parseExpr(expr) {\n    const tokens = tokenize(expr);\n    return parse(tokens);\n}\n\n/**\n * Evaluates a python expression\n *\n * @param {string} expr\n * @param {Object} [context]\n * @returns {any}\n */\nexport function evaluateExpr(expr, context = {}) {\n    const ast = parseExpr(expr);\n    return evaluate(ast, context);\n}\n", "/** @odoo-module **/\n\nimport { PyDate, PyDateTime, PyRelativeDelta, PyTime, PyTimeDelta } from \"./py_date\";\n\nexport const BUILTINS = {\n    /**\n     * @param {any} value\n     * @returns {boolean}\n     */\n    bool(value) {\n        switch (typeof value) {\n            case \"number\":\n                return value !== 0;\n            case \"string\":\n                return value !== \"\";\n            case \"boolean\":\n                return value;\n            case \"object\":\n                if (value === null) {\n                    return false;\n                }\n                if (value.isTrue) {\n                    return value.isTrue();\n                }\n                return true;\n        }\n        return true;\n    },\n\n    time: {\n        strftime(format) {\n            return PyDateTime.now().strftime(format);\n        },\n    },\n\n    context_today() {\n        return PyDate.today();\n    },\n\n    get current_date() {\n        // deprecated: today should be prefered\n        return this.today;\n    },\n\n    get today() {\n        return PyDate.today().strftime(\"%Y-%m-%d\");\n    },\n\n    get now() {\n        return PyDateTime.now().strftime(\"%Y-%m-%d %H:%M:%S\");\n    },\n\n    datetime: {\n        time: PyTime,\n        timedelta: PyTimeDelta,\n        datetime: PyDateTime,\n        date: PyDate,\n    },\n\n    relativedelta: PyRelativeDelta,\n};\n", "/** @odoo-module **/\n\nimport { parseArgs } from \"./py_parser\";\n\n// -----------------------------------------------------------------------------\n// Errors\n// -----------------------------------------------------------------------------\n\nexport class AssertionError extends Error {}\nexport class ValueError extends Error {}\nexport class NotSupportedError extends Error {}\n\n// -----------------------------------------------------------------------------\n// helpers\n// -----------------------------------------------------------------------------\n\nfunction fmt2(n) {\n    return String(n).padStart(2, \"0\");\n}\nfunction fmt4(n) {\n    return String(n).padStart(4, \"0\");\n}\n\n/**\n * computes (Math.floor(a/b), a%b and passes that to the callback.\n *\n * returns the callback's result\n */\nfunction divmod(a, b, fn) {\n    let mod = a % b;\n    // in python, sign(a % b) === sign(b). Not in JS. If wrong side, add a\n    // round of b\n    if ((mod > 0 && b < 0) || (mod < 0 && b > 0)) {\n        mod += b;\n    }\n    return fn(Math.floor(a / b), mod);\n}\n\nfunction assert(bool, message = \"AssertionError\") {\n    if (!bool) {\n        throw new AssertionError(message);\n    }\n}\n\nconst DAYS_IN_MONTH = [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_BEFORE_MONTH = [null];\n\nfor (let dbm = 0, i = 1; i < DAYS_IN_MONTH.length; ++i) {\n    DAYS_BEFORE_MONTH.push(dbm);\n    dbm += DAYS_IN_MONTH[i];\n}\n\nfunction daysInMonth(year, month) {\n    if (month === 2 && isLeap(year)) {\n        return 29;\n    }\n    return DAYS_IN_MONTH[month];\n}\n\nfunction isLeap(year) {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nfunction daysBeforeYear(year) {\n    const y = year - 1;\n    return y * 365 + Math.floor(y / 4) - Math.floor(y / 100) + Math.floor(y / 400);\n}\n\nfunction daysBeforeMonth(year, month) {\n    const postLeapFeb = month > 2 && isLeap(year);\n    return DAYS_BEFORE_MONTH[month] + (postLeapFeb ? 1 : 0);\n}\n\nfunction ymd2ord(year, month, day) {\n    const dim = daysInMonth(year, month);\n    if (!(1 <= day && day <= dim)) {\n        throw new ValueError(`day must be in 1..${dim}`);\n    }\n    return daysBeforeYear(year) + daysBeforeMonth(year, month) + day;\n}\n\nconst DI400Y = daysBeforeYear(401);\nconst DI100Y = daysBeforeYear(101);\nconst DI4Y = daysBeforeYear(5);\n\nfunction ord2ymd(n) {\n    --n;\n    let n400, n100, n4, n1, n0;\n    divmod(n, DI400Y, function (_n400, n) {\n        n400 = _n400;\n        divmod(n, DI100Y, function (_n100, n) {\n            n100 = _n100;\n            divmod(n, DI4Y, function (_n4, n) {\n                n4 = _n4;\n                divmod(n, 365, function (_n1, n) {\n                    n1 = _n1;\n                    n0 = n;\n                });\n            });\n        });\n    });\n\n    n = n0;\n    const year = n400 * 400 + 1 + n100 * 100 + n4 * 4 + n1;\n    if (n1 == 4 || n100 == 100) {\n        assert(n0 === 0);\n        return {\n            year: year - 1,\n            month: 12,\n            day: 31,\n        };\n    }\n\n    let leapyear = n1 === 3 && (n4 !== 24 || n100 == 3);\n    assert(leapyear == isLeap(year));\n    let month = (n + 50) >> 5;\n    let preceding = DAYS_BEFORE_MONTH[month] + (month > 2 && leapyear ? 1 : 0);\n    if (preceding > n) {\n        --month;\n        preceding -= DAYS_IN_MONTH[month] + (month === 2 && leapyear ? 1 : 0);\n    }\n    n -= preceding;\n    return {\n        year: year,\n        month: month,\n        day: n + 1,\n    };\n}\n\n/**\n * Converts the stuff passed in into a valid date, applying overflows as needed\n */\nfunction tmxxx(year, month, day, hour, minute, second, microsecond) {\n    hour = hour || 0;\n    minute = minute || 0;\n    second = second || 0;\n    microsecond = microsecond || 0;\n\n    if (microsecond < 0 || microsecond > 999999) {\n        divmod(microsecond, 1000000, function (carry, ms) {\n            microsecond = ms;\n            second += carry;\n        });\n    }\n    if (second < 0 || second > 59) {\n        divmod(second, 60, function (carry, s) {\n            second = s;\n            minute += carry;\n        });\n    }\n    if (minute < 0 || minute > 59) {\n        divmod(minute, 60, function (carry, m) {\n            minute = m;\n            hour += carry;\n        });\n    }\n    if (hour < 0 || hour > 23) {\n        divmod(hour, 24, function (carry, h) {\n            hour = h;\n            day += carry;\n        });\n    }\n    // That was easy.  Now it gets muddy:  the proper range for day\n    // can't be determined without knowing the correct month and year,\n    // but if day is, e.g., plus or minus a million, the current month\n    // and year values make no sense (and may also be out of bounds\n    // themselves).\n    // Saying 12 months == 1 year should be non-controversial.\n    if (month < 1 || month > 12) {\n        divmod(month - 1, 12, function (carry, m) {\n            month = m + 1;\n            year += carry;\n        });\n    }\n    // Now only day can be out of bounds (year may also be out of bounds\n    // for a datetime object, but we don't care about that here).\n    // If day is out of bounds, what to do is arguable, but at least the\n    // method here is principled and explainable.\n    let dim = daysInMonth(year, month);\n    if (day < 1 || day > dim) {\n        // Move day-1 days from the first of the month.  First try to\n        // get off cheap if we're only one day out of range (adjustments\n        // for timezone alone can't be worse than that).\n        if (day === 0) {\n            --month;\n            if (month > 0) {\n                day = daysInMonth(year, month);\n            } else {\n                --year;\n                month = 12;\n                day = 31;\n            }\n        } else if (day == dim + 1) {\n            ++month;\n            day = 1;\n            if (month > 12) {\n                month = 1;\n                ++year;\n            }\n        } else {\n            let r = ord2ymd(ymd2ord(year, month, 1) + (day - 1));\n            year = r.year;\n            month = r.month;\n            day = r.day;\n        }\n    }\n    return {\n        year: year,\n        month: month,\n        day: day,\n        hour: hour,\n        minute: minute,\n        second: second,\n        microsecond: microsecond,\n    };\n}\n\n// -----------------------------------------------------------------------------\n// Date/Time and related classes\n// -----------------------------------------------------------------------------\n\nexport class PyDate {\n    /**\n     * @returns {PyDate}\n     */\n    static today() {\n        return this.convertDate(new Date());\n    }\n\n    /**\n     * Convert a date object into PyDate\n     * @param {Date} date\n     * @returns {PyDate}\n     */\n    static convertDate(date) {\n        const year = date.getUTCFullYear();\n        const month = date.getUTCMonth() + 1;\n        const day = date.getUTCDate();\n        return new PyDate(year, month, day);\n    }\n\n    /**\n     * @param {integer} year\n     * @param {integer} month\n     * @param {integer} day\n     */\n    constructor(year, month, day) {\n        this.year = year;\n        this.month = month; // 1-indexed => 1 = january, 2 = february, ...\n        this.day = day; // 1-indexed => 1 = first day of month, ...\n    }\n\n    /**\n     * @param  {...any} args\n     * @returns {PyDate}\n     */\n    static create(...args) {\n        const { year, month, day } = parseArgs(args, [\"year\", \"month\", \"day\"]);\n        return new PyDate(year, month, day);\n    }\n\n    /**\n     * @param {PyTimeDelta} timedelta\n     * @returns {PyDate}\n     */\n    add(timedelta) {\n        const s = tmxxx(this.year, this.month, this.day + timedelta.days);\n        return new PyDate(s.year, s.month, s.day);\n    }\n\n    /**\n     * @param {any} other\n     * @returns {boolean}\n     */\n    isEqual(other) {\n        if (!(other instanceof PyDate)) {\n            return false;\n        }\n        return this.year === other.year && this.month === other.month && this.day === other.day;\n    }\n\n    /**\n     * @param {string} format\n     * @returns {string}\n     */\n    strftime(format) {\n        return format.replace(/%([A-Za-z])/g, (m, c) => {\n            switch (c) {\n                case \"Y\":\n                    return fmt4(this.year);\n                case \"m\":\n                    return fmt2(this.month);\n                case \"d\":\n                    return fmt2(this.day);\n            }\n            throw new ValueError(`No known conversion for ${m}`);\n        });\n    }\n\n    /**\n     * @param {PyTimeDelta | PyDate} other\n     * @returns {PyDate | PyTimeDelta}\n     */\n    substract(other) {\n        if (other instanceof PyTimeDelta) {\n            return this.add(other.negate());\n        }\n        if (other instanceof PyDate) {\n            return PyTimeDelta.create(this.toordinal() - other.toordinal());\n        }\n        throw NotSupportedError();\n    }\n\n    /**\n     * @returns {string}\n     */\n    toJSON() {\n        return this.strftime(\"%Y-%m-%d\");\n    }\n\n    /**\n     * @returns {integer}\n     */\n    toordinal() {\n        return ymd2ord(this.year, this.month, this.day);\n    }\n}\n\nexport class PyDateTime {\n    /**\n     * @returns {PyDateTime}\n     */\n    static now() {\n        return this.convertDate(new Date());\n    }\n\n    /**\n     * Convert a date object into PyDateTime\n     * @param {Date} date\n     * @returns {PyDateTime}\n     */\n    static convertDate(date) {\n        const year = date.getUTCFullYear();\n        const month = date.getUTCMonth() + 1;\n        const day = date.getUTCDate();\n        const hour = date.getUTCHours();\n        const minute = date.getUTCMinutes();\n        const second = date.getUTCSeconds();\n        return new PyDateTime(year, month, day, hour, minute, second, 0);\n    }\n\n    /**\n     * @param  {...any} args\n     * @returns {PyDateTime}\n     */\n    static create(...args) {\n        const namedArgs = parseArgs(args, [\n            \"year\",\n            \"month\",\n            \"day\",\n            \"hour\",\n            \"minute\",\n            \"second\",\n            \"microsecond\",\n        ]);\n        const year = namedArgs.year;\n        const month = namedArgs.month;\n        const day = namedArgs.day;\n        const hour = namedArgs.hour || 0;\n        const minute = namedArgs.minute || 0;\n        const second = namedArgs.second || 0;\n        const ms = namedArgs.micro / 1000 || 0;\n        return new PyDateTime(year, month, day, hour, minute, second, ms);\n    }\n\n    /**\n     * @param  {...any} args\n     * @returns {PyDateTime}\n     */\n    static combine(...args) {\n        const { date, time } = parseArgs(args, [\"date\", \"time\"]);\n        // not sure. should we go through constructor instead? what about args normalization?\n        return PyDateTime.create(\n            date.year,\n            date.month,\n            date.day,\n            time.hour,\n            time.minute,\n            time.second\n        );\n    }\n\n    /**\n     * @param {integer} year\n     * @param {integer} month\n     * @param {integer} day\n     * @param {integer} hour\n     * @param {integer} minute\n     * @param {integer} second\n     * @param {integer} microsecond\n     */\n    constructor(year, month, day, hour, minute, second, microsecond) {\n        this.year = year;\n        this.month = month; // 1-indexed => 1 = january, 2 = february, ...\n        this.day = day; // 1-indexed => 1 = first day of month, ...\n        this.hour = hour;\n        this.minute = minute;\n        this.second = second;\n        this.microsecond = microsecond;\n    }\n\n    /**\n     * @param {PyTimeDelta} timedelta\n     * @returns {PyDate}\n     */\n    add(timedelta) {\n        const s = tmxxx(\n            this.year,\n            this.month,\n            this.day + timedelta.days,\n            this.hour,\n            this.minute,\n            this.second + timedelta.seconds,\n            this.microsecond + timedelta.microseconds\n        );\n        // does not seem to closely follow python implementation.\n        return new PyDateTime(s.year, s.month, s.day, s.hour, s.minute, s.second, s.microsecond);\n    }\n\n    /**\n     * @param {any} other\n     * @returns {boolean}\n     */\n    isEqual(other) {\n        if (!(other instanceof PyDateTime)) {\n            return false;\n        }\n        return (\n            this.year === other.year &&\n            this.month === other.month &&\n            this.day === other.day &&\n            this.hour === other.hour &&\n            this.minute === other.minute &&\n            this.second === other.second &&\n            this.microsecond === other.microsecond\n        );\n    }\n\n    /**\n     * @param {string} format\n     * @returns {string}\n     */\n    strftime(format) {\n        return format.replace(/%([A-Za-z])/g, (m, c) => {\n            switch (c) {\n                case \"Y\":\n                    return fmt4(this.year);\n                case \"m\":\n                    return fmt2(this.month);\n                case \"d\":\n                    return fmt2(this.day);\n                case \"H\":\n                    return fmt2(this.hour);\n                case \"M\":\n                    return fmt2(this.minute);\n                case \"S\":\n                    return fmt2(this.second);\n            }\n            throw new ValueError(`No known conversion for ${m}`);\n        });\n    }\n\n    /**\n     * @param {PyTimeDelta} timedelta\n     * @returns {PyDateTime}\n     */\n    substract(timedelta) {\n        return this.add(timedelta.negate());\n    }\n\n    /**\n     * @returns {string}\n     */\n    toJSON() {\n        return this.strftime(\"%Y-%m-%d %H:%M:%S\");\n    }\n\n    /**\n     * @returns {PyDateTime}\n     */\n    to_utc() {\n        const d = new Date(this.year, this.month -1, this.day, this.hour, this.minute, this.second);\n        const timedelta = PyTimeDelta.create({ minutes: d.getTimezoneOffset() });\n        return this.add(timedelta);\n    }\n}\n\nexport class PyTime extends PyDate {\n    /**\n     * @param  {...any} args\n     * @returns {PyTime}\n     */\n    static create(...args) {\n        const namedArgs = parseArgs(args, [\"hour\", \"minute\", \"second\"]);\n        const hour = namedArgs.hour || 0;\n        const minute = namedArgs.minute || 0;\n        const second = namedArgs.second || 0;\n        return new PyTime(hour, minute, second);\n    }\n\n    constructor(hour, minute, second) {\n        const now = new Date();\n        const year = now.getFullYear();\n        const month = now.getUTCMonth();\n        const day = now.getUTCDate();\n        super(year, month, day);\n        this.hour = hour;\n        this.minute = minute;\n        this.second = second;\n    }\n\n    /**\n     * @param {string} format\n     * @returns {string}\n     */\n    strftime(format) {\n        return format.replace(/%([A-Za-z])/g, (m, c) => {\n            switch (c) {\n                case \"Y\":\n                    return fmt4(this.year);\n                case \"m\":\n                    return fmt2(this.month + 1);\n                case \"d\":\n                    return fmt2(this.day);\n                case \"H\":\n                    return fmt2(this.hour);\n                case \"M\":\n                    return fmt2(this.minute);\n                case \"S\":\n                    return fmt2(this.second);\n            }\n            throw new ValueError(`No known conversion for ${m}`);\n        });\n    }\n\n    toJSON() {\n        return this.strftime(\"%H:%M:%S\");\n    }\n}\n\n/*\n * This list is intended to be of that shape (32 days in december), it is used by\n * the algorithm that computes \"relativedelta yearday\". The algorithm was adapted\n * from the one in python (https://github.com/dateutil/dateutil/blob/2.7.3/dateutil/relativedelta.py#L199)\n */\nconst DAYS_IN_YEAR = [31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 366];\n\nconst TIME_PERIODS = [\"hour\", \"minute\", \"second\"];\nconst PERIODS = [\"year\", \"month\", \"day\", ...TIME_PERIODS];\n\nconst RELATIVE_KEYS = \"years months weeks days hours minutes seconds microseconds leapdays\".split(\n    \" \"\n);\nconst ABSOLUTE_KEYS = \"year month day hour minute second microsecond weekday nlyearday yearday\".split(\n    \" \"\n);\n\nconst argsSpec = [\"dt1\", \"dt2\"]; // all other arguments are kwargs\nexport class PyRelativeDelta {\n    /**\n     * @param  {...any} args\n     * @returns {PyRelativeDelta}\n     */\n    static create(...args) {\n        const params = parseArgs(args, argsSpec);\n        if (\"dt1\" in params) {\n            throw new Error(\"relativedelta(dt1, dt2) is not supported for now\");\n        }\n        for (const period of PERIODS) {\n            if (period in params) {\n                const val = params[period];\n                assert(val >= 0, `${period} ${val} is out of range`);\n            }\n        }\n\n        for (const key of RELATIVE_KEYS) {\n            params[key] = params[key] || 0;\n        }\n        for (const key of ABSOLUTE_KEYS) {\n            params[key] = key in params ? params[key] : null;\n        }\n        params.days += 7 * params.weeks;\n\n        let yearDay = 0;\n        if (params.nlyearday) {\n            yearDay = params.nlyearday;\n        } else if (params.yearday) {\n            yearDay = params.yearday;\n            if (yearDay > 59) {\n                params.leapDays = -1;\n            }\n        }\n\n        if (yearDay) {\n            for (let monthIndex = 0; monthIndex < DAYS_IN_YEAR.length; monthIndex++) {\n                if (yearDay <= DAYS_IN_YEAR[monthIndex]) {\n                    params.month = monthIndex + 1;\n                    if (monthIndex === 0) {\n                        params.day = yearDay;\n                    } else {\n                        params.day = yearDay - DAYS_IN_YEAR[monthIndex - 1];\n                    }\n                    break;\n                }\n            }\n        }\n\n        return new PyRelativeDelta(params);\n    }\n\n    /**\n     * @param {PyDateTime|PyDate} date\n     * @param {PyRelativeDelta} delta\n     * @returns {PyDateTime|PyDate}\n     */\n    static add(date, delta) {\n        if (!(date instanceof PyDate || date instanceof PyDateTime)) {\n            throw NotSupportedError();\n        }\n\n        // First pass: we want to determine which is our target year and if we will apply leap days\n        const s = tmxxx(\n            (delta.year || date.year) + delta.years,\n            (delta.month || date.month) + delta.months,\n            delta.day || date.day,\n            delta.hour || date.hour || 0,\n            delta.minute || date.minute || 0,\n            delta.second || date.seconds || 0,\n            delta.microseconds || date.microseconds || 0\n        );\n\n        const newDateTime = new PyDateTime(\n            s.year,\n            s.month,\n            s.day,\n            s.hour,\n            s.minute,\n            s.second,\n            s.microsecond\n        );\n\n        let leapDays = 0;\n        if (delta.leapDays && newDateTime.month > 2 && isLeap(newDateTime.year)) {\n            leapDays = delta.leapDays;\n        }\n\n        // Second pass: apply the difference in days, and the difference in time values\n        const temp = newDateTime.add(\n            PyTimeDelta.create({\n                days: delta.days + leapDays,\n                hours: delta.hours,\n                minutes: delta.minutes,\n                seconds: delta.seconds,\n                microseconds: delta.microseconds,\n            })\n        );\n\n        // Determine the right return type:\n        // First we look at the type of the incoming date object,\n        // then we look at the actual time values held by the computed date.\n        const hasTime = Boolean(temp.hour || temp.minute || temp.second || temp.microsecond);\n        const returnDate =\n            !hasTime && date instanceof PyDate ? new PyDate(temp.year, temp.month, temp.day) : temp;\n\n        // Final pass: target the wanted day of the week (if necessary)\n        if (delta.weekday !== null) {\n            const wantedDow = delta.weekday + 1; // python: Monday is 0 ; JS: Monday is 1;\n            const _date = new Date(returnDate.year, returnDate.month - 1, returnDate.day);\n            const days = (7 - _date.getDay() + wantedDow) % 7;\n            return returnDate.add(new PyTimeDelta(days, 0, 0));\n        }\n        return returnDate;\n    }\n\n    /**\n     * @param {PyDateTime|PyDate} date\n     * @param {PyRelativeDelta} delta\n     * @returns {PyDateTime|PyDate}\n     */\n    static substract(date, delta) {\n        return PyRelativeDelta.add(date, delta.negate());\n    }\n\n    /**\n     * @param {Object} params\n     * @param {+1|-1} sign\n     */\n    constructor(params = {}, sign = +1) {\n        this.years = sign * params.years;\n        this.months = sign * params.months;\n        this.days = sign * params.days;\n        this.hours = sign * params.hours;\n        this.minutes = sign * params.minutes;\n        this.seconds = sign * params.seconds;\n        this.microseconds = sign * params.microseconds;\n\n        this.leapDays = params.leapDays;\n\n        this.year = params.year;\n        this.month = params.month;\n        this.day = params.day;\n        this.hour = params.hour;\n        this.minute = params.minute;\n        this.second = params.second;\n        this.microsecond = params.microsecond;\n\n        this.weekday = params.weekday;\n    }\n\n    /**\n     * @returns {PyRelativeDelta}\n     */\n    negate() {\n        return new PyRelativeDelta(this, -1);\n    }\n\n    isEqual(other) {\n        // For now we don't do normalization in the constructor (or create method).\n        // That is, we only compute the overflows at the time we add or substract.\n        // This is why we can't support isEqual for now.\n        throw new NotSupportedError();\n    }\n}\n\nconst TIME_DELTA_KEYS = \"weeks days hours minutes seconds milliseconds microseconds\".split(\" \");\n\n/**\n * Returns a \"pair\" with the fractional and integer parts of x\n * @param {float}\n * @returns {[float,integer]}\n */\nfunction modf(x) {\n    const mod = x % 1;\n    return [mod < 0 ? mod + 1 : mod, Math.floor(x)];\n}\n\nexport class PyTimeDelta {\n    /**\n     * @param  {...any} args\n     * @returns {PyTimeDelta}\n     */\n    static create(...args) {\n        const namedArgs = parseArgs(args, [\"days\", \"seconds\", \"microseconds\"]);\n        for (const key of TIME_DELTA_KEYS) {\n            namedArgs[key] = namedArgs[key] || 0;\n        }\n\n        // a timedelta can be created using TIME_DELTA_KEYS with float/integer values\n        // but only days, seconds, microseconds are kept internally.\n        // --> some normalization occurs here\n\n        let d = 0;\n        let s = 0;\n        let us = 0; // ~ \u03bcs standard notation for microseconds\n\n        const days = namedArgs.days + namedArgs.weeks * 7;\n        let seconds = namedArgs.seconds + 60 * namedArgs.minutes + 3600 * namedArgs.hours;\n        let microseconds = namedArgs.microseconds + 1000 * namedArgs.milliseconds;\n\n        const [dFrac, dInt] = modf(days);\n        d = dInt;\n        let daysecondsfrac = 0;\n        if (dFrac) {\n            const [dsFrac, dsInt] = modf(dFrac * 24 * 3600);\n            s = dsInt;\n            daysecondsfrac = dsFrac;\n        }\n\n        const [sFrac, sInt] = modf(seconds);\n        seconds = sInt;\n        const secondsfrac = sFrac + daysecondsfrac;\n\n        divmod(seconds, 24 * 3600, (days, seconds) => {\n            d += days;\n            s += seconds;\n        });\n\n        microseconds += secondsfrac * 1e6;\n        divmod(microseconds, 1000000, (seconds, microseconds) => {\n            divmod(seconds, 24 * 3600, (days, seconds) => {\n                d += days;\n                s += seconds;\n                us += Math.round(microseconds);\n            });\n        });\n\n        return new PyTimeDelta(d, s, us);\n    }\n\n    /**\n     * @param {integer} days\n     * @param {integer} seconds\n     * @param {integer} microseconds\n     */\n    constructor(days, seconds, microseconds) {\n        this.days = days;\n        this.seconds = seconds;\n        this.microseconds = microseconds;\n    }\n\n    /**\n     * @param {PyTimeDelta} other\n     * @returns {PyTimeDelta}\n     */\n    add(other) {\n        return PyTimeDelta.create({\n            days: this.days + other.days,\n            seconds: this.seconds + other.seconds,\n            microseconds: this.microseconds + other.microseconds,\n        });\n    }\n\n    /**\n     * @param {integer} n\n     * @returns {PyTimeDelta}\n     */\n    divide(n) {\n        const us = (this.days * 24 * 3600 + this.seconds) * 1e6 + this.microseconds;\n        return PyTimeDelta.create({ microseconds: Math.floor(us / n) });\n    }\n\n    /**\n     * @param {any} other\n     * @returns {boolean}\n     */\n    isEqual(other) {\n        if (!(other instanceof PyTimeDelta)) {\n            return false;\n        }\n        return (\n            this.days === other.days &&\n            this.seconds === other.seconds &&\n            this.microseconds === other.microseconds\n        );\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isTrue() {\n        return this.days !== 0 || this.seconds !== 0 || this.microseconds !== 0;\n    }\n\n    /**\n     * @param {float} n\n     * @returns {PyTimeDelta}\n     */\n    multiply(n) {\n        return PyTimeDelta.create({\n            days: n * this.days,\n            seconds: n * this.seconds,\n            microseconds: n * this.microseconds,\n        });\n    }\n\n    /**\n     * @returns {PyTimeDelta}\n     */\n    negate() {\n        return PyTimeDelta.create({\n            days: -this.days,\n            seconds: -this.seconds,\n            microseconds: -this.microseconds,\n        });\n    }\n\n    /**\n     * @param {PyTimeDelta} other\n     * @returns {PyTimeDelta}\n     */\n    substract(other) {\n        return PyTimeDelta.create({\n            days: this.days - other.days,\n            seconds: this.seconds - other.seconds,\n            microseconds: this.microseconds - other.microseconds,\n        });\n    }\n\n    /**\n     * @returns {float}\n     */\n    total_seconds() {\n        return this.days * 86400 + this.seconds + this.microseconds / 1000000;\n    }\n}\n", "/** @odoo-module **/\n\nimport { BUILTINS } from \"./py_builtin\";\nimport {\n    NotSupportedError,\n    PyDate,\n    PyDateTime,\n    PyRelativeDelta,\n    PyTime,\n    PyTimeDelta,\n} from \"./py_date\";\nimport { PY_DICT, toPyDict } from \"./py_utils\";\nimport { parseArgs } from './py_parser';\n\n// -----------------------------------------------------------------------------\n// Types\n// -----------------------------------------------------------------------------\n\n/**\n * @typedef { import(\"./py_parser\").AST } AST\n */\n\nexport class EvaluationError extends Error {}\n\n// -----------------------------------------------------------------------------\n// Constants and helpers\n// -----------------------------------------------------------------------------\n\nconst isTrue = BUILTINS.bool;\n\n/**\n * @param {AST} ast\n * @param {Object} context\n * @returns {any}\n */\nfunction applyUnaryOp(ast, context) {\n    const value = evaluate(ast.right, context);\n    switch (ast.op) {\n        case \"-\":\n            if (value instanceof Object && value.negate) {\n                return value.negate();\n            }\n            return -value;\n        case \"+\":\n            return value;\n        case \"not\":\n            return !isTrue(value);\n    }\n    throw new EvaluationError(`Unknown unary operator: ${ast.op}`);\n}\n\n/**\n * We want to maintain this order:\n *   None < number (boolean) < dict < string < list < dict\n * So, each type is mapped to a number to represent that order\n *\n * @param {any} val\n * @returns {number} index type\n */\nfunction pytypeIndex(val) {\n    switch (typeof val) {\n        case \"object\":\n            // None, List, Object, Dict\n            return val === null ? 1 : Array.isArray(val) ? 5 : 3;\n        case \"number\":\n            return 2;\n        case \"string\":\n            return 4;\n    }\n    throw new EvaluationError(`Unknown type: ${typeof val}`);\n}\n\n/**\n * @param {Object} obj\n * @returns {boolean}\n */\nfunction isConstructor(obj) {\n    return !!obj.prototype && !!obj.prototype.constructor.name;\n}\n\n/**\n * Compare two values\n *\n * @param {any} left\n * @param {any} right\n * @returns {boolean}\n */\nfunction isLess(left, right) {\n    if (typeof left === \"number\" && typeof right === \"number\") {\n        return left < right;\n    }\n    if (typeof left === \"boolean\") {\n        left = left ? 1 : 0;\n    }\n    if (typeof right === \"boolean\") {\n        right = right ? 1 : 0;\n    }\n    const leftIndex = pytypeIndex(left);\n    const rightIndex = pytypeIndex(right);\n    if (leftIndex === rightIndex) {\n        return left < right;\n    }\n    return leftIndex < rightIndex;\n}\n\n/**\n * @param {any} left\n * @param {any} right\n * @returns {boolean}\n */\nfunction isEqual(left, right) {\n    if (typeof left !== typeof right) {\n        if (typeof left === \"boolean\" && typeof right === \"number\") {\n            return right === (left ? 1 : 0);\n        }\n        if (typeof left === \"number\" && typeof right === \"boolean\") {\n            return left === (right ? 1 : 0);\n        }\n        return false;\n    }\n    if (left instanceof Object && left.isEqual) {\n        return left.isEqual(right);\n    }\n    return left === right;\n}\n\n/**\n * @param {any} left\n * @param {any} right\n * @returns {boolean}\n */\nfunction isIn(left, right) {\n    if (Array.isArray(right)) {\n        return right.includes(left);\n    }\n    if (typeof right === \"string\" && typeof left === \"string\") {\n        return right.includes(left);\n    }\n    return false;\n}\n\n/**\n * @param {AST} ast\n * @param {object} context\n * @returns {any}\n */\nfunction applyBinaryOp(ast, context) {\n    const left = evaluate(ast.left, context);\n    const right = evaluate(ast.right, context);\n    switch (ast.op) {\n        case \"+\": {\n            const relativeDeltaOnLeft = left instanceof PyRelativeDelta;\n            const relativeDeltaOnRight = right instanceof PyRelativeDelta;\n            if (relativeDeltaOnLeft || relativeDeltaOnRight) {\n                const date = relativeDeltaOnLeft ? right : left;\n                const delta = relativeDeltaOnLeft ? left : right;\n                return PyRelativeDelta.add(date, delta);\n            }\n\n            const timeDeltaOnLeft = left instanceof PyTimeDelta;\n            const timeDeltaOnRight = right instanceof PyTimeDelta;\n            if (timeDeltaOnLeft && timeDeltaOnRight) {\n                return left.add(right);\n            }\n            if (timeDeltaOnLeft) {\n                if (right instanceof PyDate || right instanceof PyDateTime) {\n                    return right.add(left);\n                } else {\n                    throw NotSupportedError();\n                }\n            }\n            if (timeDeltaOnRight) {\n                if (left instanceof PyDate || left instanceof PyDateTime) {\n                    return left.add(right);\n                } else {\n                    throw NotSupportedError();\n                }\n            }\n\n            return left + right;\n        }\n        case \"-\": {\n            const isRightDelta = right instanceof PyRelativeDelta;\n            if (isRightDelta) {\n                return PyRelativeDelta.substract(left, right);\n            }\n\n            const timeDeltaOnRight = right instanceof PyTimeDelta;\n            if (timeDeltaOnRight) {\n                if (left instanceof PyTimeDelta) {\n                    return left.substract(right);\n                } else if (left instanceof PyDate || left instanceof PyDateTime) {\n                    return left.substract(right);\n                } else {\n                    throw NotSupportedError();\n                }\n            }\n\n            if (left instanceof PyDate) {\n                return left.substract(right);\n            }\n            return left - right;\n        }\n        case \"*\":\n            const timeDeltaOnLeft = left instanceof PyTimeDelta;\n            const timeDeltaOnRight = right instanceof PyTimeDelta;\n            if (timeDeltaOnLeft || timeDeltaOnRight) {\n                const number = timeDeltaOnLeft ? right : left;\n                const delta = timeDeltaOnLeft ? left : right;\n                return delta.multiply(number); // check number type?\n            }\n\n            return left * right;\n        case \"/\":\n            return left / right;\n        case \"%\":\n            return left % right;\n        case \"//\":\n            if (left instanceof PyTimeDelta) {\n                return left.divide(right); // check number type?\n            }\n            return Math.floor(left / right);\n        case \"**\":\n            return left ** right;\n        case \"==\":\n            return isEqual(left, right);\n        case \"<>\":\n        case \"!=\":\n            return !isEqual(left, right);\n        case \"<\":\n            return isLess(left, right);\n        case \">\":\n            return isLess(right, left);\n        case \">=\":\n            return isEqual(left, right) || isLess(right, left);\n        case \"<=\":\n            return isEqual(left, right) || isLess(left, right);\n        case \"in\":\n            return isIn(left, right);\n        case \"not in\":\n            return !isIn(left, right);\n    }\n    throw new EvaluationError(`Unknown binary operator: ${ast.op}`);\n}\n\nconst DICT = {\n    get(dict) {\n        return (...args) => {\n            const { key, defValue } = parseArgs(args, [\"key\", \"defValue\"]);\n            if (key in dict) {\n                return dict[key];\n            } else if (defValue) {\n                return defValue;\n            }\n            return null;\n        };\n    },\n};\n\n// -----------------------------------------------------------------------------\n// Evaluate function\n// -----------------------------------------------------------------------------\n\n/**\n * @param {AST} ast\n * @param {Object} context\n * @returns {any}\n */\nexport function evaluate(ast, context = {}) {\n    const dicts = new Set();\n    let pyContext;\n    const evalContext = Object.create(context);\n    Object.defineProperty(evalContext, \"context\", {\n        get() {\n            if (!pyContext) {\n                pyContext = toPyDict(context);\n            }\n            return pyContext;\n        },\n    });\n\n    /**\n     * @param {AST} ast\n     */\n    function _evaluate(ast) {\n        switch (ast.type) {\n            case 0 /* Number */:\n            case 1 /* String */:\n                return ast.value;\n            case 5 /* Name */:\n                if (ast.value in evalContext) {\n                    return evalContext[ast.value];\n                } else if (ast.value in BUILTINS) {\n                    return BUILTINS[ast.value];\n                } else {\n                    throw new EvaluationError(`Name '${ast.value}' is not defined`);\n                }\n            case 3 /* None */:\n                return null;\n            case 2 /* Boolean */:\n                return ast.value;\n            case 6 /* UnaryOperator */:\n                return applyUnaryOp(ast, evalContext);\n            case 7 /* BinaryOperator */:\n                return applyBinaryOp(ast, evalContext);\n            case 14 /* BooleanOperator */:\n                const left = _evaluate(ast.left);\n                if (ast.op === \"and\") {\n                    return isTrue(left) ? _evaluate(ast.right) : left;\n                } else {\n                    return isTrue(left) ? left : _evaluate(ast.right);\n                }\n            case 4 /* List */:\n            case 10 /* Tuple */:\n                return ast.value.map(_evaluate);\n            case 11 /* Dictionary */:\n                const dict = {};\n                for (let key in ast.value) {\n                    dict[key] = _evaluate(ast.value[key]);\n                }\n                dicts.add(dict);\n                return dict;\n            case 8 /* FunctionCall */:\n                const fnValue = _evaluate(ast.fn);\n                const args = ast.args.map(_evaluate);\n                const kwargs = {};\n                for (let kwarg in ast.kwargs) {\n                    kwargs[kwarg] = _evaluate(ast.kwargs[kwarg]);\n                }\n                if (\n                    fnValue === PyDate ||\n                    fnValue === PyDateTime ||\n                    fnValue === PyTime ||\n                    fnValue === PyRelativeDelta ||\n                    fnValue === PyTimeDelta\n                ) {\n                    return fnValue.create(...args, kwargs);\n                }\n                return fnValue(...args, kwargs);\n            case 12 /* Lookup */: {\n                const dict = _evaluate(ast.target);\n                const key = _evaluate(ast.key);\n                return dict[key];\n            }\n            case 13 /* If */: {\n                if (isTrue(_evaluate(ast.condition))) {\n                    return _evaluate(ast.ifTrue);\n                } else {\n                    return _evaluate(ast.ifFalse);\n                }\n            }\n            case 15 /* ObjLookup */: {\n                const left = _evaluate(ast.obj);\n                if (dicts.has(left) || Object.isPrototypeOf.call(PY_DICT, left)) {\n                    // this is a dictionary => need to apply dict methods\n                    return DICT[ast.key](left);\n                }\n                const result = left[ast.key];\n                if (typeof result === \"function\" && !isConstructor(result)) {\n                    return result.bind(left);\n                }\n                return result;\n            }\n        }\n        throw new EvaluationError(`AST of type ${ast.type} cannot be evaluated`);\n    }\n    return _evaluate(ast);\n}\n", "/** @odoo-module **/\n\nimport { binaryOperators, comparators } from \"./py_tokenizer\";\n\n// -----------------------------------------------------------------------------\n// Types\n// -----------------------------------------------------------------------------\n\n/**\n * @typedef { import(\"./py_tokenizer\").Token } Token\n */\n\n/**\n * @typedef {{type: 0, value: number}} ASTNumber\n * @typedef {{type: 1, value: string}} ASTString\n * @typedef {{type: 2, value: boolean}} ASTBoolean\n * @typedef {{type: 3}} ASTNone\n * @typedef {{type: 4, value: AST[]}} ASTList\n * @typedef {{type: 5, value: string}} ASTName\n * @typedef {{type: 6, op: string, right: AST}} ASTUnaryOperator\n * @typedef {{type: 7, op: string, left: AST, right: AST}} ASTBinaryOperator\n * @typedef {{type: 8, fn: AST, args: AST[], kwargs: {[key: string]: AST}}} ASTFunctionCall\n * @typedef {{type: 9, name: ASTName, value: AST}} ASTAssignment\n * @typedef {{type: 10, value: AST[]}} ASTTuple\n * @typedef {{type: 11, value: { [key: string]: AST}}} ASTDictionary\n * @typedef {{type: 12, target: AST, key: AST}} ASTLookup\n * @typedef {{type: 13, condition: AST, ifTrue: AST, ifFalse: AST}} ASTIf\n * @typedef {{type: 14, op: string, left: AST, right: AST}} ASTBooleanOperator\n * @typedef {{type: 15, obj: AST, key: string}} ASTObjLookup\n *\n * @typedef { ASTNumber | ASTString | ASTBoolean | ASTNone | ASTList | ASTName | ASTUnaryOperator | ASTBinaryOperator | ASTFunctionCall | ASTAssignment | ASTTuple | ASTDictionary |ASTLookup | ASTIf | ASTBooleanOperator | ASTObjLookup} AST\n */\n\nexport class ParserError extends Error {}\n\n// -----------------------------------------------------------------------------\n// Constants and helpers\n// -----------------------------------------------------------------------------\n\nconst chainedOperators = new Set(comparators);\nconst infixOperators = new Set(binaryOperators.concat(comparators));\n\n/**\n * Compute the \"binding power\" of a symbol\n *\n * @param {string} symbol\n * @returns {number}\n */\nexport function bp(symbol) {\n    switch (symbol) {\n        case \"=\":\n            return 10;\n        case \"if\":\n            return 20;\n        case \"in\":\n        case \"not in\":\n        case \"is\":\n        case \"is not\":\n        case \"<\":\n        case \"<=\":\n        case \">\":\n        case \">=\":\n        case \"<>\":\n        case \"==\":\n        case \"!=\":\n            return 60;\n        case \"or\":\n            return 30;\n        case \"and\":\n            return 40;\n        case \"not\":\n            return 50;\n        case \"|\":\n            return 70;\n        case \"^\":\n            return 80;\n        case \"&\":\n            return 90;\n        case \"<<\":\n        case \">>\":\n            return 100;\n        case \"+\":\n        case \"-\":\n            return 110;\n        case \"*\":\n        case \"/\":\n        case \"//\":\n        case \"%\":\n            return 120;\n        case \"**\":\n            return 140;\n        case \".\":\n        case \"(\":\n        case \"[\":\n            return 150;\n    }\n    return 0;\n}\n\n/**\n * Compute binding power of a symbol\n *\n * @param {Token} token\n * @returns {number}\n */\nfunction bindingPower(token) {\n    return token.type === 2 /* Symbol */ ? bp(token.value) : 0;\n}\n\n/**\n * Check if a token is a symbol of a given value\n *\n * @param {Token} token\n * @param {string} value\n * @returns {boolean}\n */\nfunction isSymbol(token, value) {\n    return token.type === 2 /* Symbol */ && token.value === value;\n}\n\n/**\n * @param {Token} current\n * @param {Token[]} tokens\n * @returns {AST}\n */\nfunction parsePrefix(current, tokens) {\n    switch (current.type) {\n        case 0 /* Number */:\n            return { type: 0 /* Number */, value: current.value };\n        case 1 /* String */:\n            return { type: 1 /* String */, value: current.value };\n        case 4 /* Constant */:\n            if (current.value === \"None\") {\n                return { type: 3 /* None */ };\n            } else {\n                return { type: 2 /* Boolean */, value: current.value === \"True\" };\n            }\n        case 3 /* Name */:\n            return { type: 5 /* Name */, value: current.value };\n        case 2 /* Symbol */:\n            switch (current.value) {\n                case \"-\":\n                case \"+\":\n                case \"~\":\n                    return {\n                        type: 6 /* UnaryOperator */,\n                        op: current.value,\n                        right: _parse(tokens, 130),\n                    };\n                case \"not\":\n                    return {\n                        type: 6 /* UnaryOperator */,\n                        op: current.value,\n                        right: _parse(tokens, 50),\n                    };\n                case \"(\":\n                    const content = [];\n                    let isTuple = false;\n                    while (tokens[0] && !isSymbol(tokens[0], \")\")) {\n                        content.push(_parse(tokens, 0));\n                        if (tokens[0]) {\n                            if (tokens[0] && isSymbol(tokens[0], \",\")) {\n                                isTuple = true;\n                                tokens.shift();\n                            } else if (!isSymbol(tokens[0], \")\")) {\n                                throw new ParserError(\"parsing error\");\n                            }\n                        } else {\n                            throw new ParserError(\"parsing error\");\n                        }\n                    }\n                    if (!tokens[0] || !isSymbol(tokens[0], \")\")) {\n                        throw new ParserError(\"parsing error\");\n                    }\n                    tokens.shift();\n                    isTuple = isTuple || content.length === 0;\n                    return isTuple ? { type: 10 /* Tuple */, value: content } : content[0];\n                case \"[\":\n                    const value = [];\n                    while (tokens[0] && !isSymbol(tokens[0], \"]\")) {\n                        value.push(_parse(tokens, 0));\n                        if (tokens[0]) {\n                            if (isSymbol(tokens[0], \",\")) {\n                                tokens.shift();\n                            } else if (!isSymbol(tokens[0], \"]\")) {\n                                throw new ParserError(\"parsing error\");\n                            }\n                        }\n                    }\n                    if (!tokens[0] || !isSymbol(tokens[0], \"]\")) {\n                        throw new ParserError(\"parsing error\");\n                    }\n                    tokens.shift();\n                    return { type: 4 /* List */, value };\n                case \"{\": {\n                    const dict = {};\n                    while (tokens[0] && !isSymbol(tokens[0], \"}\")) {\n                        const key = _parse(tokens, 0);\n                        if (\n                            (key.type !== 1 /* String */ && key.type !== 0) /* Number */ ||\n                            !tokens[0] ||\n                            !isSymbol(tokens[0], \":\")\n                        ) {\n                            throw new ParserError(\"parsing error\");\n                        }\n                        tokens.shift();\n                        const value = _parse(tokens, 0);\n                        dict[key.value] = value;\n                        if (isSymbol(tokens[0], \",\")) {\n                            tokens.shift();\n                        }\n                    }\n                    // remove the } token\n                    if (!tokens.shift()) {\n                        throw new ParserError(\"parsing error\");\n                    }\n                    return { type: 11 /* Dictionary */, value: dict };\n                }\n            }\n    }\n    throw new ParserError(\"Token cannot be parsed\");\n}\n\n/**\n * @param {AST} ast\n * @param {Token} current\n * @param {Token[]} tokens\n * @returns {AST}\n */\nfunction parseInfix(left, current, tokens) {\n    switch (current.type) {\n        case 2 /* Symbol */:\n            if (infixOperators.has(current.value)) {\n                let right = _parse(tokens, bindingPower(current));\n                if (current.value === \"and\" || current.value === \"or\") {\n                    return {\n                        type: 14 /* BooleanOperator */,\n                        op: current.value,\n                        left,\n                        right,\n                    };\n                } else if (current.value === \".\") {\n                    if (right.type === 5 /* Name */) {\n                        return {\n                            type: 15 /* ObjLookup */,\n                            obj: left,\n                            key: right.value,\n                        };\n                    } else {\n                        throw new ParserError(\"invalid obj lookup\");\n                    }\n                }\n                let op = {\n                    type: 7 /* BinaryOperator */,\n                    op: current.value,\n                    left,\n                    right,\n                };\n                while (\n                    chainedOperators.has(current.value) &&\n                    tokens[0] &&\n                    tokens[0].type === 2 /* Symbol */ &&\n                    chainedOperators.has(tokens[0].value)\n                ) {\n                    const nextToken = tokens.shift();\n                    op = {\n                        type: 14 /* BooleanOperator */,\n                        op: \"and\",\n                        left: op,\n                        right: {\n                            type: 7 /* BinaryOperator */,\n                            op: nextToken.value,\n                            left: right,\n                            right: _parse(tokens, bindingPower(nextToken)),\n                        },\n                    };\n                    right = op.right.right;\n                }\n                return op;\n            }\n            switch (current.value) {\n                case \"(\":\n                    // function call\n                    const args = [];\n                    const kwargs = {};\n                    while (tokens[0] && !isSymbol(tokens[0], \")\")) {\n                        const arg = _parse(tokens, 0);\n                        if (arg.type === 9 /* Assignment */) {\n                            kwargs[arg.name.value] = arg.value;\n                        } else {\n                            args.push(arg);\n                        }\n                        if (tokens[0] && isSymbol(tokens[0], \",\")) {\n                            tokens.shift();\n                        }\n                    }\n                    if (!tokens[0] || !isSymbol(tokens[0], \")\")) {\n                        throw new ParserError(\"parsing error\");\n                    }\n                    tokens.shift();\n                    return { type: 8 /* FunctionCall */, fn: left, args, kwargs };\n                case \"=\":\n                    if (left.type === 5 /* Name */) {\n                        return {\n                            type: 9 /* Assignment */,\n                            name: left,\n                            value: _parse(tokens, 10),\n                        };\n                    }\n                case \"[\": {\n                    // lookup in dictionary\n                    const key = _parse(tokens);\n                    if (!tokens[0] || !isSymbol(tokens[0], \"]\")) {\n                        throw new ParserError(\"parsing error\");\n                    }\n                    tokens.shift();\n                    return {\n                        type: 12 /* Lookup */,\n                        target: left,\n                        key: key,\n                    };\n                }\n                case \"if\": {\n                    const condition = _parse(tokens);\n                    if (!tokens[0] || !isSymbol(tokens[0], \"else\")) {\n                        throw new ParserError(\"parsing error\");\n                    }\n                    tokens.shift();\n                    const ifFalse = _parse(tokens);\n                    return {\n                        type: 13 /* If */,\n                        condition,\n                        ifTrue: left,\n                        ifFalse,\n                    };\n                }\n            }\n    }\n    throw new ParserError(\"Token cannot be parsed\");\n}\n\n/**\n * @param {Token[]} tokens\n * @param {number} [bp]\n * @returns {AST}\n */\nfunction _parse(tokens, bp = 0) {\n    const token = tokens.shift();\n    let expr = parsePrefix(token, tokens);\n    while (tokens[0] && bindingPower(tokens[0]) > bp) {\n        expr = parseInfix(expr, tokens.shift(), tokens);\n    }\n    return expr;\n}\n\n// -----------------------------------------------------------------------------\n// Parse function\n// -----------------------------------------------------------------------------\n\n/**\n * Parse a list of tokens\n *\n * @param {Token[]} tokens\n * @returns {AST}\n */\nexport function parse(tokens) {\n    if (tokens.length) {\n        return _parse(tokens, 0);\n    }\n    throw new ParserError(\"Missing token\");\n}\n\n/**\n * @param {any[]} args\n * @param {string[]} spec\n * @returns {{[name: string]: any}}\n */\nexport function parseArgs(args, spec) {\n    const last = args[args.length - 1];\n    const unnamedArgs = typeof last === \"object\" ? args.slice(0, -1) : args;\n    const kwargs = typeof last === \"object\" ? last : {};\n    for (let [index, val] of unnamedArgs.entries()) {\n        kwargs[spec[index]] = val;\n    }\n    return kwargs;\n}\n", "/** @odoo-module **/\n\n// -----------------------------------------------------------------------------\n// Types\n// -----------------------------------------------------------------------------\n\n/**\n * @typedef {{type: 0, value: number}} TokenNumber\n *\n * @typedef {{type: 1, value: string}} TokenString\n *\n * @typedef {{type: 2, value: string}} TokenSymbol\n *\n * @typedef {{type: 3, value: string}} TokenName\n *\n * @typedef {{type: 4, value: string}} TokenConstant\n *\n * @typedef {TokenNumber | TokenString | TokenSymbol | TokenName | TokenConstant} Token\n */\n\nexport class TokenizerError extends Error {}\n\n// -----------------------------------------------------------------------------\n// Helpers and Constants\n// -----------------------------------------------------------------------------\n\n/**\n * Directly maps a single escape code to an output character\n */\nconst directMap = {\n    \"\\\\\": \"\\\\\",\n    '\"': '\"',\n    \"'\": \"'\",\n    a: \"\\x07\",\n    b: \"\\x08\",\n    f: \"\\x0c\",\n    n: \"\\n\",\n    r: \"\\r\",\n    t: \"\\t\",\n    v: \"\\v\",\n};\n\n/**\n * Implements the decoding of Python string literals (embedded in\n * JS strings) into actual JS strings. This includes the decoding\n * of escapes into their corresponding JS\n * characters/codepoints/whatever.\n *\n * The ``unicode`` flags notes whether the literal should be\n * decoded as a bytestring literal or a unicode literal, which\n * pretty much only impacts decoding (or not) of unicode escapes\n * at this point since bytestrings are not technically handled\n * (everything is decoded to JS \"unicode\" strings)\n *\n * Eventurally, ``str`` could eventually use typed arrays, that'd\n * be interesting...\n *\n * @param {string} str\n * @param {boolean} unicode\n * @returns {string}\n */\nfunction decodeStringLiteral(str, unicode) {\n    let out = [];\n    let code;\n    for (var i = 0; i < str.length; ++i) {\n        if (str[i] !== \"\\\\\") {\n            out.push(str[i]);\n            continue;\n        }\n        var escape = str[i + 1];\n        if (escape in directMap) {\n            out.push(directMap[escape]);\n            ++i;\n            continue;\n        }\n        switch (escape) {\n            // Ignored\n            case \"\\n\":\n                ++i;\n                continue;\n            // Character named name in the Unicode database (Unicode only)\n            case \"N\":\n                if (!unicode) {\n                    break;\n                }\n                throw new TokenizerError(\"SyntaxError: \\\\N{} escape not implemented\");\n            case \"u\":\n                if (!unicode) {\n                    break;\n                }\n                var uni = str.slice(i + 2, i + 6);\n                if (!/[0-9a-f]{4}/i.test(uni)) {\n                    throw new TokenizerError(\n                        [\n                            \"SyntaxError: (unicode error) 'unicodeescape' codec\",\n                            \" can't decode bytes in position \",\n                            i,\n                            \"-\",\n                            i + 4,\n                            \": truncated \\\\uXXXX escape\",\n                        ].join(\"\")\n                    );\n                }\n                code = parseInt(uni, 16);\n                out.push(String.fromCharCode(code));\n                // escape + 4 hex digits\n                i += 5;\n                continue;\n            case \"U\":\n                if (!unicode) {\n                    break;\n                }\n                // TODO: String.fromCodePoint\n                throw new TokenizerError(\"SyntaxError: \\\\U escape not implemented\");\n            case \"x\":\n                // get 2 hex digits\n                var hex = str.slice(i + 2, i + 4);\n                if (!/[0-9a-f]{2}/i.test(hex)) {\n                    if (!unicode) {\n                        throw new TokenizerError(\"ValueError: invalid \\\\x escape\");\n                    }\n                    throw new TokenizerError(\n                        [\n                            \"SyntaxError: (unicode error) 'unicodeescape'\",\n                            \" codec can't decode bytes in position \",\n                            i,\n                            \"-\",\n                            i + 2,\n                            \": truncated \\\\xXX escape\",\n                        ].join(\"\")\n                    );\n                }\n                code = parseInt(hex, 16);\n                out.push(String.fromCharCode(code));\n                // skip escape + 2 hex digits\n                i += 3;\n                continue;\n            default:\n                // Check if octal\n                if (!/[0-8]/.test(escape)) {\n                    break;\n                }\n                var r = /[0-8]{1,3}/g;\n                r.lastIndex = i + 1;\n                var m = r.exec(str);\n                var oct = m[0];\n                code = parseInt(oct, 8);\n                out.push(String.fromCharCode(code));\n                // skip matchlength\n                i += oct.length;\n                continue;\n        }\n        out.push(\"\\\\\");\n    }\n    return out.join(\"\");\n}\n\nconst constants = new Set([\"None\", \"False\", \"True\"]);\n\nexport const comparators = [\n    \"in\",\n    \"not\",\n    \"not in\",\n    \"is\",\n    \"is not\",\n    \"<\",\n    \"<=\",\n    \">\",\n    \">=\",\n    \"<>\",\n    \"!=\",\n    \"==\",\n];\n\nexport const binaryOperators = [\n    \"or\",\n    \"and\",\n    \"|\",\n    \"^\",\n    \"&\",\n    \"<<\",\n    \">>\",\n    \"+\",\n    \"-\",\n    \"*\",\n    \"/\",\n    \"//\",\n    \"%\",\n    \"~\",\n    \"**\",\n    \".\",\n];\n\nexport const unaryOperators = [\"-\"];\n\nconst symbols = new Set([\n    ...[\"(\", \")\", \"[\", \"]\", \"{\", \"}\", \":\", \",\"],\n    ...[\"if\", \"else\", \"lambda\", \"=\"],\n    ...comparators,\n    ...binaryOperators,\n    ...unaryOperators,\n]);\n\n// Regexps\nfunction group(...args) {\n    return \"(\" + args.join(\"|\") + \")\";\n}\n\nconst Name = \"[a-zA-Z_]\\\\w*\";\nconst Whitespace = \"[ \\\\f\\\\t]*\";\nconst DecNumber = \"\\\\d+(L|l)?\";\nconst IntNumber = DecNumber;\n\nconst Exponent = \"[eE][+-]?\\\\d+\";\nconst PointFloat = group(`\\\\d+\\\\.\\\\d*(${Exponent})?`, `\\\\.\\\\d+(${Exponent})?`);\n// Exponent not optional when no decimal point\nconst FloatNumber = group(PointFloat, `\\\\d+${Exponent}`);\n\nconst Number = group(FloatNumber, IntNumber);\nconst Operator = group(\"\\\\*\\\\*=?\", \">>=?\", \"<<=?\", \"<>\", \"!=\", \"//=?\", \"[+\\\\-*/%&|^=<>]=?\", \"~\");\nconst Bracket = \"[\\\\[\\\\]\\\\(\\\\)\\\\{\\\\}]\";\nconst Special = \"[:;.,`@]\";\nconst Funny = group(Operator, Bracket, Special);\nconst ContStr = group(\n    \"([uU])?'([^\\n'\\\\\\\\]*(?:\\\\\\\\.[^\\n'\\\\\\\\]*)*)'\",\n    '([uU])?\"([^\\n\"\\\\\\\\]*(?:\\\\\\\\.[^\\n\"\\\\\\\\]*)*)\"'\n);\nconst PseudoToken = Whitespace + group(Number, Funny, ContStr, Name);\nconst NumberPattern = new RegExp(\"^\" + Number + \"$\");\nconst StringPattern = new RegExp(\"^\" + ContStr + \"$\");\nconst NamePattern = new RegExp(\"^\" + Name + \"$\");\nconst strip = new RegExp(\"^\" + Whitespace);\n\n// -----------------------------------------------------------------------------\n// Tokenize function\n// -----------------------------------------------------------------------------\n\n/**\n * Transform a string into a list of tokens\n *\n * @param {string} str\n * @returns {Token[]}\n */\nexport function tokenize(str) {\n    const tokens = [];\n    let max = str.length;\n    let start = 0;\n    let end = 0;\n    // /g flag makes repeated exec() have memory\n    const pseudoprog = new RegExp(PseudoToken, \"g\");\n    while (pseudoprog.lastIndex < max) {\n        const pseudomatch = pseudoprog.exec(str);\n        if (!pseudomatch) {\n            // if match failed on trailing whitespace, end tokenizing\n            if (/^\\s+$/.test(str.slice(end))) {\n                break;\n            }\n            throw new TokenizerError(\n                \"Failed to tokenize <<\" +\n                    str +\n                    \">> at index \" +\n                    (end || 0) +\n                    \"; parsed so far: \" +\n                    tokens\n            );\n        }\n        if (pseudomatch.index > end) {\n            if (str.slice(end, pseudomatch.index).trim()) {\n                throw new TokenizerError(\"Invalid expression\");\n            }\n        }\n        start = pseudomatch.index;\n        end = pseudoprog.lastIndex;\n        let token = str.slice(start, end).replace(strip, \"\");\n        if (NumberPattern.test(token)) {\n            tokens.push({\n                type: 0 /* Number */,\n                value: parseFloat(token),\n            });\n        } else if (StringPattern.test(token)) {\n            var m = StringPattern.exec(token);\n            tokens.push({\n                type: 1 /* String */,\n                value: decodeStringLiteral(m[3] !== undefined ? m[3] : m[5], !!(m[2] || m[4])),\n            });\n        } else if (symbols.has(token)) {\n            // transform 'not in' and 'is not' in a single token\n            if (token === \"in\" && tokens.length > 0 && tokens[tokens.length - 1].value === \"not\") {\n                token = \"not in\";\n                tokens.pop();\n            } else if (\n                token === \"not\" &&\n                tokens.length > 0 &&\n                tokens[tokens.length - 1].value === \"is\"\n            ) {\n                token = \"is not\";\n                tokens.pop();\n            }\n            tokens.push({\n                type: 2 /* Symbol */,\n                value: token,\n            });\n        } else if (constants.has(token)) {\n            tokens.push({\n                type: 4 /* Constant */,\n                value: token,\n            });\n        } else if (NamePattern.test(token)) {\n            tokens.push({\n                type: 3 /* Name */,\n                value: token,\n            });\n        } else {\n            throw new TokenizerError(\"Invalid expression\");\n        }\n    }\n    return tokens;\n}\n", "/** @odoo-module **/\n\nimport { bp } from \"./py_parser\";\nimport { PyDate, PyDateTime } from './py_date';\n\n// -----------------------------------------------------------------------------\n// Types\n// -----------------------------------------------------------------------------\n\n/**\n * @typedef { import(\"./py_parser\").AST } AST\n */\n\n// -----------------------------------------------------------------------------\n// Utils\n// -----------------------------------------------------------------------------\n\n/**\n * Represent any value as a primitive AST\n *\n * @param {any} value\n * @returns {AST}\n */\nexport function toPyValue(value) {\n    switch (typeof value) {\n        case \"string\":\n            return { type: 1 /* String */, value };\n        case \"number\":\n            return { type: 0 /* Number */, value };\n        case \"boolean\":\n            return { type: 2 /* Boolean */, value };\n        case \"object\":\n            if (Array.isArray(value)) {\n                return { type: 4 /* List */, value: value.map(toPyValue) };\n            } else if (value === null) {\n                return { type: 3 /* None */ };\n            } else if (value instanceof Date) {\n                return { type: 1, value: PyDateTime.convertDate(value) };\n            } else if (value instanceof PyDate || value instanceof PyDateTime) {\n                return { type: 1, value };\n            } else {\n                const content = {};\n                for (let key in value) {\n                    content[key] = toPyValue(value[key]);\n                }\n                return { type: 11 /* Dictionary */, value: content };\n            }\n        default:\n            throw new Error(\"Invalid type\");\n    }\n}\n\n/**\n * @param {AST} ast\n * @param {number} [lbp] left binding power\n * @return {string}\n */\nexport function formatAST(ast, lbp = 0) {\n    switch (ast.type) {\n        case 3 /* None */:\n            return \"None\";\n        case 1 /* String */:\n            return JSON.stringify(ast.value);\n        case 0 /* Number */:\n            return String(ast.value);\n        case 2 /* Boolean */:\n            return ast.value ? \"True\" : \"False\";\n        case 4 /* List */:\n            return `[${ast.value.map(formatAST).join(\", \")}]`;\n        case 6 /* UnaryOperator */:\n            if (ast.op === \"not\") {\n                return `not ` + formatAST(ast.right, 50);\n            }\n            return ast.op + formatAST(ast.right, 130);\n        case 7 /* BinaryOperator */: {\n            const abp = bp(ast.op);\n            const str = `${formatAST(ast.left, abp)} ${ast.op} ${formatAST(ast.right, abp)}`;\n            return abp < lbp ? `(${str})` : str;\n        }\n        case 11 /* Dictionary */: {\n            const pairs = [];\n            for (let k in ast.value) {\n                pairs.push(`\"${k}\": ${formatAST(ast.value[k])}`);\n            }\n            return `{` + pairs.join(\", \") + `}`;\n        }\n        case 10 /* Tuple */:\n            return `(${ast.value.map(formatAST).join(\", \")})`;\n        case 5 /* Name */:\n            return ast.value;\n        case 12 /* Lookup */: {\n            return `${formatAST(ast.target)}[${formatAST(ast.key)}]`;\n        }\n        case 13 /* If */: {\n            const { ifTrue, condition, ifFalse } = ast;\n            return `${formatAST(ifTrue)} if ${formatAST(condition)} else ${formatAST(ifFalse)}`;\n        }\n        case 14 /* BooleanOperator */: {\n            const abp = bp(ast.op);\n            const str = `${formatAST(ast.left, abp)} ${ast.op} ${formatAST(ast.right, abp)}`;\n            return abp < lbp ? `(${str})` : str;\n        }\n        case 15 /* ObjLookup */:\n            return `${formatAST(ast.obj, 150)}.${ast.key}`;\n        case 8 /* FunctionCall */: {\n            const args = ast.args.map(formatAST);\n            const kwargs = [];\n            for (let kwarg in ast.kwargs) {\n                kwargs.push(`${kwarg} = ${formatAST(ast.kwargs[kwarg])}`);\n            }\n            const argStr = args.concat(kwargs).join(\", \");\n            return `${formatAST(ast.fn)}(${argStr})`;\n        }\n    }\n    throw new Error(\"invalid expression: \" + ast);\n}\n\nexport const PY_DICT = Object.create(null);\n\n/**\n * @param {Object} obj\n * @returns {AST} a python dictionary\n */\nexport function toPyDict(obj) {\n    const result = Object.create(PY_DICT);\n    return Object.assign(result, obj);\n}\n", "/** @odoo-module **/\n\nconst { core } = owl;\nconst { EventBus } = core;\n\n// -----------------------------------------------------------------------------\n// Errors\n// -----------------------------------------------------------------------------\nexport class KeyNotFoundError extends Error {}\n\nexport class DuplicatedKeyError extends Error {}\n\n/**\n * Registry\n *\n * The Registry class is basically just a mapping from a string key to an object.\n * It is really not much more than an object. It is however useful for the\n * following reasons:\n *\n * 1. it let us react and execute code when someone add something to the registry\n *   (for example, the FunctionRegistry subclass this for this purpose)\n * 2. it throws an error when the get operation fails\n * 3. it provides a chained API to add items to the registry.\n */\nexport class Registry extends EventBus {\n    constructor() {\n        super();\n        this.content = {};\n        this.subRegistries = {};\n        this.elements = null;\n        this.entries = null;\n\n        this.on(\"UPDATE\", this, () => {\n            this.elements = null;\n            this.entries = null;\n        });\n    }\n\n    /**\n     * Add an entry (key, value) to the registry if key is not already used. If\n     * the parameter force is set to true, an entry with same key (if any) is replaced.\n     *\n     * Note that this also returns the registry, so another add method call can\n     * be chained\n     *\n     * @param {string} key\n     * @param {any} value\n     * @param {{force?: boolean, sequence?: number}} [options]\n     * @returns {Registry}\n     */\n    add(key, value, { force, sequence } = {}) {\n        if (!force && key in this.content) {\n            throw new DuplicatedKeyError(`Cannot add '${key}' in this registry: it already exists`);\n        }\n        let previousSequence;\n        if (force) {\n            const elem = this.content[key];\n            previousSequence = elem && elem[0];\n        }\n        sequence = sequence === undefined ? previousSequence || 50 : sequence;\n        this.content[key] = [sequence, value];\n        const payload = { operation: \"add\", key, value };\n        this.trigger(\"UPDATE\", payload);\n        return this;\n    }\n\n    /**\n     * Get an item from the registry\n     *\n     * @param {string} key\n     * @returns {any}\n     */\n    get(key, defaultValue) {\n        if (arguments.length < 2 && !(key in this.content)) {\n            throw new KeyNotFoundError(`Cannot find ${key} in this registry!`);\n        }\n        const info = this.content[key];\n        return info ? info[1] : defaultValue;\n    }\n\n    /**\n     * Check the presence of a key in the registry\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    contains(key) {\n        return key in this.content;\n    }\n\n    /**\n     * Get a list of all elements in the registry. Note that it is ordered\n     * according to the sequence numbers.\n     *\n     * @returns {any[]}\n     */\n    getAll() {\n        if (!this.elements) {\n            const content = Object.values(this.content).sort((el1, el2) => el1[0] - el2[0]);\n            this.elements = content.map((elem) => elem[1]);\n        }\n        return this.elements.slice();\n    }\n\n    /**\n     * Return a list of all entries, ordered by sequence numbers.\n     *\n     * @returns {[string, any][]}\n     */\n    getEntries() {\n        if (!this.entries) {\n            const entries = Object.entries(this.content).sort((el1, el2) => el1[1][0] - el2[1][0]);\n            this.entries = entries.map(([str, elem]) => [str, elem[1]]);\n        }\n        return this.entries.slice();\n    }\n\n    /**\n     * Remove an item from the registry\n     *\n     * @param {string} key\n     */\n    remove(key) {\n        const value = this.content[key];\n        delete this.content[key];\n        const payload = { operation: \"delete\", key, value };\n        this.trigger(\"UPDATE\", payload);\n    }\n\n    /**\n     * Open a sub registry (and create it if necessary)\n     *\n     * @param {string} subcategory\n     * @returns {Registry}\n     */\n    category(subcategory) {\n        if (!(subcategory in this.subRegistries)) {\n            this.subRegistries[subcategory] = new Registry();\n        }\n        return this.subRegistries[subcategory];\n    }\n}\n\nexport const registry = new Registry();\n", "/** @odoo-module **/\n\nimport { browser } from \"./browser/browser\";\nimport { registry } from \"./registry\";\nimport { scrollTo } from \"./utils/scrolling\";\n\nexport const scrollerService = {\n    start(env) {\n        /**\n         * Listen to click event to allow having links with href towards an anchor.\n         * Since odoo use hashtag to represent the current state of the view, we can't\n         * easily distinguish between a link towards an anchor and a link towards\n         * another view/state. If we want to navigate towards an anchor, we must not\n         * change the hash of the url otherwise we will be redirected to the app switcher\n         * instead To check if we have an anchor, first check if we have an href\n         * attribute starting with #. Try to find a element in the DOM using JQuery\n         * selector. If we have a match, it means that it is probably a link to an\n         * anchor, so we jump to that anchor.\n         *\n         * @param {MouseEvent} ev\n         */\n        browser.addEventListener(\"click\", (ev) => {\n            const link = ev.target.closest(\"a\");\n            if (!link) {\n                return;\n            }\n            const disableAnchor = link.attributes.getNamedItem(\"disable_anchor\");\n            if (disableAnchor && disableAnchor.value === \"true\") {\n                return;\n            }\n            const href = link.attributes.getNamedItem(\"href\");\n            if (href) {\n                if (href.value[0] === \"#\") {\n                    if (href.value.length === 1) {\n                        ev.preventDefault(); // single hash in href are just a way to activate A-tags node\n                        return;\n                    }\n                    let matchingEl = null;\n                    try {\n                        matchingEl = document.querySelector(`.o_content #${href.value.substr(1)}`);\n                    } catch (e) {\n                        // Invalid selector: not an anchor anyway\n                    }\n                    const triggerEv = new CustomEvent(\"anchor-link-clicked\", {\n                        detail: {\n                            element: matchingEl,\n                            id: href.value,\n                            originalEv: ev,\n                        },\n                    });\n                    env.bus.trigger(\"SCROLLER:ANCHOR_LINK_CLICKED\", triggerEv);\n                    if (matchingEl && !triggerEv.defaultPrevented) {\n                        ev.preventDefault();\n                        scrollTo(matchingEl, { isAnchor: true });\n                    }\n                }\n            }\n        });\n    },\n};\n\nregistry.category(\"services\").add(\"scroller\", scrollerService);\n", "/** @odoo-module **/\n\nconst { Component } = owl;\n\nexport class Tooltip extends Component {}\nTooltip.template = \"web.Tooltip\";\nTooltip.props = {\n    tooltip: { type: String, optional: true },\n    template: { type: String, optional: true },\n    info: { optional: true },\n};\n", "/** @odoo-module **/\n\nimport { browser } from \"@web/core/browser/browser\";\nimport { useEffect, useListener } from \"@web/core/utils/hooks\";\nimport { usePopover } from \"@web/core/popover/popover_hook\";\nimport { Tooltip } from \"./tooltip\";\n\n/**\n * The useTooltip hook allows to display custom tooltips on every elements with\n * a \"data-tooltip\" attribute inside the Component using the hook. This attribute\n * can be set on elements for which we prefer a custom tooltip instead of the\n * native one displaying the value of the \"title\" attribute.\n *\n * Usage (with a parent somewhere using the useTooltip hook):\n *   <button data-tooltip=\"This is a tooltip\">Do something</button>\n *\n * The ideal position of the tooltip can be specified thanks to the attribute\n * \"data-tooltip-position\":\n *   <button data-tooltip=\"This is a tooltip\" data-tooltip-position=\"left\">Do something</button>\n *\n * For advanced tooltips containing dynamic and/or html content, the\n * \"data-tooltip-template\" and \"data-tooltip-info\" attributes can be used.\n * For example, let's suppose the following qweb template:\n *   <t t-name=\"some_template\">\n *     <ul>\n *       <li>info.x</li>\n *       <li>info.y</li>\n *     </ul>\n *   </t>\n * This template can then be used in a tooltip as follows:\n *   <button data-tooltip-template=\"some_template\" data-tooltip-info=\"info\">Do something</button>\n * with \"info\" being a stringified object with two keys \"x\" and \"y\".\n */\nconst OPEN_DELAY = 400;\nconst CLOSE_DELAY = 200;\nexport function useTooltip() {\n    const popover = usePopover();\n    let openTooltipTimeout;\n    let closeTooltip;\n    let target = null;\n\n    /**\n     * Closes the currently opened tooltip if any, or prevent it from opening.\n     */\n    function cleanup() {\n        browser.clearTimeout(openTooltipTimeout);\n        if (closeTooltip) {\n            closeTooltip();\n        }\n    }\n\n    /**\n     * Opens the tooltip after a delay, if the event's target has a data-tooltip\n     * attribute.\n     *\n     * @param {MouseEvent} ev a \"mouseenter\" event\n     */\n    function onMouseEnter(ev) {\n        const dataset = ev.target.dataset;\n        const tooltip = dataset.tooltip;\n        let template, info;\n        if (\"tooltipTemplate\" in dataset) {\n            template = dataset.tooltipTemplate;\n            info = dataset.tooltipInfo ? JSON.parse(dataset.tooltipInfo) : null;\n        }\n        if (tooltip || template) {\n            cleanup();\n            target = ev.target;\n            openTooltipTimeout = browser.setTimeout(() => {\n                const position = dataset.tooltipPosition;\n                closeTooltip = popover.add(\n                    target,\n                    Tooltip,\n                    { tooltip, template, info },\n                    { position }\n                );\n            }, OPEN_DELAY);\n        }\n    }\n\n    // Track mouse position to be able to detect that we are no longer hovering\n    // the target, thus that we should close the tooltip\n    let positionX;\n    let positionY;\n    useListener(\"mousemove\", (ev) => {\n        positionX = ev.x;\n        positionY = ev.y;\n    });\n\n    // Regularly check that the target is still in the DOM and we're still\n    // hovering it, because if not, we have to close the tooltip\n    useEffect(\n        () => {\n            const interval = browser.setInterval(() => {\n                if (!target) {\n                    return;\n                }\n                if (!document.body.contains(target)) {\n                    return cleanup(); // target is no longer in the DOM\n                }\n                const targetRect = target.getBoundingClientRect();\n                if (\n                    positionX < targetRect.left ||\n                    positionX > targetRect.right ||\n                    positionY < targetRect.top ||\n                    positionY > targetRect.bottom\n                ) {\n                    return cleanup(); // mouse is no longer hovering the target\n                }\n            }, CLOSE_DELAY);\n            return () => browser.clearInterval(interval);\n        },\n        () => []\n    );\n\n    // Listen (using event delegation) to \"mouseenter\" events on all nodes with\n    // the \"data-tooltip\" or \"data-tooltip-template\" attribute, to open the tooltip.\n    const selector = \"[data-tooltip], [data-tooltip-template]\";\n    useListener(\"mouseenter\", selector, onMouseEnter, { capture: true });\n}\n", "/** @odoo-module **/\n\nimport { browser } from \"@web/core/browser/browser\";\n\nconst { Component, tags, useState } = owl;\n\nexport class BlockUI extends Component {\n    setup() {\n        this.messagesByDuration = [\n            { time: 20, l1: this.env._t(\"Loading...\") },\n            { time: 40, l1: this.env._t(\"Still loading...\") },\n            {\n                time: 60,\n                l1: this.env._t(\"Still loading...\"),\n                l2: this.env._t(\"Please be patient.\"),\n            },\n            {\n                time: 180,\n                l1: this.env._t(\"Don't leave yet,\"),\n                l2: this.env._t(\"it's still loading...\"),\n            },\n            {\n                time: 120,\n                l1: this.env._t(\"You may not believe it,\"),\n                l2: this.env._t(\"but the application is actually loading...\"),\n            },\n            {\n                time: 3180,\n                l1: this.env._t(\"Take a minute to get a coffee,\"),\n                l2: this.env._t(\"because it's loading...\"),\n            },\n            {\n                time: null,\n                l1: this.env._t(\n                    \"Maybe you should consider reloading the application by pressing F5...\"\n                ),\n            },\n        ];\n        this.state = useState({\n            blockUI: false,\n            line1: \"\",\n            line2: \"\",\n        });\n\n        this.props.bus.on(\"BLOCK\", this, this.block);\n        this.props.bus.on(\"UNBLOCK\", this, this.unblock);\n    }\n\n    replaceMessage(index) {\n        const message = this.messagesByDuration[index];\n        this.state.line1 = message.l1;\n        this.state.line2 = message.l2 || \"\";\n        if (message.time !== null) {\n            this.msgTimer = browser.setTimeout(() => {\n                this.replaceMessage(index + 1);\n            }, message.time * 1000);\n        }\n    }\n\n    block() {\n        this.state.blockUI = true;\n        this.replaceMessage(0);\n    }\n\n    unblock() {\n        this.state.blockUI = false;\n        clearTimeout(this.msgTimer);\n        this.state.line1 = \"\";\n        this.state.line2 = \"\";\n    }\n}\n\nBlockUI.template = tags.xml`\n    <div t-att-class=\"state.blockUI ? 'o_blockUI' : ''\">\n      <t t-if=\"state.blockUI\">\n        <div class=\"o_spinner\">\n            <img src=\"/web/static/img/spin.png\" alt=\"Loading...\"/>\n        </div>\n        <div class=\"o_message\">\n            <t t-raw=\"state.line1\"/> <br/>\n            <t t-raw=\"state.line2\"/>\n        </div>\n      </t>\n    </div>`;\n", "/** @odoo-module **/\n\nimport { useEffect, useService } from \"@web/core/utils/hooks\";\nimport { registry } from \"@web/core/registry\";\nimport { debounce } from \"@web/core/utils/timing\";\nimport { BlockUI } from \"./block_ui\";\nimport { browser } from \"@web/core/browser/browser\";\n\nconst { Component, core, hooks } = owl;\nconst { EventBus } = core;\nconst { useRef } = hooks;\n\nexport const SIZES = { XS: 0, VSM: 1, SM: 2, MD: 3, LG: 4, XL: 5, XXL: 6 };\n\n/**\n * This hook will set the UI active element\n * when the caller component will mount/unmount.\n *\n * The caller component could pass a `t-ref` value of its template\n * to delegate the UI active element to another element than itself.\n * In that case, it is mandatory that the referenced element is fixed and\n * not dynamically attached in/detached from the DOM (e.g. with t-if directive).\n *\n * @param {string} refName\n */\nexport function useActiveElement(refName = null) {\n    const uiService = useService(\"ui\");\n    const owner = refName ? useRef(refName) : Component.current;\n    useEffect(\n        () => {\n            uiService.activateElement(owner.el);\n            return () => uiService.deactivateElement(owner.el);\n        },\n        () => []\n    );\n}\n\nexport const uiService = {\n    start(env) {\n        let ui = {};\n\n        // block/unblock code\n        const bus = new EventBus();\n        registry.category(\"main_components\").add(\"BlockUI\", { Component: BlockUI, props: { bus } });\n\n        let blockCount = 0;\n        function block() {\n            blockCount++;\n            if (blockCount === 1) {\n                bus.trigger(\"BLOCK\");\n            }\n        }\n        function unblock() {\n            blockCount--;\n            if (blockCount < 0) {\n                console.warn(\n                    \"Unblock ui was called more times than block, you should only unblock the UI if you have previously blocked it.\"\n                );\n                blockCount = 0;\n            }\n            if (blockCount === 0) {\n                bus.trigger(\"UNBLOCK\");\n            }\n        }\n\n        Object.assign(ui, {\n            bus,\n            block,\n            unblock,\n        });\n\n        Object.defineProperty(ui, \"isBlocked\", {\n            get() {\n                return blockCount > 0;\n            },\n        });\n\n        // UI active element code\n        let activeElems = [document];\n\n        function activateElement(el) {\n            activeElems.push(el);\n            bus.trigger(\"active-element-changed\", el);\n        }\n        function deactivateElement(el) {\n            activeElems = activeElems.filter((x) => x !== el);\n            bus.trigger(\"active-element-changed\", ui.activeElement);\n        }\n        function getActiveElementOf(el) {\n            for (const activeElement of [...activeElems].reverse()) {\n                if (activeElement.contains(el)) {\n                    return activeElement;\n                }\n            }\n        }\n\n        Object.assign(ui, {\n            activateElement,\n            deactivateElement,\n            getActiveElementOf,\n        });\n        Object.defineProperty(ui, \"activeElement\", {\n            get() {\n                return activeElems[activeElems.length - 1];\n            },\n        });\n\n        // window size handling\n        const MEDIAS = [\n            window.matchMedia(\"(max-width: 474px)\"),\n            window.matchMedia(\"(min-width: 475px) and (max-width: 575px)\"),\n            window.matchMedia(\"(min-width: 576px) and (max-width: 767px)\"),\n            window.matchMedia(\"(min-width: 768px) and (max-width: 991px)\"),\n            window.matchMedia(\"(min-width: 992px) and (max-width: 1199px)\"),\n            window.matchMedia(\"(min-width: 1200px) and (max-width: 1533px)\"),\n            window.matchMedia(\"(min-width: 1534px)\"),\n        ];\n        function getSize() {\n            return MEDIAS.findIndex((media) => media.matches);\n        }\n\n        // listen to media query status changes\n        function updateSize() {\n            ui.size = getSize();\n        }\n        browser.addEventListener(\"resize\", debounce(updateSize, 100));\n\n        Object.assign(ui, {\n            size: getSize(),\n        });\n        Object.defineProperty(ui, \"isSmall\", {\n            get() {\n                return ui.size <= SIZES.SM;\n            },\n        });\n        Object.defineProperty(env, \"isSmall\", {\n            get() {\n                return ui.size <= SIZES.SM;\n            },\n        });\n\n        return ui;\n    },\n};\n\nregistry.category(\"services\").add(\"ui\", uiService);\n", "/** @odoo-module **/\n\nimport { registry } from \"./registry\";\nimport { session } from \"@web/session\";\n\nexport const userService = {\n    dependencies: [\"rpc\"],\n    async: [\"hasGroup\"],\n    start(env, { rpc }) {\n        const groupProms = {};\n\n        const context = {\n            ...session.user_context,\n            uid: session.uid,\n        };\n        return {\n            get context() {\n                return Object.assign({}, context);\n            },\n            removeFromContext(key) {\n                delete context[key];\n            },\n            updateContext(update) {\n                Object.assign(context, update);\n            },\n            hasGroup(group) {\n                if (!context.uid) {\n                    return Promise.resolve(false);\n                }\n                if (!groupProms[group]) {\n                    groupProms[group] = rpc(\"/web/dataset/call_kw/res.users/has_group\", {\n                        model: \"res.users\",\n                        method: \"has_group\",\n                        args: [group],\n                        kwargs: { context },\n                    });\n                }\n                return groupProms[group];\n            },\n            name: session.name,\n            userName: session.username,\n            isAdmin: session.is_admin,\n            isSystem: session.is_system,\n            partnerId: session.partner_id,\n            home_action_id: session.home_action_id,\n            showEffect: session.show_effect,\n            get userId() {\n                return context.uid;\n            },\n            get lang() {\n                return context.lang;\n            },\n            get tz() {\n                return context.tz;\n            },\n            get db() {\n                const res = {\n                    name: session.db,\n                };\n                if (\"dbuuid\" in session) {\n                    res.uuid = session.dbuuid;\n                }\n                return res;\n            },\n        };\n    },\n};\n\nregistry.category(\"services\").add(\"user\", userService);\n", "/** @odoo-module **/\n\n/**\n * Same values returned as those returned by cartesian function for case n = 0\n * and n > 1. For n = 1, brackets are put around the unique parameter elements.\n *\n * @returns {Array}\n */\nfunction _cartesian() {\n    const args = Array.prototype.slice.call(arguments);\n    if (args.length === 0) {\n        return [undefined];\n    }\n    const firstArray = args[0].map(function (elem) {\n        return [elem];\n    });\n    if (args.length === 1) {\n        return firstArray;\n    }\n    const productOfOtherArrays = _cartesian.apply(null, args.slice(1));\n    return firstArray.reduce(function (acc, elem) {\n        return acc.concat(\n            productOfOtherArrays.map(function (tuple) {\n                return elem.concat(tuple);\n            })\n        );\n    }, []);\n}\n\n/**\n * Helper function returning an extraction handler to use on array elements to\n * return a certain attribute or mutated form of the element.\n *\n * @private\n * @param {string | function} [criterion]\n * @returns {(element: any) => any}\n */\nfunction _getExtractorFrom(criterion) {\n    if (criterion) {\n        switch (typeof criterion) {\n            case \"string\":\n                return (element) => element[criterion];\n            case \"function\":\n                return criterion;\n            default:\n                throw new Error(\n                    `Expected criterion of type 'string' or 'function' and got '${typeof criterion}'`\n                );\n        }\n    } else {\n        return (element) => element;\n    }\n}\n\n/**\n * Returns an object holding different groups defined by a given criterion\n * or a default one. Each group is a subset of the original given list.\n * The given criterion can either be:\n * - a string: a property name on the list elements which value will be the\n * group name,\n * - a function: a handler that will return the group name from a given\n * element.\n *\n * @param {any[]} array\n * @param {string | function} [criterion]\n * @returns {Object}\n */\nexport function groupBy(array, criterion) {\n    const extract = _getExtractorFrom(criterion);\n    const groups = {};\n    for (const element of array) {\n        const group = String(extract(element));\n        if (!(group in groups)) {\n            groups[group] = [];\n        }\n        groups[group].push(element);\n    }\n    return groups;\n}\n\n/**\n * Return a shallow copy of a given array sorted by a given criterion or a default one.\n * The given criterion can either be:\n * - a string: a property name on the array elements returning the sortable primitive\n * - a function: a handler that will return the sortable primitive from a given element.\n * The default order is ascending ('asc'). It can be modified by setting the extra param 'order' to 'desc'.\n *\n * @param {any[]} array\n * @param {string | function} [criterion]\n * @param {\"asc\" | \"desc\"} [order=\"asc\"]\n * @returns {any[]}\n */\nexport function sortBy(array, criterion, order = \"asc\") {\n    const extract = _getExtractorFrom(criterion);\n    return array.slice().sort((elA, elB) => {\n        const a = extract(elA);\n        const b = extract(elB);\n        let result;\n        if (isNaN(a) && isNaN(b)) {\n            result = a > b ? 1 : a < b ? -1 : 0;\n        } else {\n            result = a - b;\n        }\n        return order === \"asc\" ? result : -result;\n    });\n}\n\n/**\n * Returns an array containing all the elements of arrayA\n * that are not in arrayB and vice-versa.\n *\n * @param {any[]} arrayA\n * @param {any[]} arrayB\n * @returns an array containing all the elements of arrayA\n * that are not in arrayB and vice-versa.\n */\nexport function symmetricalDifference(arrayA, arrayB) {\n    return arrayA\n        .filter((id) => !arrayB.includes(id))\n        .concat(arrayB.filter((id) => !arrayA.includes(id)));\n}\n\n/**\n * Returns the product of any number n of arrays.\n * The internal structures of their elements is preserved.\n * For n = 1, no brackets are put around the unique parameter elements\n * For n = 0, [undefined] is returned since it is the unit\n * of the cartesian product (up to isomorphism).\n *\n * @returns {Array}\n */\nexport function cartesian() {\n    const args = Array.prototype.slice.call(arguments);\n    if (args.length === 0) {\n        return [undefined];\n    } else if (args.length === 1) {\n        return args[0];\n    } else {\n        return _cartesian.apply(null, args);\n    }\n}\n\n/**\n * Returns all initial sections of a given array, e.g. for [1, 2] the array\n * [[], [1], [1, 2]] is returned.\n *\n * @param {Array} array\n * @returns {Array[]}\n */\nexport function sections(array) {\n    const sections = [];\n    for (let i = 0; i < array.length + 1; i++) {\n        sections.push(array.slice(0, i));\n    }\n    return sections;\n}\n", "/** @odoo-module **/\n\nconst { Component, tags } = owl;\n\nexport class NotUpdatable extends Component {\n    shouldUpdate() {\n        return false;\n    }\n}\nNotUpdatable.template = tags.xml`<t t-slot=\"default\" />`;\n\nexport class ErrorHandler extends Component {\n    catchError(error) {\n        if (this.props.onError) {\n            this.props.onError(error);\n        }\n    }\n}\nErrorHandler.template = tags.xml`<t t-slot=\"default\" />`;\n", "/** @odoo-module **/\n\n/**\n * KeepLast is a concurrency primitive that manages a list of tasks, and only\n * keeps the last task active.\n */\nexport class KeepLast {\n    constructor() {\n        this._id = 0;\n    }\n    /**\n     * Register a new task\n     *\n     * @template T\n     * @param {Promise<T>} promise\n     * @returns {Promise<T>}\n     */\n    add(promise) {\n        this._id++;\n        const currentId = this._id;\n        return new Promise((resolve, reject) => {\n            promise\n                .then((value) => {\n                    if (this._id === currentId) {\n                        resolve(value);\n                    }\n                })\n                .catch((reason) => {\n                    // not sure about this part\n                    if (this._id === currentId) {\n                        reject(reason);\n                    }\n                });\n        });\n    }\n}\n\n/**\n * A (Odoo) mutex is a primitive for serializing computations.  This is\n * useful to avoid a situation where two computations modify some shared\n * state and cause some corrupted state.\n *\n * Imagine that we have a function to fetch some data _load(), which returns\n * a promise which resolves to something useful. Now, we have some code\n * looking like this::\n *\n *      return this._load().then(function (result) {\n *          this.state = result;\n *      });\n *\n * If this code is run twice, but the second execution ends before the\n * first, then the final state will be the result of the first call to\n * _load.  However, if we have a mutex::\n *\n *      this.mutex = new Mutex();\n *\n * and if we wrap the calls to _load in a mutex::\n *\n *      return this.mutex.exec(function() {\n *          return this._load().then(function (result) {\n *              this.state = result;\n *          });\n *      });\n *\n * Then, it is guaranteed that the final state will be the result of the\n * second execution.\n *\n * A Mutex has to be a class, and not a function, because we have to keep\n * track of some internal state.\n */\nexport class Mutex {\n    constructor() {\n        this._lock = Promise.resolve();\n        this._queueSize = 0;\n        this._unlockedProm = undefined;\n        this._unlock = undefined;\n    }\n    /**\n     * Add a computation to the queue, it will be executed as soon as the\n     * previous computations are completed.\n     *\n     * @param {function} action a function which may return a Promise\n     * @returns {Promise}\n     */\n    async exec(action) {\n        const currentLock = this._lock;\n        let result;\n        this._queueSize++;\n        this._unlockedProm =\n            this._unlockedProm ||\n            new Promise((resolve) => {\n                this._unlock = resolve;\n            });\n        this._lock = new Promise((unlockCurrent) => {\n            currentLock.then(() => {\n                result = action();\n                const always = (returnedResult) => {\n                    unlockCurrent();\n                    this._queueSize--;\n                    if (this._queueSize === 0) {\n                        this._unlockedProm = undefined;\n                        this._unlock();\n                    }\n                    return returnedResult;\n                };\n                Promise.resolve(result).then(always).guardedCatch(always);\n            });\n        });\n        await this._lock;\n        return result;\n    }\n    /**\n     * @returns {Promise} resolved as soon as the Mutex is unlocked\n     *   (directly if it is currently idle)\n     */\n    getUnlockedDef() {\n        return this._unlockedProm || Promise.resolve();\n    }\n}\n\n/**\n * Race is a class designed to manage concurrency problems inspired by\n * Promise.race(), except that it is dynamic in the sense that promises can be\n * added anytime to a Race instance. When a promise is added, it returns another\n * promise which resolves as soon as a promise, among all added promises, is\n * resolved. The race is thus over. From that point, a new race will begin the\n * next time a promise will be added.\n */\nexport class Race {\n    constructor() {\n        this.currentProm = null;\n        this.currentPromResolver = null;\n        this.currentPromRejecter = null;\n    }\n    /**\n     * Register a new promise. If there is an ongoing race, the promise is added\n     * to that race. Otherwise, it starts a new race. The returned promise\n     * resolves as soon as the race is over, with the value of the first resolved\n     * promise added to the race.\n     *\n     * @param {Promise} promise\n     * @returns {Promise}\n     */\n    add(promise) {\n        if (!this.currentProm) {\n            this.currentProm = new Promise((resolve, reject) => {\n                this.currentPromResolver = (value) => {\n                    this.currentProm = null;\n                    this.currentPromResolver = null;\n                    this.currentPromRejecter = null;\n                    resolve(value);\n                };\n                this.currentPromRejecter = (error) => {\n                    this.currentProm = null;\n                    this.currentPromResolver = null;\n                    this.currentPromRejecter = null;\n                    reject(error);\n                };\n            });\n        }\n        promise.then(this.currentPromResolver).catch(this.currentPromRejecter);\n        return this.currentProm;\n    }\n    /**\n     * @returns {Promise|null} promise resolved as soon as the race is over, or\n     *   null if there is no race ongoing)\n     */\n    getCurrentProm() {\n        return this.currentProm;\n    }\n}\n", "/** @odoo-module **/\n\n/**\n * Creates a version of the function that's memoized on the value of its first\n * argument, if any.\n *\n * @template T, U\n * @param {(arg: T) => U} func the function to memoize\n * @returns {(arg: T) => U} a memoized version of the original function\n */\nexport function memoize(func) {\n    const cache = new Map();\n    const funcName = func.name ? func.name + \" (memoized)\" : \"memoized\";\n    return {\n        [funcName](...args) {\n            if (!cache.has(args[0])) {\n                cache.set(args[0], func(...args));\n            }\n            return cache.get(...args);\n        },\n    }[funcName];\n}\n", "/** @odoo-module **/\n\nimport { SERVICES_METADATA } from \"@web/env\";\n\nconst { onMounted, onWillPatch, onPatched, onWillUnmount, useComponent } = owl.hooks;\n\n/**\n * This file contains various custom hooks.\n * Their inner working is rather simple:\n * Each custom hook simply hooks itself to any number of owl lifecycle hooks.\n * You can then use them just like an owl hook in any Component\n * e.g.:\n * import { useBus } from \"@web/core/utils/hooks\";\n * ...\n * setup() {\n *    ...\n *    useBus(someBus, someEvent, callback)\n *    ...\n * }\n */\n\n// -----------------------------------------------------------------------------\n// useAutofocus\n// -----------------------------------------------------------------------------\n\n/**\n * Focus a given selector as soon as it appears in the DOM and if it was not\n * displayed before. If the selected target is an input|textarea, set the selection\n * at the end.\n *\n * @param {Object} [params]\n * @param {string} [params.selector='autofocus'] default: select the first element\n *                 with an `autofocus` attribute.\n * @returns {Function} function that forces the focus on the next update if visible.\n */\nexport function useAutofocus(params = {}) {\n    const comp = useComponent();\n    // Prevent autofocus in mobile\n    if (comp.env.isSmall) {\n        return () => {};\n    }\n    const selector = params.selector || \"[autofocus]\";\n    let forceFocusCount = 0;\n    useEffect(\n        function autofocus() {\n            const target = comp.el.querySelector(selector);\n            if (target) {\n                target.focus();\n                if ([\"INPUT\", \"TEXTAREA\"].includes(target.tagName) && target.type !== 'number') {\n                    const inputEl = target;\n                    inputEl.selectionStart = inputEl.selectionEnd = inputEl.value.length;\n                }\n            }\n        },\n        () => [forceFocusCount]\n    );\n\n    return function focusOnUpdate() {\n        forceFocusCount++; // force the effect to rerun on next patch\n    };\n}\n\n// -----------------------------------------------------------------------------\n// useBus\n// -----------------------------------------------------------------------------\n\n/**\n * Ensures a bus event listener is attached and cleared the proper way.\n *\n * @param {EventBus} bus\n * @param {string} eventName\n * @param {Callback} callback\n */\nexport function useBus(bus, eventName, callback) {\n    const component = useComponent();\n    useEffect(\n        () => {\n            bus.on(eventName, component, callback);\n            return () => bus.off(eventName, component);\n        },\n        () => []\n    );\n}\n\n// -----------------------------------------------------------------------------\n// useEffect\n// -----------------------------------------------------------------------------\n\nconst NO_OP = () => {};\n/**\n * @callback Effect\n * @param {...any} dependencies the dependencies computed by computeDependencies\n * @returns {void|(()=>void)} a cleanup function that reverses the side\n *      effects of the effect callback.\n */\n\n/**\n * This hook will run a callback when a component is mounted and patched, and\n * will run a cleanup function before patching and before unmounting the\n * the component.\n *\n * @param {Effect} effect the effect to run on component mount and/or patch\n * @param {()=>any[]} [computeDependencies=()=>[NaN]] a callback to compute\n *      dependencies that will decide if the effect needs to be cleaned up and\n *      run again. If the dependencies did not change, the effect will not run\n *      again. The default value returns an array containing only NaN because\n *      NaN !== NaN, which will cause the effect to rerun on every patch.\n */\nexport function useEffect(effect, computeDependencies = () => [NaN]) {\n    let cleanup, dependencies;\n    onMounted(() => {\n        dependencies = computeDependencies();\n        cleanup = effect(...dependencies) || NO_OP;\n    });\n\n    let shouldReapplyOnPatch = false;\n    onWillPatch(() => {\n        const newDeps = computeDependencies();\n        shouldReapplyOnPatch = newDeps.some((val, i) => val !== dependencies[i]);\n        if (shouldReapplyOnPatch) {\n            cleanup();\n            dependencies = newDeps;\n        }\n    });\n    onPatched(() => {\n        if (shouldReapplyOnPatch) {\n            cleanup = effect(...dependencies) || NO_OP;\n        }\n    });\n\n    onWillUnmount(() => cleanup());\n}\n\n// -----------------------------------------------------------------------------\n// useListener\n// -----------------------------------------------------------------------------\n\n/**\n * The useListener hook offers an alternative to Owl's classical event\n * registration mechanism (with attribute 't-on-eventName' in xml).\n *\n * It is especially useful for abstract components, meant to be extended by\n * specific ones. If those abstract components need to define event handlers,\n * but don't have any template (because the template completely depends on\n * specific cases), then using the 't-on' mechanism isn't adequate, as the\n * handlers would be lost by the template override. In this case, using this\n * hook instead is more convenient.\n *\n * Usage: like all Owl hooks, this function has to be called in the\n * constructor of an Owl component:\n *\n *   useListener('click', () => { console.log('clicked'); });\n *\n * It also allows to do event delegation, by specifying a native query selector\n * as second argument. In this case, the handler is only called if the event\n * is triggered on an element matching the given selector.\n *\n *   useListener('click', 'button', () => { console.log('clicked'); });\n *\n * Note: components that alter the event's target (e.g. Portal) are not\n * expected to behave as expected with event delegation.\n *\n * @param {string} eventName the name of the event\n * @param {string} [querySelector] a JS native selector for event delegation\n * @param {function} handler the event handler (will be bound to the component)\n * @param {Object} [options] to be passed to addEventListener as options.\n *   Useful for listening in the capture phase\n */\nexport function useListener(eventName, querySelector, handler, options = {}) {\n    if (typeof arguments[1] !== \"string\") {\n        querySelector = null;\n        handler = arguments[1];\n        options = arguments[2] || {};\n    }\n    if (typeof handler !== \"function\") {\n        throw new Error(\"The handler must be a function\");\n    }\n\n    const comp = useComponent();\n    let boundHandler;\n    if (querySelector) {\n        boundHandler = function (ev) {\n            let el = ev.target;\n            let target;\n            while (el && !target) {\n                if (el.matches(querySelector)) {\n                    target = el;\n                } else if (el === comp.el) {\n                    el = null;\n                } else {\n                    el = el.parentElement;\n                }\n            }\n            if (el) {\n                handler.call(comp, ev);\n            }\n        };\n    } else {\n        boundHandler = handler.bind(comp);\n    }\n    useEffect(\n        () => {\n            comp.el.addEventListener(eventName, boundHandler, options);\n            return () => {\n                comp.el.removeEventListener(eventName, boundHandler, options);\n            };\n        },\n        () => []\n    );\n}\n\n// -----------------------------------------------------------------------------\n// useService\n// -----------------------------------------------------------------------------\n\nfunction _protectMethod(component, caller, fn) {\n    return async (...args) => {\n        if (component.__owl__.status === 5 /* DESTROYED */) {\n            throw new Error(\"Component is destroyed\");\n        }\n        const result = await fn.call(caller, ...args);\n        return component.__owl__.status === 5 ? new Promise(() => {}) : result;\n    };\n}\n\n/**\n * Import a service into a component\n *\n * @param {string} serviceName\n * @returns {any}\n */\nexport function useService(serviceName) {\n    const component = useComponent();\n    const { services } = component.env;\n    if (!(serviceName in services)) {\n        throw new Error(`Service ${serviceName} is not available`);\n    }\n    const service = services[serviceName];\n    if (serviceName in SERVICES_METADATA) {\n        if (service instanceof Function) {\n            return _protectMethod(component, null, service);\n        } else {\n            const methods = SERVICES_METADATA[serviceName];\n            const result = Object.create(service);\n            for (let method of methods) {\n                result[method] = _protectMethod(component, service, service[method]);\n            }\n            return result;\n        }\n    }\n    return service;\n}\n\n/**\n * Executes \"callback\" when the component is being destroyed\n * @param  {Function} callback\n */\nexport function onDestroyed(callback) {\n    const component = useComponent();\n    const _destroy = component.__destroy;\n    component.__destroy = (...args) => {\n        _destroy.call(component, ...args);\n        // callback is called after super to guarantee the component is actually destroyed\n        callback();\n    };\n}\n", "/** @odoo-module **/\n\n/**\n * @param {Number} value\n * @param {Number} comparisonValue\n * @returns {Number}\n */\nexport function computeVariation(value, comparisonValue) {\n    if (isNaN(value) || isNaN(comparisonValue)) {\n        return NaN;\n    }\n    if (comparisonValue === 0) {\n        if (value === 0) {\n            return 0;\n        } else if (value > 0) {\n            return 1;\n        } else {\n            return -1;\n        }\n    }\n    return (value - comparisonValue) / Math.abs(comparisonValue);\n}\n", "/** @odoo-module **/\n\n/**\n * Shallow compares two objects.\n */\nexport function shallowEqual(obj1, obj2) {\n    const obj1Keys = Object.keys(obj1);\n    return (\n        obj1Keys.length === Object.keys(obj2).length &&\n        obj1Keys.every((key) => obj1[key] === obj2[key])\n    );\n}\n\n/**\n * Deep copies an object. As it relies on JSON this function as some limitations\n * - no support for circular objects\n * - no support for specific classes, that will at best be lost and at worst crash (Map, Set etc...)\n * @param  {Object} An object that is fully JSON stringifiable\n * @return {Object}\n */\nexport function deepCopy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n", "/** @odoo-module **/\n\nconst patchMap = new WeakMap();\n\n/**\n * Patch an object\n *\n * If the intent is to patch a class, don't forget to patch the prototype, unless\n * you want to patch static properties/methods.\n *\n * @param {Object} obj Object to patch\n * @param {string} patchName\n * @param {Object} patchValue\n * @param {{pure?: boolean}} [options]\n */\nexport function patch(obj, patchName, patchValue, options = {}) {\n    if (typeof patchName !== \"string\") {\n        throw new Error(\"Incorrect use of patch: second argument should be the patchName\");\n    }\n    const pure = Boolean(options.pure);\n    if (!patchMap.has(obj)) {\n        patchMap.set(obj, {\n            original: {},\n            patches: [],\n        });\n    }\n    const objDesc = patchMap.get(obj);\n    if (objDesc.patches.some((p) => p.name === patchName)) {\n        throw new Error(`Class ${obj.name} already has a patch ${patchName}`);\n    }\n    objDesc.patches.push({\n        name: patchName,\n        patch: patchValue,\n        pure,\n    });\n\n    for (const k in patchValue) {\n        let prevDesc = null;\n        let proto = obj;\n        do {\n            prevDesc = Object.getOwnPropertyDescriptor(proto, k);\n            proto = Object.getPrototypeOf(proto);\n        } while (!prevDesc && proto);\n\n        let newDesc = Object.getOwnPropertyDescriptor(patchValue, k);\n        if (!Object.hasOwnProperty.call(objDesc.original, k)) {\n            objDesc.original[k] = Object.getOwnPropertyDescriptor(obj, k);\n        }\n\n        if (prevDesc) {\n            const patchedFnName = `${k} (patch ${patchName})`;\n\n            if (prevDesc.value && typeof newDesc.value === \"function\") {\n                newDesc = { ...prevDesc, value: newDesc.value };\n                makeIntermediateFunction(\"value\", prevDesc, newDesc, patchedFnName);\n            }\n            if ((newDesc.get || newDesc.set) && (prevDesc.get || prevDesc.set)) {\n                // get and set are defined together. If they are both defined\n                // in the previous descriptor but only one in the new descriptor\n                // then the other will be undefined so we need to apply the\n                // previous descriptor in the new one.\n                newDesc = {\n                    ...prevDesc,\n                    get: newDesc.get || prevDesc.get,\n                    set: newDesc.set || prevDesc.set,\n                };\n                if (prevDesc.get && typeof newDesc.get === \"function\") {\n                    makeIntermediateFunction(\"get\", prevDesc, newDesc, patchedFnName);\n                }\n                if (prevDesc.set && typeof newDesc.set === \"function\") {\n                    makeIntermediateFunction(\"set\", prevDesc, newDesc, patchedFnName);\n                }\n            }\n        }\n\n        Object.defineProperty(obj, k, newDesc);\n    }\n\n    function makeIntermediateFunction(key, prevDesc, newDesc, patchedFnName) {\n        const _superFn = prevDesc[key];\n        const patchFn = newDesc[key];\n        if (pure) {\n            newDesc[key] = patchFn;\n        } else {\n            newDesc[key] = {\n                [patchedFnName](...args) {\n                    let prevSuper;\n                    if (this) {\n                        prevSuper = this._super;\n                        Object.defineProperty(this, \"_super\", {\n                            value: _superFn.bind(this),\n                            configurable: true,\n                            writable: true,\n                        });\n                    }\n                    const result = patchFn.call(this, ...args);\n                    if (this) {\n                        Object.defineProperty(this, \"_super\", {\n                            value: prevSuper,\n                            configurable: true,\n                            writable: true,\n                        });\n                    }\n                    return result;\n                },\n            }[patchedFnName];\n        }\n    }\n}\n\n/**\n * We define here an unpatch function.  This is mostly useful if we want to\n * remove a patch.  For example, for testing purposes\n *\n * @param {Object} obj\n * @param {string} patchName\n */\nexport function unpatch(obj, patchName) {\n    const objDesc = patchMap.get(obj);\n    if (!objDesc.patches.some((p) => p.name === patchName)) {\n        throw new Error(`Class ${obj.name} does not have any patch ${patchName}`);\n    }\n    patchMap.delete(obj);\n\n    // Restore original methods on the prototype and the class.\n    for (const k in objDesc.original) {\n        if (objDesc.original[k] === undefined) {\n            delete obj[k];\n        } else {\n            Object.defineProperty(obj, k, objDesc.original[k]);\n        }\n    }\n\n    // Re-apply the patches except the one to remove.\n    for (const patchDesc of objDesc.patches) {\n        if (patchDesc.name !== patchName) {\n            patch(obj, patchDesc.name, patchDesc.patch, { pure: patchDesc.pure });\n        }\n    }\n}\n", "/** @odoo-module */\n\n/**\n * Ensures that `element` will be visible in its `scrollable`.\n *\n * @param {HTMLElement} element\n * @param {Object} options\n * @param {HTMLElement} options[scrollable] a scrollable area\n * @param {Boolean} options[isAnchor] states if the scroll is to an anchor\n */\nexport function scrollTo(element, options = { scrollable: null, isAnchor: false }) {\n    function _getScrollParent(node) {\n        if (node == null) {\n            return null;\n        }\n\n        if (node.scrollHeight > node.clientHeight && node.clientHeight > 0) {\n            return node;\n        } else {\n            return _getScrollParent(node.parentNode);\n        }\n    }\n\n    const scrollable = options.scrollable\n        ? options.scrollable\n        : _getScrollParent(element.parentNode);\n    if (scrollable) {\n        const scrollBottom = scrollable.getBoundingClientRect().bottom;\n        const scrollTop = scrollable.getBoundingClientRect().top;\n        const elementBottom = element.getBoundingClientRect().bottom;\n        const elementTop = element.getBoundingClientRect().top;\n        if (elementBottom > scrollBottom && !options.isAnchor) {\n            // The scroll place the element at the bottom border of the scrollable\n            scrollable.scrollTop +=\n                elementTop - scrollBottom + Math.ceil(element.getBoundingClientRect().height);\n        } else if (elementTop < scrollTop || options.isAnchor) {\n            // The scroll place the element at the top of the scrollable\n            scrollable.scrollTop -= scrollTop - elementTop;\n            if (options.isAnchor) {\n                // If the scrollable is within a scrollable, another scroll should be done\n                const parentScrollable = _getScrollParent(scrollable.parentNode);\n                if (parentScrollable) {\n                    scrollTo(scrollable, { isAnchor: true, scrollable: parentScrollable });\n                }\n            }\n        }\n    }\n}\n\n/*\n * Returns the main scrollable element relevant in a context of an action.\n * In desktop, the relevant element is the .o_content of the action.\n * In mobile, it is the html node itself, provided no other children is scrollable\n *   Most of the times in mobile, we don't want to scroll individual elements, so every bit\n *   of code should enforce that html is the scrollable element.\n *\n * @param {Component} The action component.\n * @return {Element}\n */\nfunction getScrollableElement(component) {\n    if (component.env.isSmall) {\n        return document.firstElementChild; // aka html node;\n    } else {\n        return component.el.querySelector(\".o_action_manager .o_content\");\n    }\n}\n\n/**\n * Retrieves the current top and left scroll position. By default, the scrolling\n * area is the '.o_content' main div. In mobile, it is the body.\n *\n * @param {Component} an action Component containing an .o_content scrollable\n *   area.\n */\nexport function getScrollPosition(component) {\n    const scrollingEl = getScrollableElement(component);\n    return {\n        left: scrollingEl ? scrollingEl.scrollLeft : 0,\n        top: scrollingEl ? scrollingEl.scrollTop : 0,\n    };\n}\n\n/**\n * Sets top and left scroll positions to the given values. By default, the\n * scrolling area is the '.o_content' main div. In mobile, it is the body.\n *\n * @param {Component} an action Component containing an .o_content scrollable\n *   area.\n * @param {Object} offset\n * @param {number} [offset.left=0]\n * @param {number} [offset.top=0]\n */\nexport function setScrollPosition(component, offset) {\n    const scrollingEl = getScrollableElement(component);\n    if (scrollingEl) {\n        scrollingEl.scrollLeft = offset.left || 0;\n        scrollingEl.scrollTop = offset.top || 0;\n    }\n}\n", "/** @odoo-module */\n\nimport { unaccent } from \"./strings\";\n\n/**\n * This private function computes a score that represent the fact that the\n * string contains the pattern, or not\n *\n * - If the score is 0, the string does not contain the letters of the pattern in\n *   the correct order.\n * - if the score is > 0, it actually contains the letters.\n *\n * Better matches will get a higher score: consecutive letters are better,\n * and a match closer to the beginning of the string is also scored higher.\n */\nfunction match(pattern, str) {\n    let totalScore = 0;\n    let currentScore = 0;\n    let len = str.length;\n    let patternIndex = 0;\n\n    pattern = unaccent(pattern, false);\n    str = unaccent(str, false);\n\n    for (let i = 0; i < len; i++) {\n        if (str[i] === pattern[patternIndex]) {\n            patternIndex++;\n            currentScore += 100 + currentScore - i / 200;\n        } else {\n            currentScore = 0;\n        }\n        totalScore = totalScore + currentScore;\n    }\n\n    return patternIndex === pattern.length ? totalScore : 0;\n}\n\n/**\n * Return a list of things that matches a pattern, ordered by their 'score' (\n * higher score first). An higher score means that the match is better. For\n * example, consecutive letters are considered a better match.\n */\nexport function fuzzyLookup(pattern, list, fn) {\n    const results = [];\n    list.forEach((data) => {\n        const score = match(pattern, fn(data));\n        if (score > 0) {\n            results.push({ score, elem: data });\n        }\n    });\n\n    // we want better matches first\n    results.sort((a, b) => b.score - a.score);\n\n    return results.map((r) => r.elem);\n}\n\n// Does `pattern` fuzzy match `string`?\nexport function fuzzyTest(pattern, string) {\n    return match(pattern, string) !== 0;\n}\n", "/** @odoo-module **/\n\n/**\n * Escapes a string to use as a RegExp.\n * @url https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n *\n * @param {string} str\n * @returns {string} escaped string to use as a RegExp\n */\nexport function escapeRegExp(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\n\n/**\n * Intersperses ``separator`` in ``str`` at the positions indicated by\n * ``indices``.\n *\n * ``indices`` is an array of relative offsets (from the previous insertion\n * position, starting from the end of the string) at which to insert\n * ``separator``.\n *\n * There are two special values:\n *\n * ``-1``\n *   indicates the insertion should end now\n * ``0``\n *   indicates that the previous section pattern should be repeated (until all\n *   of ``str`` is consumed)\n *\n * @param {string} str\n * @param {number[]} indices\n * @param {string} separator\n * @returns {string}\n */\nexport function intersperse(str, indices, separator = \"\") {\n    separator = separator || \"\";\n    const result = [];\n    let last = str.length;\n    for (let i = 0; i < indices.length; ++i) {\n        let section = indices[i];\n        if (section === -1 || last <= 0) {\n            // Done with string, or -1 (stops formatting string)\n            break;\n        } else if (section === 0 && i === 0) {\n            // repeats previous section, which there is none => stop\n            break;\n        } else if (section === 0) {\n            // repeat previous section forever\n            //noinspection AssignmentToForLoopParameterJS\n            section = indices[--i];\n        }\n        result.push(str.substring(last - section, last));\n        last -= section;\n    }\n    const s = str.substring(0, last);\n    if (s) {\n        result.push(s);\n    }\n    return result.reverse().join(separator);\n}\n\n/**\n * Returns a string formatted using given values.\n * If the value is an object, its keys will replace `%(key)s` expressions.\n * If the values are a set of strings, they will replace `%s` expressions.\n * If no value is given, the string will not be formatted.\n *\n * @param {string} s\n * @param {...string} ...values\n * @returns {string}\n */\nexport function sprintf(s, ...values) {\n    if (values.length === 1 && Object.prototype.toString.call(values[0]) === \"[object Object]\") {\n        const valuesDict = values[0];\n        s = s.replace(/\\%\\(?([^\\)]+)\\)s/g, (match, value) => valuesDict[value]);\n    } else if (values.length > 0) {\n        s = s.replace(/\\%s/g, () => values.shift());\n    }\n    return s;\n}\n\n/**\n * Capitalizes a string: \"abc def\" => \"Abc def\"\n *\n * @param {string} s the input string\n * @returns {string}\n */\nexport function capitalize(s) {\n    return s ? s[0].toUpperCase() + s.slice(1) : \"\";\n}\n\nconst diacriticsMap = {\n'\\u0041': 'A','\\u24B6': 'A','\\uFF21': 'A','\\u00C0': 'A','\\u00C1': 'A','\\u00C2': 'A','\\u1EA6': 'A','\\u1EA4': 'A','\\u1EAA': 'A','\\u1EA8': 'A',\n'\\u00C3': 'A','\\u0100': 'A','\\u0102': 'A','\\u1EB0': 'A','\\u1EAE': 'A','\\u1EB4': 'A','\\u1EB2': 'A','\\u0226': 'A','\\u01E0': 'A','\\u00C4': 'A',\n'\\u01DE': 'A','\\u1EA2': 'A','\\u00C5': 'A','\\u01FA': 'A','\\u01CD': 'A','\\u0200': 'A','\\u0202': 'A','\\u1EA0': 'A','\\u1EAC': 'A','\\u1EB6': 'A',\n'\\u1E00': 'A','\\u0104': 'A','\\u023A': 'A','\\u2C6F': 'A',\n\n'\\uA732': 'AA',\n'\\u00C6': 'AE','\\u01FC': 'AE','\\u01E2': 'AE',\n'\\uA734': 'AO',\n'\\uA736': 'AU',\n'\\uA738': 'AV','\\uA73A': 'AV',\n'\\uA73C': 'AY',\n'\\u0042': 'B','\\u24B7': 'B','\\uFF22': 'B','\\u1E02': 'B','\\u1E04': 'B','\\u1E06': 'B','\\u0243': 'B','\\u0182': 'B','\\u0181': 'B',\n\n'\\u0043': 'C','\\u24B8': 'C','\\uFF23': 'C','\\u0106': 'C','\\u0108': 'C','\\u010A': 'C','\\u010C': 'C','\\u00C7': 'C','\\u1E08': 'C','\\u0187': 'C',\n'\\u023B': 'C','\\uA73E': 'C',\n\n'\\u0044': 'D','\\u24B9': 'D','\\uFF24': 'D','\\u1E0A': 'D','\\u010E': 'D','\\u1E0C': 'D','\\u1E10': 'D','\\u1E12': 'D','\\u1E0E': 'D','\\u0110': 'D',\n'\\u018B': 'D','\\u018A': 'D','\\u0189': 'D','\\uA779': 'D',\n\n'\\u01F1': 'DZ','\\u01C4': 'DZ',\n'\\u01F2': 'Dz','\\u01C5': 'Dz',\n\n'\\u0045': 'E','\\u24BA': 'E','\\uFF25': 'E','\\u00C8': 'E','\\u00C9': 'E','\\u00CA': 'E','\\u1EC0': 'E','\\u1EBE': 'E','\\u1EC4': 'E','\\u1EC2': 'E',\n'\\u1EBC': 'E','\\u0112': 'E','\\u1E14': 'E','\\u1E16': 'E','\\u0114': 'E','\\u0116': 'E','\\u00CB': 'E','\\u1EBA': 'E','\\u011A': 'E','\\u0204': 'E',\n'\\u0206': 'E','\\u1EB8': 'E','\\u1EC6': 'E','\\u0228': 'E','\\u1E1C': 'E','\\u0118': 'E','\\u1E18': 'E','\\u1E1A': 'E','\\u0190': 'E','\\u018E': 'E',\n\n'\\u0046': 'F','\\u24BB': 'F','\\uFF26': 'F','\\u1E1E': 'F','\\u0191': 'F','\\uA77B': 'F',\n\n'\\u0047': 'G','\\u24BC': 'G','\\uFF27': 'G','\\u01F4': 'G','\\u011C': 'G','\\u1E20': 'G','\\u011E': 'G','\\u0120': 'G','\\u01E6': 'G','\\u0122': 'G',\n'\\u01E4': 'G','\\u0193': 'G','\\uA7A0': 'G','\\uA77D': 'G','\\uA77E': 'G',\n\n'\\u0048': 'H','\\u24BD': 'H','\\uFF28': 'H','\\u0124': 'H','\\u1E22': 'H','\\u1E26': 'H','\\u021E': 'H','\\u1E24': 'H','\\u1E28': 'H','\\u1E2A': 'H',\n'\\u0126': 'H','\\u2C67': 'H','\\u2C75': 'H','\\uA78D': 'H',\n\n'\\u0049': 'I','\\u24BE': 'I','\\uFF29': 'I','\\u00CC': 'I','\\u00CD': 'I','\\u00CE': 'I','\\u0128': 'I','\\u012A': 'I','\\u012C': 'I','\\u0130': 'I',\n'\\u00CF': 'I','\\u1E2E': 'I','\\u1EC8': 'I','\\u01CF': 'I','\\u0208': 'I','\\u020A': 'I','\\u1ECA': 'I','\\u012E': 'I','\\u1E2C': 'I','\\u0197': 'I',\n\n'\\u004A': 'J','\\u24BF': 'J','\\uFF2A': 'J','\\u0134': 'J','\\u0248': 'J',\n\n'\\u004B': 'K','\\u24C0': 'K','\\uFF2B': 'K','\\u1E30': 'K','\\u01E8': 'K','\\u1E32': 'K','\\u0136': 'K','\\u1E34': 'K','\\u0198': 'K','\\u2C69': 'K',\n'\\uA740': 'K','\\uA742': 'K','\\uA744': 'K','\\uA7A2': 'K',\n\n'\\u004C': 'L','\\u24C1': 'L','\\uFF2C': 'L','\\u013F': 'L','\\u0139': 'L','\\u013D': 'L','\\u1E36': 'L','\\u1E38': 'L','\\u013B': 'L','\\u1E3C': 'L',\n'\\u1E3A': 'L','\\u0141': 'L','\\u023D': 'L','\\u2C62': 'L','\\u2C60': 'L','\\uA748': 'L','\\uA746': 'L','\\uA780': 'L',\n\n'\\u01C7': 'LJ',\n'\\u01C8': 'Lj',\n'\\u004D': 'M','\\u24C2': 'M','\\uFF2D': 'M','\\u1E3E': 'M','\\u1E40': 'M','\\u1E42': 'M','\\u2C6E': 'M','\\u019C': 'M',\n\n'\\u004E': 'N','\\u24C3': 'N','\\uFF2E': 'N','\\u01F8': 'N','\\u0143': 'N','\\u00D1': 'N','\\u1E44': 'N','\\u0147': 'N','\\u1E46': 'N','\\u0145': 'N',\n'\\u1E4A': 'N','\\u1E48': 'N','\\u0220': 'N','\\u019D': 'N','\\uA790': 'N','\\uA7A4': 'N',\n\n'\\u01CA': 'NJ',\n'\\u01CB': 'Nj',\n\n'\\u004F': 'O','\\u24C4': 'O','\\uFF2F': 'O','\\u00D2': 'O','\\u00D3': 'O','\\u00D4': 'O','\\u1ED2': 'O','\\u1ED0': 'O','\\u1ED6': 'O','\\u1ED4': 'O',\n'\\u00D5': 'O','\\u1E4C': 'O','\\u022C': 'O','\\u1E4E': 'O','\\u014C': 'O','\\u1E50': 'O','\\u1E52': 'O','\\u014E': 'O','\\u022E': 'O','\\u0230': 'O',\n'\\u00D6': 'O','\\u022A': 'O','\\u1ECE': 'O','\\u0150': 'O','\\u01D1': 'O','\\u020C': 'O','\\u020E': 'O','\\u01A0': 'O','\\u1EDC': 'O','\\u1EDA': 'O',\n'\\u1EE0': 'O','\\u1EDE': 'O','\\u1EE2': 'O','\\u1ECC': 'O','\\u1ED8': 'O','\\u01EA': 'O','\\u01EC': 'O','\\u00D8': 'O','\\u01FE': 'O','\\u0186': 'O',\n'\\u019F': 'O','\\uA74A': 'O','\\uA74C': 'O',\n\n'\\u01A2': 'OI',\n'\\uA74E': 'OO',\n'\\u0222': 'OU',\n'\\u0050': 'P','\\u24C5': 'P','\\uFF30': 'P','\\u1E54': 'P','\\u1E56': 'P','\\u01A4': 'P','\\u2C63': 'P','\\uA750': 'P','\\uA752': 'P','\\uA754': 'P',\n'\\u0051': 'Q','\\u24C6': 'Q','\\uFF31': 'Q','\\uA756': 'Q','\\uA758': 'Q','\\u024A': 'Q',\n\n'\\u0052': 'R','\\u24C7': 'R','\\uFF32': 'R','\\u0154': 'R','\\u1E58': 'R','\\u0158': 'R','\\u0210': 'R','\\u0212': 'R','\\u1E5A': 'R','\\u1E5C': 'R',\n'\\u0156': 'R','\\u1E5E': 'R','\\u024C': 'R','\\u2C64': 'R','\\uA75A': 'R','\\uA7A6': 'R','\\uA782': 'R',\n\n'\\u0053': 'S','\\u24C8': 'S','\\uFF33': 'S','\\u1E9E': 'S','\\u015A': 'S','\\u1E64': 'S','\\u015C': 'S','\\u1E60': 'S','\\u0160': 'S','\\u1E66': 'S',\n'\\u1E62': 'S','\\u1E68': 'S','\\u0218': 'S','\\u015E': 'S','\\u2C7E': 'S','\\uA7A8': 'S','\\uA784': 'S',\n\n'\\u0054': 'T','\\u24C9': 'T','\\uFF34': 'T','\\u1E6A': 'T','\\u0164': 'T','\\u1E6C': 'T','\\u021A': 'T','\\u0162': 'T','\\u1E70': 'T','\\u1E6E': 'T',\n'\\u0166': 'T','\\u01AC': 'T','\\u01AE': 'T','\\u023E': 'T','\\uA786': 'T',\n\n'\\uA728': 'TZ',\n\n'\\u0055': 'U','\\u24CA': 'U','\\uFF35': 'U','\\u00D9': 'U','\\u00DA': 'U','\\u00DB': 'U','\\u0168': 'U','\\u1E78': 'U','\\u016A': 'U','\\u1E7A': 'U',\n'\\u016C': 'U','\\u00DC': 'U','\\u01DB': 'U','\\u01D7': 'U','\\u01D5': 'U','\\u01D9': 'U','\\u1EE6': 'U','\\u016E': 'U','\\u0170': 'U','\\u01D3': 'U',\n'\\u0214': 'U','\\u0216': 'U','\\u01AF': 'U','\\u1EEA': 'U','\\u1EE8': 'U','\\u1EEE': 'U','\\u1EEC': 'U','\\u1EF0': 'U','\\u1EE4': 'U','\\u1E72': 'U',\n'\\u0172': 'U','\\u1E76': 'U','\\u1E74': 'U','\\u0244': 'U',\n\n'\\u0056': 'V','\\u24CB': 'V','\\uFF36': 'V','\\u1E7C': 'V','\\u1E7E': 'V','\\u01B2': 'V','\\uA75E': 'V','\\u0245': 'V',\n'\\uA760': 'VY',\n'\\u0057': 'W','\\u24CC': 'W','\\uFF37': 'W','\\u1E80': 'W','\\u1E82': 'W','\\u0174': 'W','\\u1E86': 'W','\\u1E84': 'W','\\u1E88': 'W','\\u2C72': 'W',\n'\\u0058': 'X','\\u24CD': 'X','\\uFF38': 'X','\\u1E8A': 'X','\\u1E8C': 'X',\n\n'\\u0059': 'Y','\\u24CE': 'Y','\\uFF39': 'Y','\\u1EF2': 'Y','\\u00DD': 'Y','\\u0176': 'Y','\\u1EF8': 'Y','\\u0232': 'Y','\\u1E8E': 'Y','\\u0178': 'Y',\n'\\u1EF6': 'Y','\\u1EF4': 'Y','\\u01B3': 'Y','\\u024E': 'Y','\\u1EFE': 'Y',\n\n'\\u005A': 'Z','\\u24CF': 'Z','\\uFF3A': 'Z','\\u0179': 'Z','\\u1E90': 'Z','\\u017B': 'Z','\\u017D': 'Z','\\u1E92': 'Z','\\u1E94': 'Z','\\u01B5': 'Z',\n'\\u0224': 'Z','\\u2C7F': 'Z','\\u2C6B': 'Z','\\uA762': 'Z',\n\n'\\u0061': 'a','\\u24D0': 'a','\\uFF41': 'a','\\u1E9A': 'a','\\u00E0': 'a','\\u00E1': 'a','\\u00E2': 'a','\\u1EA7': 'a','\\u1EA5': 'a','\\u1EAB': 'a',\n'\\u1EA9': 'a','\\u00E3': 'a','\\u0101': 'a','\\u0103': 'a','\\u1EB1': 'a','\\u1EAF': 'a','\\u1EB5': 'a','\\u1EB3': 'a','\\u0227': 'a','\\u01E1': 'a',\n'\\u00E4': 'a','\\u01DF': 'a','\\u1EA3': 'a','\\u00E5': 'a','\\u01FB': 'a','\\u01CE': 'a','\\u0201': 'a','\\u0203': 'a','\\u1EA1': 'a','\\u1EAD': 'a',\n'\\u1EB7': 'a','\\u1E01': 'a','\\u0105': 'a','\\u2C65': 'a','\\u0250': 'a',\n\n'\\uA733': 'aa',\n'\\u00E6': 'ae','\\u01FD': 'ae','\\u01E3': 'ae',\n'\\uA735': 'ao',\n'\\uA737': 'au',\n'\\uA739': 'av','\\uA73B': 'av',\n'\\uA73D': 'ay',\n'\\u0062': 'b','\\u24D1': 'b','\\uFF42': 'b','\\u1E03': 'b','\\u1E05': 'b','\\u1E07': 'b','\\u0180': 'b','\\u0183': 'b','\\u0253': 'b',\n\n'\\u0063': 'c','\\u24D2': 'c','\\uFF43': 'c','\\u0107': 'c','\\u0109': 'c','\\u010B': 'c','\\u010D': 'c','\\u00E7': 'c','\\u1E09': 'c','\\u0188': 'c',\n'\\u023C': 'c','\\uA73F': 'c','\\u2184': 'c',\n\n'\\u0064': 'd','\\u24D3': 'd','\\uFF44': 'd','\\u1E0B': 'd','\\u010F': 'd','\\u1E0D': 'd','\\u1E11': 'd','\\u1E13': 'd','\\u1E0F': 'd','\\u0111': 'd',\n'\\u018C': 'd','\\u0256': 'd','\\u0257': 'd','\\uA77A': 'd',\n\n'\\u01F3': 'dz','\\u01C6': 'dz',\n\n'\\u0065': 'e','\\u24D4': 'e','\\uFF45': 'e','\\u00E8': 'e','\\u00E9': 'e','\\u00EA': 'e','\\u1EC1': 'e','\\u1EBF': 'e','\\u1EC5': 'e','\\u1EC3': 'e',\n'\\u1EBD': 'e','\\u0113': 'e','\\u1E15': 'e','\\u1E17': 'e','\\u0115': 'e','\\u0117': 'e','\\u00EB': 'e','\\u1EBB': 'e','\\u011B': 'e','\\u0205': 'e',\n'\\u0207': 'e','\\u1EB9': 'e','\\u1EC7': 'e','\\u0229': 'e','\\u1E1D': 'e','\\u0119': 'e','\\u1E19': 'e','\\u1E1B': 'e','\\u0247': 'e','\\u025B': 'e',\n'\\u01DD': 'e',\n\n'\\u0066': 'f','\\u24D5': 'f','\\uFF46': 'f','\\u1E1F': 'f','\\u0192': 'f','\\uA77C': 'f',\n\n'\\u0067': 'g','\\u24D6': 'g','\\uFF47': 'g','\\u01F5': 'g','\\u011D': 'g','\\u1E21': 'g','\\u011F': 'g','\\u0121': 'g','\\u01E7': 'g','\\u0123': 'g',\n'\\u01E5': 'g','\\u0260': 'g','\\uA7A1': 'g','\\u1D79': 'g','\\uA77F': 'g',\n\n'\\u0068': 'h','\\u24D7': 'h','\\uFF48': 'h','\\u0125': 'h','\\u1E23': 'h','\\u1E27': 'h','\\u021F': 'h','\\u1E25': 'h','\\u1E29': 'h','\\u1E2B': 'h',\n'\\u1E96': 'h','\\u0127': 'h','\\u2C68': 'h','\\u2C76': 'h','\\u0265': 'h',\n\n'\\u0195': 'hv',\n\n'\\u0069': 'i','\\u24D8': 'i','\\uFF49': 'i','\\u00EC': 'i','\\u00ED': 'i','\\u00EE': 'i','\\u0129': 'i','\\u012B': 'i','\\u012D': 'i','\\u00EF': 'i',\n'\\u1E2F': 'i','\\u1EC9': 'i','\\u01D0': 'i','\\u0209': 'i','\\u020B': 'i','\\u1ECB': 'i','\\u012F': 'i','\\u1E2D': 'i','\\u0268': 'i','\\u0131': 'i',\n\n'\\u006A': 'j','\\u24D9': 'j','\\uFF4A': 'j','\\u0135': 'j','\\u01F0': 'j','\\u0249': 'j',\n\n'\\u006B': 'k','\\u24DA': 'k','\\uFF4B': 'k','\\u1E31': 'k','\\u01E9': 'k','\\u1E33': 'k','\\u0137': 'k','\\u1E35': 'k','\\u0199': 'k','\\u2C6A': 'k',\n'\\uA741': 'k','\\uA743': 'k','\\uA745': 'k','\\uA7A3': 'k',\n\n'\\u006C': 'l','\\u24DB': 'l','\\uFF4C': 'l','\\u0140': 'l','\\u013A': 'l','\\u013E': 'l','\\u1E37': 'l','\\u1E39': 'l','\\u013C': 'l','\\u1E3D': 'l',\n'\\u1E3B': 'l','\\u017F': 'l','\\u0142': 'l','\\u019A': 'l','\\u026B': 'l','\\u2C61': 'l','\\uA749': 'l','\\uA781': 'l','\\uA747': 'l',\n\n'\\u01C9': 'lj',\n'\\u006D': 'm','\\u24DC': 'm','\\uFF4D': 'm','\\u1E3F': 'm','\\u1E41': 'm','\\u1E43': 'm','\\u0271': 'm','\\u026F': 'm',\n\n'\\u006E': 'n','\\u24DD': 'n','\\uFF4E': 'n','\\u01F9': 'n','\\u0144': 'n','\\u00F1': 'n','\\u1E45': 'n','\\u0148': 'n','\\u1E47': 'n','\\u0146': 'n',\n'\\u1E4B': 'n','\\u1E49': 'n','\\u019E': 'n','\\u0272': 'n','\\u0149': 'n','\\uA791': 'n','\\uA7A5': 'n',\n\n'\\u01CC': 'nj',\n\n'\\u006F': 'o','\\u24DE': 'o','\\uFF4F': 'o','\\u00F2': 'o','\\u00F3': 'o','\\u00F4': 'o','\\u1ED3': 'o','\\u1ED1': 'o','\\u1ED7': 'o','\\u1ED5': 'o',\n'\\u00F5': 'o','\\u1E4D': 'o','\\u022D': 'o','\\u1E4F': 'o','\\u014D': 'o','\\u1E51': 'o','\\u1E53': 'o','\\u014F': 'o','\\u022F': 'o','\\u0231': 'o',\n'\\u00F6': 'o','\\u022B': 'o','\\u1ECF': 'o','\\u0151': 'o','\\u01D2': 'o','\\u020D': 'o','\\u020F': 'o','\\u01A1': 'o','\\u1EDD': 'o','\\u1EDB': 'o',\n'\\u1EE1': 'o','\\u1EDF': 'o','\\u1EE3': 'o','\\u1ECD': 'o','\\u1ED9': 'o','\\u01EB': 'o','\\u01ED': 'o','\\u00F8': 'o','\\u01FF': 'o','\\u0254': 'o',\n'\\uA74B': 'o','\\uA74D': 'o','\\u0275': 'o',\n\n'\\u01A3': 'oi',\n'\\u0223': 'ou',\n'\\uA74F': 'oo',\n'\\u0070': 'p','\\u24DF': 'p','\\uFF50': 'p','\\u1E55': 'p','\\u1E57': 'p','\\u01A5': 'p','\\u1D7D': 'p','\\uA751': 'p','\\uA753': 'p','\\uA755': 'p',\n'\\u0071': 'q','\\u24E0': 'q','\\uFF51': 'q','\\u024B': 'q','\\uA757': 'q','\\uA759': 'q',\n\n'\\u0072': 'r','\\u24E1': 'r','\\uFF52': 'r','\\u0155': 'r','\\u1E59': 'r','\\u0159': 'r','\\u0211': 'r','\\u0213': 'r','\\u1E5B': 'r','\\u1E5D': 'r',\n'\\u0157': 'r','\\u1E5F': 'r','\\u024D': 'r','\\u027D': 'r','\\uA75B': 'r','\\uA7A7': 'r','\\uA783': 'r',\n\n'\\u0073': 's','\\u24E2': 's','\\uFF53': 's','\\u00DF': 's','\\u015B': 's','\\u1E65': 's','\\u015D': 's','\\u1E61': 's','\\u0161': 's','\\u1E67': 's',\n'\\u1E63': 's','\\u1E69': 's','\\u0219': 's','\\u015F': 's','\\u023F': 's','\\uA7A9': 's','\\uA785': 's','\\u1E9B': 's',\n\n'\\u0074': 't','\\u24E3': 't','\\uFF54': 't','\\u1E6B': 't','\\u1E97': 't','\\u0165': 't','\\u1E6D': 't','\\u021B': 't','\\u0163': 't','\\u1E71': 't',\n'\\u1E6F': 't','\\u0167': 't','\\u01AD': 't','\\u0288': 't','\\u2C66': 't','\\uA787': 't',\n\n'\\uA729': 'tz',\n\n'\\u0075': 'u','\\u24E4': 'u','\\uFF55': 'u','\\u00F9': 'u','\\u00FA': 'u','\\u00FB': 'u','\\u0169': 'u','\\u1E79': 'u','\\u016B': 'u','\\u1E7B': 'u',\n'\\u016D': 'u','\\u00FC': 'u','\\u01DC': 'u','\\u01D8': 'u','\\u01D6': 'u','\\u01DA': 'u','\\u1EE7': 'u','\\u016F': 'u','\\u0171': 'u','\\u01D4': 'u',\n'\\u0215': 'u','\\u0217': 'u','\\u01B0': 'u','\\u1EEB': 'u','\\u1EE9': 'u','\\u1EEF': 'u','\\u1EED': 'u','\\u1EF1': 'u','\\u1EE5': 'u','\\u1E73': 'u',\n'\\u0173': 'u','\\u1E77': 'u','\\u1E75': 'u','\\u0289': 'u',\n\n'\\u0076': 'v','\\u24E5': 'v','\\uFF56': 'v','\\u1E7D': 'v','\\u1E7F': 'v','\\u028B': 'v','\\uA75F': 'v','\\u028C': 'v',\n'\\uA761': 'vy',\n'\\u0077': 'w','\\u24E6': 'w','\\uFF57': 'w','\\u1E81': 'w','\\u1E83': 'w','\\u0175': 'w','\\u1E87': 'w','\\u1E85': 'w','\\u1E98': 'w','\\u1E89': 'w',\n'\\u2C73': 'w',\n'\\u0078': 'x','\\u24E7': 'x','\\uFF58': 'x','\\u1E8B': 'x','\\u1E8D': 'x',\n\n'\\u0079': 'y','\\u24E8': 'y','\\uFF59': 'y','\\u1EF3': 'y','\\u00FD': 'y','\\u0177': 'y','\\u1EF9': 'y','\\u0233': 'y','\\u1E8F': 'y','\\u00FF': 'y',\n'\\u1EF7': 'y','\\u1E99': 'y','\\u1EF5': 'y','\\u01B4': 'y','\\u024F': 'y','\\u1EFF': 'y',\n\n'\\u007A': 'z','\\u24E9': 'z','\\uFF5A': 'z','\\u017A': 'z','\\u1E91': 'z','\\u017C': 'z','\\u017E': 'z','\\u1E93': 'z','\\u1E95': 'z','\\u01B6': 'z',\n'\\u0225': 'z','\\u0240': 'z','\\u2C6C': 'z','\\uA763': 'z',\n};\n\n/**\n * Replace diacritics character with ASCII character\n *\n * @param {string} str diacritics string\n * @param {boolean} caseSensitive\n * @returns {string} ASCII string\n */\nexport function unaccent(str, caseSensitive) {\n    str = str.replace(/[^\\u0000-\\u007E]/g, function (accented) {\n        return diacriticsMap[accented] || accented;\n    });\n    return caseSensitive ? str : str.toLowerCase();\n}\n", "/** @odoo-module **/\n\nimport { browser } from \"../browser/browser\";\n\n/**\n * Creates a version of the function where only the last call between two\n * animation frames is executed before the browser's next repaint. This\n * effectively throttles the function to the display's refresh rate.\n *\n * @param {Function} func the function to throttle\n * @returns {{ (...args): void, cancel: () => void }} the throttled function\n */\nexport function throttleForAnimation(func) {\n    let handle = null;\n    const funcName = func.name ? `${func.name} (throttleForAnimation)` : \"throttleForAnimation\";\n    return Object.assign(\n        {\n            [funcName](...args) {\n                browser.cancelAnimationFrame(handle);\n                handle = browser.requestAnimationFrame(() => {\n                    handle = null;\n                    func.call(this, ...args);\n                });\n            },\n        }[funcName],\n        {\n            cancel() {\n                browser.cancelAnimationFrame(handle);\n            },\n        }\n    );\n}\n\n/**\n * Creates and returns a new debounced version of the passed function (func)\n * which will postpone its execution until after wait milliseconds\n * have elapsed since the last time it was invoked. The debounced function\n * will return a Promise that will be resolved when the function (func)\n * has been fully executed. If `immediate` is passed, trigger the function\n * on the leading edge, instead of the trailing.\n *\n * @template T the return type of the original function\n * @param {(...args) => T} func the function to debounce\n * @param {number} wait how long should elapse before the function is called\n * @param {boolean} [immediate=false] whether the function should be called on\n *      the leading edge instead of the trailing edge.\n * @returns {{ (...args): Promise<T>, cancel: () => void }} the debounced function\n */\nexport function debounce(func, wait, immediate = false) {\n    let timeout;\n    const funcName = func.name ? func.name + \" (debounce)\" : \"debounce\";\n    return Object.assign(\n        {\n            [funcName](...args) {\n                return new Promise((resolve) => {\n                    const callNow = immediate && !timeout;\n                    browser.clearTimeout(timeout);\n                    timeout = browser.setTimeout(() => {\n                        timeout = null;\n                        if (!immediate) {\n                            Promise.resolve(func.apply(this, args)).then(resolve);\n                        }\n                    }, wait);\n                    if (callNow) {\n                        Promise.resolve(func.apply(this, args)).then(resolve);\n                    }\n                });\n            },\n        }[funcName],\n        {\n            cancel() {\n                browser.clearTimeout(timeout);\n            },\n        }\n    );\n}\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will be\n * triggered every N milliseconds.\n *\n * @deprecated this function has behaviour that is unexpected considering its\n *      name, prefer _.throttle until this function is rewritten\n * @param {Function} func\n * @param {number} wait\n * @returns {Function}\n */\nexport function throttle(func, wait) {\n    let waiting = false;\n    const funcName = func.name ? func.name + \" (throttle)\" : \"throttle\";\n    return {\n        [funcName](...args) {\n            const context = this;\n            if (!waiting) {\n                waiting = true;\n                browser.setTimeout(function () {\n                    waiting = false;\n                    func.call(context, ...args);\n                }, wait);\n            }\n        },\n    }[funcName];\n}\n", "/** @odoo-module **/\n\n/**\n * @param {Document} activeElement\n * @param {DOMString} selector\n * @returns all selected and visible elements present in the activeElement\n */\nexport function getVisibleElements(activeElement, selector) {\n    const visibleElements = [];\n    for (const el of activeElement.querySelectorAll(selector)) {\n        const isVisible = el.offsetWidth > 0 && el.offsetHeight > 0;\n        if (isVisible) {\n            visibleElements.push(el);\n        }\n    }\n    return visibleElements;\n}\n", "/** @odoo-module **/\n\nimport { browser } from \"../browser/browser\";\n\n/**\n * Trasnforms a key value mapping to a string formatted as url hash, e.g.\n * {a: \"x\", b: 2} -> \"a=x&b=2\"\n *\n * @param {Object} obj\n * @returns {string}\n */\nexport function objectToUrlEncodedString(obj) {\n    return Object.entries(obj)\n        .map(([k, v]) => (v ? `${k}=${encodeURIComponent(v)}` : k))\n        .join(\"&\");\n}\n\n/**\n * Gets the origin url of the page, or cleans a given one\n *\n * @param {string} [origin]: a given origin url\n * @return {string} a cleaned origin url\n */\nexport function getOrigin(origin) {\n    if (origin) {\n        // remove trailing slashes\n        origin = origin.replace(/\\/+$/, \"\");\n    } else {\n        const { host, protocol } = browser.location;\n        origin = `${protocol}//${host}`;\n    }\n    return origin;\n}\n\n/**\n * @param {string} route: the relative route, or absolute in the case of cors urls\n * @param {object} [queryParams]: parameters to be appended as the url's queryString\n * @param {object} [options]\n * @param {string} [options.origin]: a precomputed origin\n */\nexport function url(route, queryParams, options = {}) {\n    const origin = getOrigin(options.origin);\n    if (!route) {\n        return origin;\n    }\n\n    let queryString = objectToUrlEncodedString(queryParams || {});\n    queryString = queryString.length > 0 ? `?${queryString}` : queryString;\n\n    // Compare the wanted url against the current origin\n    let prefix = [\"http://\", \"https://\", \"//\"].some(\n        (el) => route.length >= el.length && route.slice(0, el.length) === el\n    );\n    prefix = prefix ? \"\" : origin;\n    return `${prefix}${route}${queryString}`;\n}\n", "/** @odoo-module **/\n\nfunction hasParsingError(parsedDocument) {\n    return parsedDocument.getElementsByTagName(\"parsererror\").length > 0;\n}\n\nexport class XMLParser {\n    /**\n     * to override. Should return the parsed content of the arch.\n     * It can call the visitArch function if desired\n     */\n    parse() {}\n\n    visitXML(xml, callback) {\n        function visit(xml) {\n            if (xml) {\n                let didVisitChildren = false;\n                const visitChildren = () => {\n                    for (let child of xml.children) {\n                        visit(child);\n                    }\n                    didVisitChildren = true;\n                };\n                const shouldVisitChildren = callback(xml, visitChildren);\n                if (shouldVisitChildren !== false && !didVisitChildren) {\n                    visitChildren();\n                }\n            }\n        }\n        const xmlDoc = typeof xml === \"string\" ? this.parseXML(xml) : xml;\n        visit(xmlDoc);\n    }\n\n    parseXML(arch) {\n        const parser = new DOMParser();\n        const xml = parser.parseFromString(arch, \"text/xml\");\n        if (hasParsingError(xml)) {\n            throw new Error(\n                `An error occured while parsing ${arch}: ${xml.getElementsByTagName(\"parsererror\")}`\n            );\n        }\n        return xml.documentElement;\n    }\n}\n", "/** @odoo-module */\n// This module makes it so that some errors only display a notification instead of an error dialog\n\nimport { registry } from \"@web/core/registry\";\nimport { odooExceptionTitleMap } from \"@web/core/errors/error_dialogs\";\nimport { _t } from \"@web/core/l10n/translation\";\n\nodooExceptionTitleMap.forEach((title, exceptionName) => {\n    registry.category(\"error_notifications\").add(exceptionName, {\n        title: title,\n        type: \"warning\",\n        sticky: true\n    });\n});\n\nconst sessionExpired = {\n    title: _t(\"Odoo Session Expired\"),\n    message: _t(\"Your Odoo session expired. The current page is about to be refreshed.\"),\n    buttons: [\n        {\n            text: _t(\"Ok\"),\n            click: () => window.location.reload(true),\n            close: true\n        }\n    ]\n};\n\nregistry\n    .category(\"error_notifications\")\n    .add(\"odoo.http.SessionExpiredException\", sessionExpired)\n    .add(\"werkzeug.exceptions.Forbidden\", sessionExpired)\n    .add(\"504\", {\n        title: _t(\"Request timeout\"),\n        message: _t(\n            \"The operation was interrupted. This usually means that the current operation is taking too much time.\"\n        )\n    });\n", "(function () {\n'use strict';\n\n/**\n * This file makes sure textarea elements with a specific editor class are\n * tweaked as soon as the DOM is ready so that they appear to be loading.\n *\n * They must then be loaded using standard Odoo modules system. In particular,\n * @see web_editor.loader\n */\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    // Standard loop for better browser support\n    var textareaEls = document.querySelectorAll('textarea.o_wysiwyg_loader');\n    for (var i = 0; i < textareaEls.length; i++) {\n        var textarea = textareaEls[i];\n        var wrapper = document.createElement('div');\n        wrapper.classList.add('position-relative', 'o_wysiwyg_textarea_wrapper');\n\n        var loadingElement = document.createElement('div');\n        loadingElement.classList.add('o_wysiwyg_loading');\n        var loadingIcon = document.createElement('i');\n        loadingIcon.classList.add('text-600', 'text-center',\n            'fa', 'fa-circle-o-notch', 'fa-spin', 'fa-2x');\n        loadingElement.appendChild(loadingIcon);\n        wrapper.appendChild(loadingElement);\n\n        textarea.parentNode.insertBefore(wrapper, textarea);\n        wrapper.insertBefore(textarea, loadingElement);\n    }\n});\n\n})();\n", "/** @odoo-module **/\n\nimport { browser } from \"../core/browser/browser\";\nimport AbstractStorageService from \"web.AbstractStorageService\";\nimport {\n    ConnectionAbortedError,\n    RPCError,\n    makeErrorFromResponse,\n    ConnectionLostError,\n} from \"../core/network/rpc_service\";\nimport { ErrorDialog } from \"../core/errors/error_dialogs\";\n\nexport function makeLegacyRpcService(legacyEnv) {\n    return {\n        start(env) {\n            legacyEnv.bus.on(\"rpc_request\", null, (rpcId) => {\n                env.bus.trigger(\"RPC:REQUEST\", rpcId);\n            });\n            legacyEnv.bus.on(\"rpc_response\", null, (rpcId) => {\n                env.bus.trigger(\"RPC:RESPONSE\", rpcId);\n            });\n            legacyEnv.bus.on(\"rpc_response_failed\", null, (rpcId) => {\n                env.bus.trigger(\"RPC:RESPONSE\", rpcId);\n            });\n        },\n    };\n}\n\n/**\n * Returns a service that maps legacy dialogs\n * to new environment services behavior.\n *\n * @param {object} legacyEnv\n * @returns a wowl deployable service\n */\nexport function makeLegacyDialogMappingService(legacyEnv) {\n    return {\n        dependencies: [\"ui\", \"hotkey\"],\n        start(env) {\n            const { ui, hotkey } = env.services;\n\n            function getModalEl(dialog) {\n                return dialog.modalRef ? dialog.modalRef.el : dialog.$modal[0];\n            }\n\n            function getCloseCallback(dialog) {\n                return dialog.modalRef ? () => dialog._close() : () => dialog.$modal.modal(\"hide\");\n            }\n\n            const dialogHotkeyRemoveMap = new Map();\n\n            function onOpenDialog(dialog) {\n                ui.activateElement(getModalEl(dialog));\n                const remove = hotkey.add(\"escape\", getCloseCallback(dialog));\n                dialogHotkeyRemoveMap.set(dialog, remove);\n            }\n\n            function onCloseDialog(dialog) {\n                ui.deactivateElement(getModalEl(dialog));\n                if (dialogHotkeyRemoveMap.has(dialog)) {\n                    const removeHotkey = dialogHotkeyRemoveMap.get(dialog);\n                    removeHotkey();\n                    dialogHotkeyRemoveMap.delete(dialog);\n                }\n            }\n\n            legacyEnv.bus.on(\"legacy_dialog_opened\", null, onOpenDialog);\n            legacyEnv.bus.on(\"legacy_dialog_destroyed\", null, onCloseDialog);\n\n            legacyEnv.bus.on(\"owl_dialog_mounted\", null, onOpenDialog);\n            legacyEnv.bus.on(\"owl_dialog_willunmount\", null, onCloseDialog);\n        },\n    };\n}\n\n/**\n * Deploys a service allowing legacy to add/remove commands.\n *\n * @param {object} legacyEnv\n * @returns a wowl deployable service\n */\nexport function makeLegacyCommandService(legacyEnv) {\n    return {\n        dependencies: [\"command\"],\n        start(env) {\n            const { command } = env.services;\n\n            const commandRemoveMap = new Map();\n\n            function setLegacyCommand(uniqueId, getCommandDefinition) {\n                const { name, action, options } = getCommandDefinition(env);\n                removeLegacyCommand(uniqueId);\n                commandRemoveMap.set(uniqueId, command.add(name, action, options));\n            }\n\n            function removeLegacyCommand(uniqueId) {\n                if (commandRemoveMap.has(uniqueId)) {\n                    const removeCommand = commandRemoveMap.get(uniqueId);\n                    removeCommand();\n                    commandRemoveMap.delete(uniqueId);\n                }\n            }\n\n            legacyEnv.bus.on(\"set_legacy_command\", null, setLegacyCommand);\n            legacyEnv.bus.on(\"remove_legacy_command\", null, removeLegacyCommand);\n        },\n    };\n}\n\nexport function makeLegacyDropdownService(legacyEnv) {\n    return {\n        dependencies: [\"ui\", \"hotkey\"],\n        start(_, { ui, hotkey }) {\n            legacyEnv.services.ui = ui;\n            legacyEnv.services.hotkey = hotkey;\n        },\n    };\n}\n\nexport function makeLegacySessionService(legacyEnv, session) {\n    return {\n        dependencies: [\"user\"],\n        start(env) {\n            // userContext, Object.create is incompatible with legacy new Context\n            function mapContext() {\n                return Object.assign({}, env.services.user.context);\n            }\n            Object.defineProperty(legacyEnv.session, \"userContext\", {\n                get: () => mapContext(),\n            });\n            Object.defineProperty(session, \"user_context\", {\n                get: () => mapContext(),\n            });\n        },\n    };\n}\n\nexport function mapLegacyEnvToWowlEnv(legacyEnv, wowlEnv) {\n    // rpc\n    legacyEnv.session.rpc = (...args) => {\n        let rejection;\n        const prom = new Promise((resolve, reject) => {\n            const [route, params, settings = {}] = args;\n            // Add user context in kwargs if there are kwargs\n            if (params && params.kwargs) {\n                params.kwargs.context = Object.assign(\n                    {},\n                    legacyEnv.session.user_context,\n                    params.kwargs.context,\n                );\n            }\n            const jsonrpc = wowlEnv.services.rpc(route, params, {\n                silent: settings.shadow,\n                xhr: settings.xhr,\n            });\n            rejection = () => {\n                jsonrpc.abort();\n            };\n            jsonrpc.then(resolve).catch((reason) => {\n                if (reason instanceof RPCError || reason instanceof ConnectionLostError) {\n                    // we do not reject an error here because we want to pass through\n                    // the legacy guardedCatch code\n                    reject({ message: reason, event: $.Event(), legacy: true });\n                } else if (reason instanceof ConnectionAbortedError) {\n                    reject({ message: reason.message, event: $.Event(\"abort\") });\n                } else {\n                    reject(reason);\n                }\n            });\n        });\n        prom.abort = rejection;\n        return prom;\n    };\n    // Storages\n    function mapStorage(storage) {\n        const StorageService = AbstractStorageService.extend({ storage });\n        return new StorageService();\n    }\n\n    legacyEnv.services.local_storage = mapStorage(browser.localStorage);\n    legacyEnv.services.session_storage = mapStorage(browser.sessionStorage);\n    // map WebClientReady\n    wowlEnv.bus.on(\"WEB_CLIENT_READY\", null, () => {\n        legacyEnv.bus.trigger(\"web_client_ready\");\n    });\n\n    wowlEnv.bus.on(\"SCROLLER:ANCHOR_LINK_CLICKED\", null, (payload) => {\n        legacyEnv.bus.trigger(\"SCROLLER:ANCHOR_LINK_CLICKED\", payload);\n    });\n\n    legacyEnv.bus.on(\"clear_cache\", null, () => {\n        wowlEnv.bus.trigger(\"CLEAR-CACHES\");\n    });\n}\n\nconst reBSTooltip = /^bs-.*$/;\n\nexport function cleanDomFromBootstrap() {\n    const body = document.body;\n    // multiple bodies in tests\n    // Bootstrap tooltips\n    const tooltips = body.querySelectorAll(\"body .tooltip\");\n    for (const tt of tooltips) {\n        if (Array.from(tt.classList).find((cls) => reBSTooltip.test(cls))) {\n            tt.parentNode.removeChild(tt);\n        }\n    }\n}\n\nexport function makeLegacyNotificationService(legacyEnv) {\n    return {\n        dependencies: [\"notification\"],\n        start(env) {\n            let notifId = 0;\n            const idsToRemoveFn = {};\n\n            function notify({\n                title,\n                message,\n                subtitle,\n                buttons = [],\n                sticky,\n                type,\n                className,\n                onClose,\n            }) {\n                if (subtitle) {\n                    title = [title, subtitle].filter(Boolean).join(\" \");\n                }\n                if (!message && title) {\n                    message = title;\n                    title = undefined;\n                }\n\n                buttons = buttons.map((button) => {\n                    return {\n                        name: button.text,\n                        icon: button.icon,\n                        primary: button.primary,\n                        onClick: button.click,\n                    };\n                });\n\n                const removeFn = env.services.notification.add(_.escape(message), {\n                    sticky,\n                    title,\n                    type,\n                    className,\n                    onClose,\n                    buttons,\n                    messageIsHtml: true,\n                });\n                const id = ++notifId;\n                idsToRemoveFn[id] = removeFn;\n                return id;\n            }\n\n            function close(id, _, wait) {\n                //the legacy close method had 3 arguments : the notification id, silent and wait.\n                //the new close method only has 2 arguments : the notification id and wait.\n                const removeFn = idsToRemoveFn[id];\n                delete idsToRemoveFn[id];\n                if (wait) {\n                    browser.setTimeout(() => {\n                        removeFn(id);\n                    }, wait);\n                } else {\n                    removeFn(id);\n                }\n            }\n\n            legacyEnv.services.notification = { notify, close };\n        },\n    };\n}\n\nexport function makeLegacyCrashManagerService(legacyEnv) {\n    return {\n        dependencies: [\"dialog\"],\n        start(env) {\n            legacyEnv.services.crash_manager = {\n                show_message(message) {\n                    env.services.dialog.add(ErrorDialog, { traceback: message });\n                },\n                rpc_error(errorResponse) {\n                    // Will be handled by error_service\n                    Promise.reject(makeErrorFromResponse(errorResponse));\n                },\n            };\n        },\n    };\n}\n\nexport function wrapSuccessOrFail(promise, { on_success, on_fail } = {}) {\n    return promise.then(on_success || (() => {})).catch((reason) => {\n        let alreadyThrown = false;\n        if (on_fail) {\n            alreadyThrown = on_fail(reason) === \"alreadyThrown\";\n        }\n        if (reason instanceof Error && !alreadyThrown) {\n            throw reason;\n        }\n    });\n}\n\nexport function makeLegacyRainbowManService(legacyEnv) {\n    return {\n        dependencies: [\"effect\"],\n        start(env, { effect }) {\n            legacyEnv.bus.on(\"show-effect\", null, (payload) => {\n                effect.add(payload);\n            });\n        },\n    };\n}\n", "odoo.define('web.OwlCompatibility', function () {\n    \"use strict\";\n\n    /**\n     * This file defines the necessary tools for the transition phase where Odoo\n     * legacy widgets and Owl components will coexist. There are two possible\n     * scenarios:\n     *  1) An Owl component has to instantiate legacy widgets\n     *  2) A legacy widget has to instantiate Owl components\n     */\n\n    const { Component, hooks, tags } = owl;\n    const { useRef, useSubEnv } = hooks;\n    const { xml } = tags;\n\n    const widgetSymbol = odoo.widgetSymbol;\n    const children = new WeakMap(); // associates legacy widgets with their Owl children\n\n    const templateForLegacy = tags.xml`<div/>`;\n    const templateForOwl = tags.xml`<t t-component=\"props.Component\" t-props=\"childProps\" />`;\n    /**\n     * Case 1) An Owl component has to instantiate legacy widgets\n     * ----------------------------------------------------------\n     *\n     * The ComponentAdapter is an Owl component meant to be used as universal\n     * adapter for Owl components that embed Odoo legacy widgets (or dynamically\n     * both Owl components and Odoo legacy widgets), e.g.:\n     *\n     *                           Owl Component\n     *                                 |\n     *                         ComponentAdapter (Owl component)\n     *                                 |\n     *                       Legacy Widget(s) (or Owl component(s))\n     *\n     *\n     * The adapter takes the component/widget class as 'Component' prop, and the\n     * arguments (except first arg 'parent') to initialize it as props.\n     * For instance:\n     *     <ComponentAdapter Component=\"LegacyWidget\" params=\"params\"/>\n     * will be translated to:\n     *     const LegacyWidget = this.props.Component;\n     *     const legacyWidget = new LegacyWidget(this, this.props.params);\n     *\n     * If more than one argument (in addition to 'parent') is given to initialize\n     * the legacy widget, the arguments order (to initialize the sub widget) has\n     * to be somehow specified. There are two alternatives. One can either (1)\n     * specify the prop 'widgetArgs', corresponding to the array of arguments,\n     * otherwise (2) a subclass of ComponentAdapter has to be defined. This\n     * subclass must override the 'widgetArgs' getter to translate arguments\n     * received as props to an array of arguments for the call to init.\n     * For instance:\n     *     (1) <ComponentAdapter Component=\"LegacyWidget\" firstArg=\"a\" secondArg=\"b\" widgetsArgs=\"[a, b]\"/>\n     *     (2) class SpecificAdapter extends ComponentAdapter {\n     *             get widgetArgs() {\n     *                 return [this.props.firstArg, this.props.secondArg];\n     *             }\n     *         }\n     *         <SpecificAdapter Component=\"LegacyWidget\" firstArg=\"a\" secondArg=\"b\"/>\n     *\n     * If the legacy widget has to be updated when props change, one must define\n     * a subclass of ComponentAdapter to override 'updateWidget' and 'renderWidget'. The\n     * 'updateWidget' function takes the nextProps as argument, and should update the\n     * internal state of the widget (might be async, and return a Promise).\n     * However, to ensure that the DOM is updated all at once, it shouldn't do\n     * a re-rendering. This is the role of function 'renderWidget', which will be\n     * called just before patching the DOM, and which thus must be synchronous.\n     * For instance:\n     *     class SpecificAdapter extends ComponentAdapter {\n     *         updateWidget(nextProps) {\n     *             return this.widget.updateState(nextProps);\n     *         }\n     *         renderWidget() {\n     *             return this.widget.render();\n     *         }\n     *     }\n     */\n    class ComponentAdapter extends Component {\n        /**\n         * Creates the template on-the-fly, depending on the type of Component\n         * (legacy widget or Owl component).\n         *\n         * @override\n         */\n        constructor(parent, props) {\n            if (!props.Component) {\n                throw Error(`ComponentAdapter: 'Component' prop is missing.`);\n            }\n            let template;\n            if (!(props.Component.prototype instanceof Component)) {\n                template = templateForLegacy;\n            } else {\n                template = templateForOwl;\n            }\n            ComponentAdapter.template = template;\n            super(...arguments);\n            this.template = template;\n            ComponentAdapter.template = null;\n\n            this.widget = null; // widget instance, if Component is a legacy widget\n        }\n\n        get childProps() {\n            if (!this._childProps) {\n                this._childProps = Object.assign({}, this.props);\n                delete this._childProps.Component;\n            }\n            return this._childProps;\n        }\n\n        /**\n         * Starts the legacy widget (not in the DOM yet)\n         *\n         * @override\n         */\n        willStart() {\n            if (!(this.props.Component.prototype instanceof Component)) {\n                this.widget = new this.props.Component(this, ...this.widgetArgs);\n                return this.widget._widgetRenderAndInsert(() => {});\n            }\n        }\n\n        /**\n         * Updates the internal state of the legacy widget (but doesn't re-render\n         * it yet).\n         *\n         * @override\n         */\n        willUpdateProps(nextProps) {\n            if (this.widget) {\n                return this.updateWidget(nextProps);\n            }\n        }\n\n        /**\n         * Hooks just before the actual patch to replace the fake div in the\n         * vnode by the actual node of the legacy widget. If the widget has to\n         * be re-render (because it has previously been updated), re-render it.\n         * This must be synchronous.\n         *\n         * @override\n         */\n        __patch(target, vnode) {\n            if (this.widget) {\n                if (this.__owl__.vnode) { // not at first rendering\n                    this.renderWidget();\n                }\n                vnode.elm = this.widget.el;\n            }\n            const result = super.__patch(...arguments);\n            if (this.widget && this.el !== this.widget.el) {\n                this.__owl__.vnode.elm = this.widget.el;\n            }\n            return result;\n        }\n\n        /**\n         * @override\n         */\n        mounted() {\n            if (this.widget && this.widget.on_attach_callback) {\n                this.widget.on_attach_callback();\n            }\n        }\n\n        /**\n         * @override\n         */\n        willUnmount() {\n            if (this.widget && this.widget.on_detach_callback) {\n                this.widget.on_detach_callback();\n            }\n        }\n\n        /**\n         * @override\n         */\n        __destroy() {\n            super.__destroy(...arguments);\n            if (this.widget) {\n                this.widget.destroy();\n            }\n        }\n\n        /**\n         * Getter that translates the props (except 'Component') into the array\n         * of arguments used to initialize the legacy widget.\n         *\n         * Must be overriden if at least two props (other that Component) are\n         * given.\n         *\n         * @returns {Array}\n         */\n        get widgetArgs() {\n            if (this.props.widgetArgs) {\n                return this.props.widgetArgs;\n            }\n            const args = Object.keys(this.props);\n            args.splice(args.indexOf('Component'), 1);\n            if (args.length > 1) {\n                throw new Error(`ComponentAdapter has more than 1 argument, 'widgetArgs' must be overriden.`);\n            }\n            return args.map(a => this.props[a]);\n        }\n\n        /**\n         * Can be overriden to update the internal state of the widget when props\n         * change. To ensure that the DOM is updated at once, this function should\n         * not do a re-rendering (which should be done by 'render' instead).\n         *\n         * @param {Object} nextProps\n         * @returns {Promise}\n         */\n        updateWidget(/*nextProps*/) {\n            if (this.env.isDebug('assets')) {\n                console.warn(`ComponentAdapter: Widget could not be updated, maybe override 'updateWidget' function?`);\n            }\n        }\n\n        /**\n         * Can be overriden to re-render the widget after an update. This\n         * function will be called just before patchin the DOM, s.t. the DOM is\n         * updated at once. It must be synchronous\n         */\n        renderWidget() {\n            if (this.env.isDebug('assets')) {\n                console.warn(`ComponentAdapter: Widget could not be re-rendered, maybe override 'renderWidget' function?`);\n            }\n        }\n\n        /**\n         * Mocks _trigger_up to redirect Odoo legacy events to OWL events.\n         *\n         * @private\n         * @param {OdooEvent} ev\n         */\n        _trigger_up(ev) {\n            const evType = ev.name;\n            const payload = ev.data;\n            if (evType === 'call_service') {\n                let args = payload.args || [];\n                if (payload.service === 'ajax' && payload.method === 'rpc') {\n                    // ajax service uses an extra 'target' argument for rpc\n                    args = args.concat(ev.target);\n                }\n                const service = this.env.services[payload.service];\n                //If the service doesn't exist it means that it was translated to Owl\n                if (service) {\n                    const result = service[payload.method].apply(service, args);\n                    payload.callback(result);\n                } else {\n                    throw new Error(\n                        `The service \"${payload.service}\" is not present in the legacy owl environment.\n                         You should probably create a mapper in @web/legacy/utils`\n                    );\n                }\n            } else if (evType === 'get_session') {\n                if (payload.callback) {\n                    payload.callback(this.env.session);\n                }\n            } else if (evType === 'load_views') {\n                const params = {\n                    model: payload.modelName,\n                    context: payload.context,\n                    views_descr: payload.views,\n                };\n                this.env.dataManager\n                    .load_views(params, payload.options || {})\n                    .then(payload.on_success);\n            } else if (evType === 'load_filters') {\n                return this.env.dataManager\n                    .load_filters(payload)\n                    .then(payload.on_success);\n            } else {\n                payload.__targetWidget = ev.target;\n                this.trigger(evType.replace(/_/g, '-'), payload);\n            }\n        }\n    }\n\n\n    /**\n     * Case 2) A legacy widget has to instantiate Owl components\n     * ---------------------------------------------------------\n     *\n     * The WidgetAdapterMixin and the ComponentWrapper are meant to be used\n     * together when an Odoo legacy widget needs to instantiate Owl components.\n     * In this case, the widgets/components hierarchy would look like:\n     *\n     *             Legacy Widget + WidgetAdapterMixin\n     *                          |\n     *                 ComponentWrapper (Owl component)\n     *                          |\n     *                    Owl Component\n     *\n     * In this case, the parent legacy widget must use the WidgetAdapterMixin,\n     * which ensures that Owl hooks (mounted, willUnmount, destroy...) are\n     * properly called on the sub components. Moreover, it must instantiate a\n     * ComponentWrapper, and provide it the Owl component class to use alongside\n     * its props. This wrapper will ensure that the Owl component will be\n     * correctly updated (with willUpdateProps) like it would be if it was embed\n     * in an Owl hierarchy. Moreover, this wrapper automatically redirects all\n     * events triggered by the Owl component (or its descendants) to legacy\n     * custom events (trigger_up) on the parent legacy widget.\n\n     * For example:\n     *      class MyComponent extends Component {}\n     *      MyComponent.template = xml`<div>Owl component with value <t t-esc=\"props.value\"/></div>`;\n     *      const MyWidget = Widget.extend(WidgetAdapterMixin, {\n     *          start() {\n     *              this.component = new ComponentWrapper(this, MyComponent, {value: 44});\n     *              return this.component.mount(this.el);\n     *          },\n     *          update() {\n     *              return this.component.update({value: 45});\n     *          },\n     *      });\n     */\n    const WidgetAdapterMixin = {\n        /**\n         * Calls on_attach_callback on each child ComponentWrapper, which will\n         * call __callMounted on each sub component (recursively), to mark them\n         * as mounted.\n         */\n        on_attach_callback() {\n            for (const component of children.get(this) || []) {\n                component.on_attach_callback();\n            }\n        },\n        /**\n         * Calls on_detach_callback on each child ComponentWrapper, which will\n         * call __callWillUnmount to mark itself and its children as no longer\n         * mounted.\n         */\n        on_detach_callback() {\n            for (const component of children.get(this) || []) {\n                component.on_detach_callback();\n            }\n        },\n        /**\n         * Destroys each sub component when the widget is destroyed. We call the\n         * private __destroy function as there is no need to remove the el from\n         * the DOM (will be removed alongside this widget).\n         */\n        destroy() {\n            for (const component of children.get(this) || []) {\n                component.env.qweb.off(\"update\", component);\n                component.__destroy();\n            }\n            children.delete(this);\n        },\n    };\n    class ComponentWrapper extends Component {\n        /**\n         * Stores the reference of the instance in the parent (in __components).\n         * Also creates a sub environment with a function that will be called\n         * just before events are triggered (see component_extension.js). This\n         * allows to add DOM event listeners on-the-fly, to redirect those Owl\n         * custom (yet DOM) events to legacy custom events (trigger_up).\n         *\n         * @override\n         * @param {Widget|null} parent\n         * @param {Component} Component this is a Class, not an instance\n         * @param {Object} props\n         */\n        constructor(parent, Component, props) {\n            if (parent instanceof Component) {\n                throw new Error('ComponentWrapper must be used with a legacy Widget as parent');\n            }\n            super(null, props);\n            if (parent) {\n                this._register(parent);\n            }\n            useSubEnv({\n                [widgetSymbol]: this._addListener.bind(this)\n            });\n\n            this.parentWidget = parent;\n            this.Component = Component;\n            this.props = props || {};\n            this._handledEvents = new Set(); // Owl events we are redirecting\n\n            this.componentRef = useRef(\"component\");\n        }\n\n        /**\n         * Calls __callMounted on itself and on each sub component (as this\n         * function isn't recursive) when the component is appended into the DOM.\n         */\n        on_attach_callback() {\n            function recursiveCallMounted(component) {\n                const { status, currentFiber } = component.__owl__;\n\n                if (status === 2 && currentFiber && !currentFiber.isCompleted) {\n                    // the component is rendered but another rendering is being done\n                    // it would be foolish to declare the component and children as mounted\n                    return;\n                }\n                if (\n                   status !== 2 /* RENDERED */ &&\n                   status !== 3 /* MOUNTED */ &&\n                   status !== 4 /* UNMOUNTED */\n                ) {\n                    // Avoid calling mounted on a component that is not even\n                    // rendered. Doing otherwise will lead to a crash if a\n                    // specific mounted callback is legitimately relying on the\n                    // component being mounted.\n                    return;\n                }\n                for (const key in component.__owl__.children) {\n                    recursiveCallMounted(component.__owl__.children[key]);\n                }\n                component.__callMounted();\n            }\n            recursiveCallMounted(this);\n        }\n        /**\n         * Calls __callWillUnmount to notify the component it will be unmounted.\n         */\n        on_detach_callback() {\n            this.__callWillUnmount();\n        }\n\n        /**\n         * Overrides to remove the reference to this component in the parent.\n         *\n         * @override\n         */\n        destroy() {\n            if (this.parentWidget) {\n                const parentChildren = children.get(this.parentWidget);\n                if (parentChildren) {\n                    const index = parentChildren.indexOf(this);\n                    children.get(this.parentWidget).splice(index, 1);\n                }\n            }\n            super.destroy();\n        }\n\n        /**\n         * Changes the parent of the wrapper component. This is a function of the\n         * legacy widgets (ParentedMixin), so we have to handle it someway.\n         * It simply removes the reference of this component in the current\n         * parent (if there was one), and adds the reference to the new one.\n         *\n         * We have at least one usecase for this: in views, the renderer is\n         * instantiated without parent, then a controller is instantiated with\n         * the renderer as argument, and finally, setParent is called to set the\n         * controller as parent of the renderer. This implies that Owl renderers\n         * can't trigger events in their constructor.\n         *\n         * @param {Widget} parent\n         */\n        setParent(parent) {\n            if (parent instanceof Component) {\n                throw new Error('ComponentWrapper must be used with a legacy Widget as parent');\n            }\n            this._register(parent);\n            if (this.parentWidget) {\n                const parentChildren = children.get(this.parentWidget);\n                parentChildren.splice(parentChildren.indexOf(this), 1);\n            }\n            this.parentWidget = parent;\n        }\n\n        /**\n         * Updates the props and re-render the component.\n         *\n         * @async\n         * @param {Object} props\n         * @return {Promise}\n         */\n        async update(props = {}) {\n            if (this.__owl__.status === 5 /* destroyed */) {\n                return new Promise(() => {});\n            }\n\n            Object.assign(this.props, props);\n\n            let prom;\n            if (this.__owl__.status === 3 /* mounted */) {\n                prom = this.render();\n            } else {\n                // we may not be in the DOM, but actually want to be redrawn\n                // (e.g. we were detached from the DOM, and now we're going to\n                // be re-attached, but we need to be reloaded first). In this\n                // case, we have to call 'mount' as Owl would skip the rendering\n                // if we simply call render.\n                prom = this.mount(...this._mountArgs);\n            }\n            return prom;\n        }\n\n        /**\n         * Adds an event handler that will redirect the given Owl event to an\n         * Odoo legacy event. This function is called just before the event is\n         * actually triggered.\n         *\n         * @private\n         * @param {string} evType\n         */\n        _addListener(evType) {\n            if (this.parentWidget && !this._handledEvents.has(evType)) {\n                this._handledEvents.add(evType);\n                this.el.addEventListener(evType, ev => {\n                    // as the WrappeComponent has the same root node as the\n                    // actual sub Component, we have to check that the event\n                    // hasn't been stopped by that component (it would naturally\n                    // call stopPropagation, whereas it should actually call\n                    // stopImmediatePropagation to prevent from getting here)\n                    if (!ev.cancelBubble) {\n                        ev.stopPropagation();\n                        const detail = Object.assign({}, ev.detail, {\n                            __originalComponent: ev.originalComponent,\n                        });\n                        this.parentWidget.trigger_up(ev.type.replace(/-/g, '_'), detail);\n                    }\n                });\n            }\n        }\n\n        /**\n         * Registers this instance as a child of the given parent in the\n         * 'children' weakMap.\n         *\n         * @private\n         * @param {Widget} parent\n         */\n        _register(parent) {\n            let parentChildren = children.get(parent);\n            if (!parentChildren) {\n                parentChildren = [];\n                children.set(parent, parentChildren);\n            }\n            parentChildren.push(this);\n        }\n        /**\n         * Stores mount target and position at first mount. That way, when updating\n         * while out of DOM, we know where and how to remount.\n         * @see update()\n         * @override\n         */\n        async mount(target, options) {\n            if (options && options.position === 'self') {\n                throw new Error(\n                    'Unsupported position: \"self\" is not allowed for wrapper components. ' +\n                    'Contact the JS Framework team or open an issue if your use case is relevant.'\n                );\n            }\n            this._mountArgs = arguments;\n            return super.mount(...arguments);\n        }\n\n        //----------------------------------------------------------------------\n        // Getters\n        //----------------------------------------------------------------------\n\n        get $el() {\n            return $(this.el);\n        }\n    }\n    ComponentWrapper.template = xml`<t t-component=\"Component\" t-props=\"props\" t-ref=\"component\"/>`;\n\n    return {\n        ComponentAdapter,\n        ComponentWrapper,\n        WidgetAdapterMixin,\n    };\n});\n", "odoo.define('web.session', function (require) {\n\"use strict\";\n\nvar Session = require('web.Session');\n\nvar session = new Session(undefined, undefined, {use_cors: false});\nsession.is_bound = session.session_bind();\n\nreturn session;\n\n});\n", "odoo.define(\"web.public_env\", function (require) {\n    \"use strict\";\n\n    /**\n     * This file defines the env to use in the public side.\n     */\n\n    const commonEnv = require(\"web.commonEnv\");\n\n    return commonEnv;\n});\n", "/** @odoo-module alias=web.public.root */\n\nimport ajax from 'web.ajax';\nimport dom from 'web.dom';\nimport env from 'web.public_env';\nimport session from 'web.session';\nimport utils from 'web.utils';\nimport publicWidget from 'web.public.widget';\nimport { registry } from '@web/core/registry';\n\nimport AbstractService from \"web.AbstractService\";\nimport legacyEnv from \"web.public_env\";\nimport lazyloader from \"web.public.lazyloader\";\n\nimport {\n    makeLegacyNotificationService,\n    makeLegacyRpcService,\n    makeLegacySessionService,\n    makeLegacyDialogMappingService,\n    mapLegacyEnvToWowlEnv,\n    makeLegacyRainbowManService,\n} from \"../../utils\";\nimport { ComponentAdapter } from \"web.OwlCompatibility\";\n\nimport { loadBundleTemplates } from \"@web/core/assets\";\nimport { makeEnv, startServices } from \"@web/env\";\nimport { MainComponentsContainer } from \"@web/core/main_components_container\";\nimport { browser } from '@web/core/browser/browser';\nimport { jsonrpc } from '@web/core/network/rpc_service';\nconst serviceRegistry = registry.category(\"services\");\n\n// Load localizations outside the PublicRoot to not wait for DOM ready (but\n// wait for them in PublicRoot)\nfunction getLang() {\n    var html = document.documentElement;\n    return (html.getAttribute('lang') || 'en_US').replace('-', '_');\n}\nvar lang = utils.get_cookie('frontend_lang') || getLang(); // FIXME the cookie value should maybe be in the ctx?\n// momentjs don't have config for en_US, so avoid useless RPC\nvar localeDef = lang !== 'en_US' ? ajax.loadJS('/web/webclient/locale/' + lang.replace('-', '_')) : Promise.resolve();\n\n\n/**\n * Element which is designed to be unique and that will be the top-most element\n * in the widget hierarchy. So, all other widgets will be indirectly linked to\n * this Class instance. Its main role will be to retrieve RPC demands from its\n * children and handle them.\n */\nexport const PublicRoot = publicWidget.RootWidget.extend({\n    events: _.extend({}, publicWidget.RootWidget.prototype.events || {}, {\n        'submit .js_website_submit_form': '_onWebsiteFormSubmit',\n        'click .js_disable_on_click': '_onDisableOnClick',\n    }),\n    custom_events: _.extend({}, publicWidget.RootWidget.prototype.custom_events || {}, {\n        call_service: '_onCallService',\n        context_get: '_onContextGet',\n        main_object_request: '_onMainObjectRequest',\n        widgets_start_request: '_onWidgetsStartRequest',\n        widgets_stop_request: '_onWidgetsStopRequest',\n    }),\n\n    /**\n     * @constructor\n     */\n    init: function () {\n        this._super.apply(this, arguments);\n        this.env = env;\n        this.publicWidgets = [];\n    },\n    /**\n     * @override\n     */\n    willStart: function () {\n        // TODO would be even greater to wait for localeDef only when necessary\n        return Promise.all([\n            this._super.apply(this, arguments),\n            session.is_bound,\n            localeDef\n        ]);\n    },\n    /**\n     * @override\n     */\n    start: function () {\n        var defs = [\n            this._super.apply(this, arguments),\n            this._startWidgets()\n        ];\n\n        // Display image thumbnail\n        this.$(\".o_image[data-mimetype^='image']\").each(function () {\n            var $img = $(this);\n            if (/gif|jpe|jpg|png/.test($img.data('mimetype')) && $img.data('src')) {\n                $img.css('background-image', \"url('\" + $img.data('src') + \"')\");\n            }\n        });\n\n        // Auto scroll\n        if (window.location.hash.indexOf(\"scrollTop=\") > -1) {\n            this.el.scrollTop = +window.location.hash.match(/scrollTop=([0-9]+)/)[1];\n        }\n\n        // Fix for IE:\n        if ($.fn.placeholder) {\n            $('input, textarea').placeholder();\n        }\n\n        this.$el.children().on('error.datetimepicker', this._onDateTimePickerError.bind(this));\n\n        return Promise.all(defs);\n    },\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    /**\n     * Retrieves the global context of the public environment. This is the\n     * context which is automatically added to each RPC.\n     *\n     * @private\n     * @param {Object} [context]\n     * @returns {Object}\n     */\n    _getContext: function (context) {\n        return _.extend({\n            'lang': getLang(),\n        }, context || {});\n    },\n    /**\n     * Retrieves the global context of the public environment (as\n     * @see _getContext) but with extra informations that would be useless to\n     * send with each RPC.\n     *\n     * @private\n     * @param {Object} [context]\n     * @returns {Object}\n     */\n    _getExtraContext: function (context) {\n        return this._getContext(context);\n    },\n    /**\n     * @private\n     * @param {Object} [options]\n     * @returns {Object}\n     */\n    _getPublicWidgetsRegistry: function (options) {\n        return publicWidget.registry;\n    },\n    /**\n     * As the root instance is designed to be unique, the associated\n     * registry has been instantiated outside of the class and is simply\n     * returned here.\n     *\n     * @private\n     * @override\n     */\n    _getRegistry: function () {\n        return registry.category(\"public_root_widgets\");\n    },\n    /**\n     * Creates an PublicWidget instance for each DOM element which matches the\n     * `selector` key of one of the registered widgets\n     * (@see PublicWidget.selector).\n     *\n     * @private\n     * @param {jQuery} [$from]\n     *        only initialize the public widgets whose `selector` matches the\n     *        element or one of its descendant (default to the wrapwrap element)\n     * @param {Object} [options]\n     * @returns {Deferred}\n     */\n    _startWidgets: function ($from, options) {\n        var self = this;\n\n        if ($from === undefined) {\n            $from = this.$('#wrapwrap');\n            if (!$from.length) {\n                // TODO Remove this once all frontend layouts possess a\n                // #wrapwrap element (which is necessary for those pages to be\n                // adapted correctly if the user installs website).\n                $from = this.$el;\n            }\n        }\n\n        options = Object.assign({}, options, {\n            wysiwyg: $('#wrapwrap').data('wysiwyg'),\n        });\n\n        this._stopWidgets($from);\n\n        var defs = _.map(this._getPublicWidgetsRegistry(options), function (PublicWidget) {\n            var selector = PublicWidget.prototype.selector || '';\n            var $target = dom.cssFind($from, selector, true);\n\n            var defs = _.map($target, function (el) {\n                var widget = new PublicWidget(self, options);\n                self.publicWidgets.push(widget);\n                return widget.attachTo($(el));\n            });\n            return Promise.all(defs);\n        });\n        return Promise.all(defs);\n    },\n    /**\n     * Destroys all registered widget instances. Website would need this before\n     * saving while in edition mode for example.\n     *\n     * @private\n     * @param {jQuery} [$from]\n     *        only stop the public widgets linked to the given element(s) or one\n     *        of its descendants\n     */\n    _stopWidgets: function ($from) {\n        var removedWidgets = _.map(this.publicWidgets, function (widget) {\n            if (!$from\n                || $from.filter(widget.el).length\n                || $from.find(widget.el).length) {\n                widget.destroy();\n                return widget;\n            }\n            return null;\n        });\n        this.publicWidgets = _.difference(this.publicWidgets, removedWidgets);\n    },\n\n    //--------------------------------------------------------------------------\n    // Handlers\n    //--------------------------------------------------------------------------\n\n    /**\n     * Calls the requested service from the env. Automatically adds the global\n     * context to RPCs.\n     *\n     * @private\n     * @param {OdooEvent} event\n     */\n    _onCallService: function (ev) {\n        function _computeContext(context, noContextKeys) {\n            context = _.extend({}, this._getContext(), context);\n            if (noContextKeys) {\n                context = _.omit(context, noContextKeys);\n            }\n            return JSON.parse(JSON.stringify(context));\n        }\n\n        const payload = ev.data;\n        let args = payload.args || [];\n        if (payload.service === 'ajax' && payload.method === 'rpc') {\n            // ajax service uses an extra 'target' argument for rpc\n            args = args.concat(ev.target);\n\n            var route = args[0];\n            if (_.str.startsWith(route, '/web/dataset/call_kw/')) {\n                var params = args[1];\n                var options = args[2];\n                var noContextKeys;\n                if (options) {\n                    noContextKeys = options.noContextKeys;\n                    args[2] = _.omit(options, 'noContextKeys');\n                }\n                params.kwargs.context = _computeContext.call(this, params.kwargs.context, noContextKeys);\n            }\n        } else if (payload.service === 'ajax' && payload.method === 'loadLibs') {\n            args[1] = _computeContext.call(this, args[1]);\n        } else {\n            return;\n        }\n\n        const service = this.env.services[payload.service];\n        const result = service[payload.method].apply(service, args);\n        payload.callback(result);\n        ev.stopPropagation();\n    },\n    /**\n     * Called when someone asked for the global public context.\n     *\n     * @private\n     * @param {OdooEvent} ev\n     */\n    _onContextGet: function (ev) {\n        if (ev.data.extra) {\n            ev.data.callback(this._getExtraContext(ev.data.context));\n        } else {\n            ev.data.callback(this._getContext(ev.data.context));\n        }\n    },\n    /**\n     * Checks information about the page main object.\n     *\n     * @private\n     * @param {OdooEvent} ev\n     */\n    _onMainObjectRequest: function (ev) {\n        var repr = $('html').data('main-object');\n        var m = repr.match(/(.+)\\((\\d+),(.*)\\)/);\n        ev.data.callback({\n            model: m[1],\n            id: m[2] | 0,\n            viewid: parseInt(document.documentElement.dataset.viewid),\n        });\n    },\n    /**\n     * Called when the root is notified that the public widgets have to be\n     * (re)started.\n     *\n     * @private\n     * @param {OdooEvent} ev\n     */\n    _onWidgetsStartRequest: function (ev) {\n        this._startWidgets(ev.data.$target, ev.data.options)\n            .then(ev.data.onSuccess)\n            .guardedCatch(ev.data.onFailure);\n    },\n    /**\n     * Called when the root is notified that the public widgets have to be\n     * stopped.\n     *\n     * @private\n     * @param {OdooEvent} ev\n     */\n    _onWidgetsStopRequest: function (ev) {\n        this._stopWidgets(ev.data.$target);\n    },\n    /**\n     * @todo review\n     * @private\n     */\n    _onWebsiteFormSubmit: function (ev) {\n        var $buttons = $(ev.currentTarget).find('button[type=\"submit\"], a.a-submit');\n        _.each($buttons, function (btn) {\n            var $btn = $(btn);\n            $btn.prepend('<i class=\"fa fa-circle-o-notch fa-spin\"></i> ');\n            $btn.prop('disabled', true);\n        });\n    },\n    /**\n     * Called when the root is notified that the button should be\n     * disabled after the first click.\n     *\n     * @private\n     * @param {Event} ev\n     */\n    _onDisableOnClick: function (ev) {\n        $(ev.currentTarget).addClass('disabled');\n    },\n    /**\n     * Library clears the wrong date format so just ignore error\n     *\n     * @private\n     * @param {Event} ev\n     */\n    _onDateTimePickerError: function (ev) {\n        return false;\n    },\n});\n\nconst { Component, mount } = owl;\n\n/**\n * Configure Owl with the public env\n */\nowl.config.mode = legacyEnv.isDebug() ? \"dev\" : \"prod\";\nowl.Component.env = legacyEnv;\n\n/**\n * This widget is important, because the tour manager needs a root widget in\n * order to work. The root widget must be a service provider with the ajax\n * service, so that the tour manager can let the server know when tours have\n * been consumed.\n */\nexport async function createPublicRoot(RootWidget) {\n    await lazyloader.allScriptsLoaded;\n    AbstractService.prototype.deployServices(legacyEnv);\n    // add a bunch of mapping services that will redirect service calls from the legacy env\n    // to the wowl env\n    serviceRegistry.add(\"legacy_rpc\", makeLegacyRpcService(legacyEnv));\n    serviceRegistry.add(\"legacy_session\", makeLegacySessionService(legacyEnv, session));\n    serviceRegistry.add(\"legacy_notification\", makeLegacyNotificationService(legacyEnv));\n    serviceRegistry.add(\"legacy_dialog_mapping\", makeLegacyDialogMappingService(legacyEnv));\n    serviceRegistry.add(\"legacy_rainbowman_service\", makeLegacyRainbowManService(legacyEnv));\n    await Promise.all([owl.utils.whenReady(), session.is_bound]);\n\n    // Patch browser.fetch and the rpc service to use the correct base url when\n    // embeded in an external page\n    const baseUrl = session.prefix;\n    const { fetch } = browser;\n    browser.fetch = function(url, ...args) {\n        if (!url.match(/^(?:https?:)?\\/\\//)) {\n            url = baseUrl + url;\n        }\n        return fetch(url, ...args);\n    }\n    serviceRegistry.add(\"rpc\", {\n        async: true,\n        start(env) {\n            let rpcId = 0;\n            return function rpc(route, params = {}, settings) {\n                if (!route.match(/^(?:https?:)?\\/\\//)) {\n                    route = baseUrl + route;\n                }\n                return jsonrpc(env, rpcId++, route, params, settings);\n            };\n        },\n    }, { force: true });\n\n    const wowlEnv = makeEnv();\n    wowlEnv.qweb.addTemplates(await loadBundleTemplates(\"web.assets_frontend\"));\n    await startServices(wowlEnv);\n    mapLegacyEnvToWowlEnv(legacyEnv, wowlEnv);\n\n    const adapter = new ComponentAdapter(null, { Component }); // Used for _trigger_up compat layer\n    const publicRoot = new RootWidget(adapter);\n    await Promise.all([\n        mount(MainComponentsContainer, {\n            target: document.body,\n            env: wowlEnv,\n        }),\n        publicRoot.attachTo(document.body),\n    ]);\n    return publicRoot;\n}\n\nexport default { PublicRoot, createPublicRoot };\n", "/** @odoo-module alias=root.widget */\nimport { PublicRoot, createPublicRoot } from \"./public_root\";\n\nexport default createPublicRoot(PublicRoot);\n", "/** @odoo-module alias=web.public.widget */\n\n/**\n * Provides a way to start JS code for public contents.\n */\n\nimport dom from 'web.dom';\nimport session from 'web.session';\nimport Widget from 'web.Widget';\n\n/**\n * Specialized Widget which automatically instantiates child widgets to attach\n * to internal DOM elements once it is started. The widgets to instantiate are\n * known thanks to a linked registry which contains info about the widget\n * classes and jQuery selectors to use to find the elements to attach them to.\n *\n * @todo Merge with 'PublicWidget' ?\n */\nvar RootWidget = Widget.extend({\n    /**\n     * @constructor\n     */\n    init: function () {\n        this._super.apply(this, arguments);\n        this._widgets = [];\n    },\n    /**\n     * @override\n     * @see _attachComponents\n     */\n    start: function () {\n        var defs = [this._super.apply(this, arguments)];\n\n        defs.push(this._attachComponents());\n        this._getRegistry().on(\"UPDATE\", this, ({ operation, value }) => {\n            if (operation === \"add\") {\n                this._attachComponent(value);\n            }\n        });\n\n        return Promise.all(defs);\n    },\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    /**\n     * Instantiates a child widget according to the given registry data.\n     *\n     * @private\n     * @param {Object} childInfo\n     * @param {function} childInfo.Widget - the widget class to instantiate\n     * @param {string} childInfo.selector\n     *        the jQuery selector to use to find the internal DOM element which\n     *        needs to be attached to the instantiated widget\n     * @param {jQuery} [$from] - only check DOM elements which are descendant of\n     *                         the given one. If not given, use this.$el.\n     * @returns {Deferred}\n     */\n    _attachComponent: function (childInfo, $from) {\n        var self = this;\n        var $elements = dom.cssFind($from || this.$el, childInfo.selector);\n        var defs = _.map($elements, function (element) {\n            var w = new childInfo.Widget(self);\n            self._widgets.push(w);\n            return w.attachTo(element);\n        });\n        return Promise.all(defs);\n    },\n    /**\n     * Instantiates the child widgets that need to be according to the linked\n     * registry.\n     *\n     * @private\n     * @param {jQuery} [$from] - only check DOM elements which are descendant of\n     *                         the given one. If not given, use this.$el.\n     * @returns {Deferred}\n     */\n    _attachComponents: function ($from) {\n        var self = this;\n        var childInfos = this._getRegistry().getAll();\n        var defs = _.map(childInfos, function (childInfo) {\n            return self._attachComponent(childInfo, $from);\n        });\n        return Promise.all(defs);\n    },\n    /**\n     * Returns the `RootWidgetRegistry` instance that is linked to this\n     * `RootWidget` instance.\n     *\n     * @abstract\n     * @private\n     * @returns {RootWidgetRegistry}\n     */\n    _getRegistry: function () {},\n});\n\n//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n\n/**\n * Provides a way for executing code once a website DOM element is loaded in the\n * dom.\n */\nvar PublicWidget = Widget.extend({\n    /**\n     * The selector attribute, if defined, allows to automatically create an\n     * instance of this widget on page load for each DOM element which\n     * matches this selector. The `PublicWidget.$target` element will then be\n     * that particular DOM element. This should be the main way of instantiating\n     * `PublicWidget` elements.\n     *\n     * @todo do not make this part of the Widget but rather an info to give when\n     * registering the widget.\n     */\n    selector: false,\n    /**\n     * Extension of @see Widget.events\n     *\n     * A description of the event handlers to bind/delegate once the widget\n     * has been rendered::\n     *\n     *   'click .hello .world': 'async _onHelloWorldClick',\n     *     _^_      _^_           _^_        _^_\n     *      |        |             |          |\n     *      |  (Optional) jQuery   |  Handler method name\n     *      |  delegate selector   |\n     *      |                      |_ (Optional) space separated options\n     *      |                          * async: use the automatic system\n     *      |_ Event name with           making handlers promise-ready (see\n     *         potential jQuery          makeButtonHandler, makeAsyncHandler)\n     *         namespaces\n     *\n     * Note: the values may be replaced by a function declaration. This is\n     * however a deprecated behavior.\n     *\n     * @type {Object}\n     */\n    events: {},\n\n    /**\n     * @constructor\n     * @param {Object} parent\n     * @param {Object} [options]\n     */\n    init: function (parent, options) {\n        this._super.apply(this, arguments);\n        this.options = options || {};\n    },\n    /**\n     * Destroys the widget and basically restores the target to the state it\n     * was before the start method was called (unlike standard widget, the\n     * associated $el DOM is not removed, if this was instantiated thanks to the\n     * selector property).\n     */\n    destroy: function () {\n        if (this.selector) {\n            var $oldel = this.$el;\n            // The difference with the default behavior is that we unset the\n            // associated element first so that:\n            // 1) its events are unbinded\n            // 2) it is not removed from the DOM\n            this.setElement(null);\n        }\n\n        this._super.apply(this, arguments);\n\n        if (this.selector) {\n            // Reassign the variables afterwards to allow extensions to use them\n            // after calling the _super method\n            this.$el = $oldel;\n            this.el = $oldel[0];\n            this.$target = this.$el;\n            this.target = this.el;\n        }\n    },\n    /**\n     * @override\n     */\n    setElement: function () {\n        this._super.apply(this, arguments);\n        if (this.selector) {\n            this.$target = this.$el;\n            this.target = this.el;\n        }\n    },\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    /**\n     * @see this.events\n     * @override\n     */\n    _delegateEvents: function () {\n        var self = this;\n        var originalEvents = this.events;\n\n        var events = {};\n        _.each(this.events, function (method, event) {\n            // If the method is a function, use the default Widget system\n            if (typeof method !== 'string') {\n                events[event] = method;\n                return;\n            }\n            // If the method is only a function name without options, use the\n            // default Widget system\n            var methodOptions = method.split(' ');\n            if (methodOptions.length <= 1) {\n                events[event] = method;\n                return;\n            }\n            // If the method has no meaningful options, use the default Widget\n            // system\n            var isAsync = _.contains(methodOptions, 'async');\n            if (!isAsync) {\n                events[event] = method;\n                return;\n            }\n\n            method = self.proxy(methodOptions[methodOptions.length - 1]);\n            if (_.str.startsWith(event, 'click')) {\n                // Protect click handler to be called multiple times by\n                // mistake by the user and add a visual disabling effect\n                // for buttons.\n                method = dom.makeButtonHandler(method);\n            } else {\n                // Protect all handlers to be recalled while the previous\n                // async handler call is not finished.\n                method = dom.makeAsyncHandler(method);\n            }\n            events[event] = method;\n        });\n\n        this.events = events;\n        this._super.apply(this, arguments);\n        this.events = originalEvents;\n    },\n    /**\n     * @private\n     * @param {boolean} [extra=false]\n     * @param {Object} [extraContext]\n     * @returns {Object}\n     */\n    _getContext: function (extra, extraContext) {\n        var context;\n        this.trigger_up('context_get', {\n            extra: extra || false,\n            context: extraContext,\n            callback: function (ctx) {\n                context = ctx;\n            },\n        });\n        return context;\n    },\n});\n\n//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n\n/**\n * The registry object contains the list of widgets that should be instantiated\n * thanks to their selector property if any.\n */\nvar registry = {};\n\n/**\n * This is a fix for apple device (<= IPhone 4, IPad 2)\n * Standard bootstrap requires data-toggle='collapse' element to be <a/> tags.\n * Unfortunatly some layouts use a <div/> tag instead. The fix forces an empty\n * click handler on these div, which allows standard bootstrap to work.\n */\nregistry._fixAppleCollapse = PublicWidget.extend({\n    selector: 'div[data-toggle=\"collapse\"]',\n    events: {\n        'click': function () {},\n    },\n});\n\n// TODO: remove this code in master and put it in its own file.\nregistry.login = PublicWidget.extend({\n    selector: '.oe_login_form',\n    events: {\n        'submit': '_onSubmit',\n    },\n\n    //-------------------------------------------------------------------------\n    // Handlers\n    //-------------------------------------------------------------------------\n\n    /**\n     * Prevents the user from crazy clicking:\n     * Gives the button a loading effect if preventDefault was not already\n     * called and modifies the preventDefault function of the event so that the\n     * loading effect is removed if preventDefault() is called in a following\n     * customization.\n     *\n     * @private\n     * @param {Event} ev\n     */\n    _onSubmit(ev) {\n        if (!ev.isDefaultPrevented()) {\n            const btnEl = ev.currentTarget.querySelector('button[type=\"submit\"]');\n            const removeLoadingEffect = dom.addButtonLoadingEffect(btnEl);\n            const oldPreventDefault = ev.preventDefault.bind(ev);\n            ev.preventDefault = () => {\n                removeLoadingEffect();\n                oldPreventDefault();\n            };\n        }\n    },\n});\n\nexport default {\n    RootWidget: RootWidget,\n    Widget: PublicWidget,\n    registry: registry,\n};\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\n/**\n * @typedef {import(\"../env\").OdooEnv} OdooEnv\n * @typedef {import(\"../core/errors/error_service\").UncaughtPromiseError} UncaughtPromiseError\n */\n\n// -----------------------------------------------------------------------------\n// Legacy Promise error handling\n// -----------------------------------------------------------------------------\n\n/**\n * @param {OdooEnv} env\n * @param {Error} error\n * @param {Error} originalError\n * @returns {boolean}\n */\nfunction legacyRejectPromiseHandler(env, error, originalError) {\n    if (error.name === \"UncaughtPromiseError\") {\n        const isLegitError = originalError && originalError instanceof Error;\n        const isLegacyRPC = originalError && originalError.legacy;\n        if (!isLegitError && !isLegacyRPC) {\n            // we consider that a code throwing something that is not an error is\n            // a case where it is meant as an asynchronous control flow (as legacy\n            // code is sadly doing). For now, we just want to consider this as a non\n            // error, so we prevent default it.\n            error.unhandledRejectionEvent.preventDefault();\n            return true;\n        }\n    }\n    return false;\n}\n\nregistry\n    .category(\"error_handlers\")\n    .add(\"legacyRejectPromiseHandler\", legacyRejectPromiseHandler, { sequence: 1 });\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { ConnectionLostError, RPCError } from \"../core/network/rpc_service\";\nimport { lostConnectionHandler, rpcErrorHandler } from \"@web/core/errors/error_handlers\";\n\nconst errorHandlerRegistry = registry.category(\"error_handlers\");\n\n/**\n * @typedef {import(\"../env\").OdooEnv} OdooEnv\n * @typedef {import(\"../core/errors/error_service\").UncaughtError} UncaughError\n */\n\n// -----------------------------------------------------------------------------\n// Legacy RPC error handling\n// -----------------------------------------------------------------------------\n\n/**\n * @param {OdooEnv} env\n * @param {Error} error\n * @param {Error} originalError\n * @returns {boolean}\n */\nfunction legacyRPCErrorHandler(env, error, originalError) {\n    if (\n        originalError &&\n        originalError.legacy &&\n        originalError.message &&\n        (originalError.message instanceof RPCError ||\n            originalError.message instanceof ConnectionLostError)\n    ) {\n        const event = originalError.event;\n        originalError = originalError.message;\n        if (event.isDefaultPrevented()) {\n            // in theory, here, event was already handled\n            error.unhandledRejectionEvent.preventDefault();\n            return true;\n        }\n        event.preventDefault();\n        if (originalError instanceof ConnectionLostError) {\n            return lostConnectionHandler(env, error, originalError);\n        }\n        return rpcErrorHandler(env, error, originalError);\n    }\n    return false;\n}\nerrorHandlerRegistry.add(\"legacyRPCErrorHandler\", legacyRPCErrorHandler, { sequence: 2 });\n", "odoo.define('web.KeyboardNavigationMixin', function (require) {\n    \"use strict\";\n    var BrowserDetection = require('web.BrowserDetection');\n    const core = require('web.core');\n\n    /**\n     * list of the key that should not be used as accesskeys. Either because we want to reserve them for a specific behavior in Odoo or\n     * because they will not work in certain browser/OS\n     */\n    var knownUnusableAccessKeys = [' ',\n        'A', // reserved for Odoo Edit\n        'B', // reserved for Odoo Previous Breadcrumb (Back)\n        'C', // reserved for Odoo Create\n        'H', // reserved for Odoo Home\n        'J', // reserved for Odoo Discard\n        'K', // reserved for Odoo Kanban view\n        'L', // reserved for Odoo List view\n        'N', // reserved for Odoo pager Next\n        'P', // reserved for Odoo pager Previous\n        'S', // reserved for Odoo Save\n        'Q', // reserved for Odoo Search\n        'E', // chrome does not support 'E' access key --> go to address bar to search google\n        'F', // chrome does not support 'F' access key --> go to menu\n        'D', // chrome does not support 'D' access key --> go to address bar\n        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' // reserved for Odoo menus\n    ];\n\n    var KeyboardNavigationMixin = {\n        events: {\n            'keydown': '_onKeyDown',\n            'keyup': '_onKeyUp',\n        },\n\n        /**\n         * @constructor\n         * @param {object} [options]\n         * @param {boolean} [options.autoAccessKeys=true]\n         *      Whether accesskeys should be created automatically for buttons\n         *      without them in the page.\n         * @param {boolean} [options.skipRenderOverlay=false]\n         *      Whether the accesskeys overlay rendering must be skipped.\n         */\n        init: function (options) {\n            this.options = Object.assign({\n                autoAccessKeys: true,\n                skipRenderOverlay: false,\n            }, options);\n            this._areAccessKeyVisible = false;\n            this.BrowserDetection = new BrowserDetection();\n        },\n        /**\n         * @override\n         */\n        start: function () {\n            const temp = this._hideAccessKeyOverlay.bind(this);\n            this._hideAccessKeyOverlay = () => temp();\n            window.addEventListener('blur', this._hideAccessKeyOverlay);\n            core.bus.on('click', null, this._hideAccessKeyOverlay);\n        },\n        /**\n         * @destructor\n         */\n        destroy: function () {\n            window.removeEventListener('blur', this._hideAccessKeyOverlay);\n            core.bus.off('click', null, this._hideAccessKeyOverlay);\n        },\n\n        //--------------------------------------------------------------------------\n        // Private\n        //--------------------------------------------------------------------------\n\n        /**\n         * @private\n         */\n        _addAccessKeyOverlays: function () {\n            if (this.options.skipRenderOverlay) {\n                return;\n            }\n            var accesskeyElements = $(document).find('[accesskey]').filter(':visible');\n            _.each(accesskeyElements, function (elem) {\n                var overlay = $(_.str.sprintf(\"<div class='o_web_accesskey_overlay'>%s</div>\", $(elem).attr('accesskey').toUpperCase()));\n\n                var $overlayParent;\n                if (elem.tagName.toUpperCase() === \"INPUT\") {\n                    // special case for the search input that has an access key\n                    // defined. We cannot set the overlay on the input itself,\n                    // only on its parent.\n                    $overlayParent = $(elem).parent();\n                } else {\n                    $overlayParent = $(elem);\n                }\n\n                if ($overlayParent.css('position') !== 'absolute') {\n                    $overlayParent.css('position', 'relative');\n                }\n                overlay.appendTo($overlayParent);\n            });\n        },\n        /**\n         * @private\n         * @return {jQuery[]}\n         */\n        _getAllUsedAccessKeys: function () {\n            var usedAccessKeys = knownUnusableAccessKeys.slice();\n            this.$el.find('[accesskey]').each(function (_, elem) {\n                usedAccessKeys.push(elem.accessKey.toUpperCase());\n            });\n            return usedAccessKeys;\n        },\n        /**\n         * hides the overlay that shows the access keys.\n         *\n         * @private\n         * @param $parent {jQueryElemen} the parent of the DOM element to which shorcuts overlay have been added\n         * @return {undefined|jQuery}\n         */\n        _hideAccessKeyOverlay: function () {\n            this._areAccessKeyVisible = false;\n            var overlays = this.$el.find('.o_web_accesskey_overlay');\n            if (overlays.length) {\n                return overlays.remove();\n            }\n        },\n        /**\n         * @private\n         */\n        _setAccessKeyOnTopNavigation: function () {\n            this.$el.find('.o_menu_sections>li>a').each(function (number, item) {\n                item.accessKey = number + 1;\n            });\n        },\n\n        //--------------------------------------------------------------------------\n        // Handlers\n        //--------------------------------------------------------------------------\n\n        /**\n         * Assign access keys to all buttons inside $el and sets an overlay to show the access key\n         * The access keys will be assigned using first the name of the button, letter by letter until we find one available,\n         * after that we will assign any available letters.\n         * Not all letters should be used as access keys, some of the should be reserved for standard odoo behavior or browser behavior\n         *\n         * @private\n         * @param keyDownEvent {jQueryKeyboardEvent} the keyboard event triggered\n         * return {undefined|false}\n         */\n        _onKeyDown: function (keyDownEvent) {\n            if ($('body.o_ui_blocked').length &&\n            (keyDownEvent.altKey || keyDownEvent.key === 'Alt') &&\n            !keyDownEvent.ctrlKey) {\n                if (keyDownEvent.preventDefault) keyDownEvent.preventDefault(); else keyDownEvent.returnValue = false;\n                if (keyDownEvent.stopPropagation) keyDownEvent.stopPropagation();\n                if (keyDownEvent.cancelBubble) keyDownEvent.cancelBubble = true;\n                return false;\n            }\n            if (!this._areAccessKeyVisible &&\n                (keyDownEvent.altKey || keyDownEvent.key === 'Alt') &&\n                !keyDownEvent.ctrlKey) {\n\n                this._areAccessKeyVisible = true;\n\n                this._setAccessKeyOnTopNavigation();\n\n                var usedAccessKey = this._getAllUsedAccessKeys();\n\n                if (this.options.autoAccessKeys) {\n                    var buttonsWithoutAccessKey = this.$el.find('button.btn:visible')\n                        .not('[accesskey]')\n                        .not('[disabled]')\n                        .not('[tabindex=\"-1\"]');\n                    _.each(buttonsWithoutAccessKey, function (elem) {\n                        var buttonString = [elem.innerText, elem.title, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"].join('');\n                        for (var letterIndex = 0; letterIndex < buttonString.length; letterIndex++) {\n                            var candidateAccessKey = buttonString[letterIndex].toUpperCase();\n                            if (candidateAccessKey >= 'A' && candidateAccessKey <= 'Z' &&\n                                !_.includes(usedAccessKey, candidateAccessKey)) {\n                                elem.accessKey = candidateAccessKey;\n                                usedAccessKey.push(candidateAccessKey);\n                                break;\n                            }\n                        }\n                    });\n                }\n\n                var elementsWithoutAriaKeyshortcut = this.$el.find('[accesskey]').not('[aria-keyshortcuts]');\n                _.each(elementsWithoutAriaKeyshortcut, function (elem) {\n                    elem.setAttribute('aria-keyshortcuts', 'Alt+Shift+' + elem.accessKey);\n                });\n                this._addAccessKeyOverlays();\n            }\n            // on mac, there are a number of keys that are only accessible though the usage of\n            // the ALT key (like the @ sign in most keyboards)\n            // for them we do not facilitate the access keys, so they will need to be activated classically\n            // though Control + Alt + key (case sensitive), see https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey\n            if (this.BrowserDetection.isOsMac())\n                return;\n\n            if (keyDownEvent.altKey && !keyDownEvent.ctrlKey && keyDownEvent.key.length === 1) { // we don't want to catch the Alt key down, only the characters A to Z and number keys\n                var elementWithAccessKey = [];\n                if (keyDownEvent.keyCode >= 65 && keyDownEvent.keyCode <= 90 || keyDownEvent.keyCode >= 97 && keyDownEvent.keyCode <= 122) {\n                    // 65 = A, 90 = Z, 97 = a, 122 = z\n                    elementWithAccessKey = document.querySelectorAll('[accesskey=\"' + String.fromCharCode(keyDownEvent.keyCode).toLowerCase() +\n                        '\"], [accesskey=\"' + String.fromCharCode(keyDownEvent.keyCode).toUpperCase() + '\"]');\n                    if (elementWithAccessKey.length) {\n                        if (this.BrowserDetection.isOsMac() ||\n                            !this.BrowserDetection.isBrowserChrome()) { // on windows and linux, chrome does not prevent the default of the accesskeys\n                            elementWithAccessKey[0].focus();\n                            elementWithAccessKey[0].click();\n                            if (keyDownEvent.preventDefault) keyDownEvent.preventDefault(); else keyDownEvent.returnValue = false;\n                            if (keyDownEvent.stopPropagation) keyDownEvent.stopPropagation();\n                            if (keyDownEvent.cancelBubble) keyDownEvent.cancelBubble = true;\n                            return false;\n                        }\n                    }\n                }\n                else {\n                    // identify if the user has tapped on the number keys above the text keys.\n                    // this is not trivial because alt is a modifier and will not input the actual number in most keyboard layouts\n                    var numberKey;\n                    if (keyDownEvent.originalEvent.code && keyDownEvent.originalEvent.code.indexOf('Digit') === 0) {\n                        //chrome & FF have the key Digit set correctly for the numbers\n                        numberKey = keyDownEvent.originalEvent.code[keyDownEvent.originalEvent.code.length - 1];\n                    } else if (keyDownEvent.originalEvent.key &&\n                        keyDownEvent.originalEvent.key.length === 1 &&\n                        keyDownEvent.originalEvent.key >= '0' &&\n                        keyDownEvent.originalEvent.key <= '9') {\n                        //edge does not use 'code' on the original event, but the 'key' is set correctly\n                        numberKey = keyDownEvent.originalEvent.key;\n                    } else if (keyDownEvent.keyCode >= 48 && keyDownEvent.keyCode <= 57) {\n                        //fallback on keyCode if both code and key are either not set or not digits\n                        numberKey = keyDownEvent.keyCode - 48;\n                    }\n\n                    if (numberKey >= '0' && numberKey <= '9') {\n                        elementWithAccessKey = document.querySelectorAll('[accesskey=\"' + numberKey + '\"]');\n                        if (elementWithAccessKey.length) {\n                            elementWithAccessKey[0].click();\n                            if (keyDownEvent.preventDefault) keyDownEvent.preventDefault(); else keyDownEvent.returnValue = false;\n                            if (keyDownEvent.stopPropagation) keyDownEvent.stopPropagation();\n                            if (keyDownEvent.cancelBubble) keyDownEvent.cancelBubble = true;\n                            return false;\n                        }\n                    }\n                }\n            }\n        },\n        /**\n         * hides the shortcut overlays when keyup event is triggered on the ALT key\n         *\n         * @private\n         * @param keyUpEvent {jQueryKeyboardEvent} the keyboard event triggered\n         * @return {undefined|false}\n         */\n        _onKeyUp: function (keyUpEvent) {\n            if ((keyUpEvent.altKey || keyUpEvent.key === 'Alt') && !keyUpEvent.ctrlKey) {\n                if (this.options.skipRenderOverlay) {\n                    return;\n                }\n                this._hideAccessKeyOverlay();\n                if (keyUpEvent.preventDefault) keyUpEvent.preventDefault(); else keyUpEvent.returnValue = false;\n                if (keyUpEvent.stopPropagation) keyUpEvent.stopPropagation();\n                if (keyUpEvent.cancelBubble) keyUpEvent.cancelBubble = true;\n                return false;\n            }\n        },\n    };\n\n    return KeyboardNavigationMixin;\n\n});\n", "odoo.define('bus.Longpolling', function (require) {\n\"use strict\";\n\nvar Bus = require('web.Bus');\nvar ServicesMixin = require('web.ServicesMixin');\n\n\n/**\n * Event Longpolling bus used to bind events on the server long polling return\n *\n * trigger:\n * - window_focus : when the window focus change (true for focused, false for blur)\n * - notification : when a notification is receive from the long polling\n *\n * @class Longpolling\n */\nvar LongpollingBus = Bus.extend(ServicesMixin, {\n    // constants\n    PARTNERS_PRESENCE_CHECK_PERIOD: 30000,  // don't check presence more than once every 30s\n    ERROR_RETRY_DELAY: 10000, // 10 seconds\n    POLL_ROUTE: '/longpolling/poll',\n\n    // properties\n    _isActive: null,\n    _lastNotificationID: 0,\n    _isOdooFocused: true,\n    _pollRetryTimeout: null,\n\n    /**\n     * @override\n     */\n    init: function (parent, params) {\n        this._super.apply(this, arguments);\n        this._id = _.uniqueId('bus');\n\n        // the _id is modified by crosstab_bus, so we can't use it to unbind the events in the destroy.\n        this._longPollingBusId = this._id;\n        this._options = {};\n        this._channels = [];\n\n        // bus presence\n        this._lastPresenceTime = new Date().getTime();\n        $(window).on(\"focus.\" + this._longPollingBusId, this._onFocusChange.bind(this, {focus: true}));\n        $(window).on(\"blur.\" + this._longPollingBusId, this._onFocusChange.bind(this, {focus: false}));\n        $(window).on(\"unload.\" + this._longPollingBusId, this._onFocusChange.bind(this, {focus: false}));\n\n        $(window).on(\"click.\" + this._longPollingBusId, this._onPresence.bind(this));\n        $(window).on(\"keydown.\" + this._longPollingBusId, this._onPresence.bind(this));\n        $(window).on(\"keyup.\" + this._longPollingBusId, this._onPresence.bind(this));\n    },\n    /**\n     * @override\n     */\n    destroy: function () {\n        this.stopPolling();\n        $(window).off(\"focus.\" + this._longPollingBusId);\n        $(window).off(\"blur.\" + this._longPollingBusId);\n        $(window).off(\"unload.\" + this._longPollingBusId);\n        $(window).off(\"click.\" + this._longPollingBusId);\n        $(window).off(\"keydown.\" + this._longPollingBusId);\n        $(window).off(\"keyup.\" + this._longPollingBusId);\n        this._super();\n    },\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n    /**\n     * Register a new channel to listen on the longpoll (ignore if already\n     * listening on this channel).\n     * Aborts a pending longpoll, in order to re-start another longpoll, so\n     * that we can immediately get notifications on newly registered channel.\n     *\n     * @param {string} channel\n     */\n    addChannel: function (channel) {\n        if (this._channels.indexOf(channel) === -1) {\n            this._channels.push(channel);\n            this._restartPolling();\n        }\n    },\n    /**\n     * Unregister a channel from listening on the longpoll.\n     *\n     * Aborts a pending longpoll, in order to re-start another longpoll, so\n     * that we immediately remove ourselves from listening on notifications\n     * on this channel.\n     *\n     * @param {string} channel\n     */\n    deleteChannel: function (channel) {\n        var index = this._channels.indexOf(channel);\n        if (index !== -1) {\n            this._channels.splice(index, 1);\n            if (this._pollRpc) {\n                this._pollRpc.abort();\n            }\n        }\n    },\n    /**\n     * Tell whether odoo is focused or not\n     *\n     * @returns {boolean}\n     */\n    isOdooFocused: function () {\n        return this._isOdooFocused;\n    },\n    /**\n     * Start a long polling, i.e. it continually opens a long poll\n     * connection as long as it is not stopped (@see `stopPolling`)\n     */\n    startPolling: function () {\n        if (this._isActive === null) {\n            this._poll = this._poll.bind(this);\n        }\n        if (!this._isActive) {\n            this._isActive = true;\n            this._poll();\n        }\n    },\n    /**\n     * Stops any started long polling\n     *\n     * Aborts a pending longpoll so that we immediately remove ourselves\n     * from listening on notifications on this channel.\n     */\n    stopPolling: function () {\n        this._isActive = false;\n        this._channels = [];\n        clearTimeout(this._pollRetryTimeout);\n        if (this._pollRpc) {\n            this._pollRpc.abort();\n        }\n    },\n    /**\n     * Add or update an option on the longpoll bus.\n     * Stored options are sent to the server whenever a poll is started.\n     *\n     * @param {string} key\n     * @param {any} value\n     */\n    updateOption: function (key, value) {\n        this._options[key] = value;\n    },\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n    /**\n     * returns the last recorded presence\n     *\n     * @private\n     * @returns {integer} number of milliseconds since 1 January 1970 00:00:00\n     */\n    _getLastPresence: function () {\n        return this._lastPresenceTime;\n    },\n    /**\n     * Continually start a poll:\n     *\n     * A poll is a connection that is kept open for a relatively long period\n     * (up to 1 minute). Local bus data are sent to the server each time a poll\n     * is initiated, and the server may return some \"real-time\" notifications\n     * about registered channels.\n     *\n     * A poll ends on timeout, on abort, on receiving some notifications, or on\n     * receiving an error. Another poll usually starts afterward, except if the\n     * poll is aborted or stopped (@see stopPolling).\n     *\n     * @private\n     */\n    _poll: function () {\n        var self = this;\n        if (!this._isActive) {\n            return;\n        }\n        var now = new Date().getTime();\n        var options = _.extend({}, this._options, {\n            bus_inactivity: now - this._getLastPresence(),\n        });\n        var data = {channels: this._channels, last: this._lastNotificationID, options: options};\n        // The backend has a maximum cycle time of 50 seconds so give +10 seconds\n        this._pollRpc = this._makePoll(data);\n        this._pollRpc.then(function (result) {\n            self._pollRpc = false;\n            self._onPoll(result);\n            self._poll();\n        }).guardedCatch(function (result) {\n            self._pollRpc = false;\n            // no error popup if request is interrupted or fails for any reason\n            result.event.preventDefault();\n            if (result.message === \"XmlHttpRequestError abort\") {\n                self._poll();\n            } else {\n                // random delay to avoid massive longpolling\n                self._pollRetryTimeout = setTimeout(self._poll, self.ERROR_RETRY_DELAY + (Math.floor((Math.random()*20)+1)*1000));\n            }\n        });\n    },\n\n    /**\n     * @private\n     * @param data: object with poll parameters\n     */\n    _makePoll: function(data) {\n        return this._rpc({route: this.POLL_ROUTE, params: data}, {shadow : true, timeout: 60000});\n    },\n\n    //--------------------------------------------------------------------------\n    // Handlers\n    //--------------------------------------------------------------------------\n    /**\n     * Handler when the focus of the window change.\n     * Trigger the 'window_focus' event.\n     *\n     * @private\n     * @param {Object} params\n     * @param {Boolean} params.focus\n     */\n    _onFocusChange: function (params) {\n        this._isOdooFocused = params.focus;\n        if (params.focus) {\n            this._lastPresenceTime = new Date().getTime();\n            this.trigger('window_focus', this._isOdooFocused);\n        }\n    },\n    /**\n     * Handler when the long polling receive the new notifications\n     * Update the last notification id received.\n     * Triggered the 'notification' event with a list [channel, message] from notifications.\n     *\n     * @private\n     * @param {Object[]} notifications, Input notifications have an id, channel, message\n     * @returns {Array[]} Output arrays have notification's channel and message\n     */\n    _onPoll: function (notifications) {\n        var self = this;\n        var notifs = _.map(notifications, function (notif) {\n            if (notif.id > self._lastNotificationID) {\n                self._lastNotificationID = notif.id;\n            }\n            return notif.message;\n        });\n        this.trigger(\"notification\", notifs);\n        return notifs;\n    },\n    /**\n     * Handler when they are an activity on the window (click, keydown, keyup)\n     * Update the last presence date.\n     *\n     * @private\n     */\n    _onPresence: function () {\n        this._lastPresenceTime = new Date().getTime();\n    },\n    /**\n     * Restart polling.\n     *\n     * @private\n     */\n    _restartPolling() {\n        if (this._pollRpc) {\n            this._pollRpc.abort();\n        } else {\n            this.startPolling();\n        }\n    },\n});\n\nreturn LongpollingBus;\n\n});\n", "odoo.define('bus.CrossTab', function (require) {\n\"use strict\";\n\nvar Longpolling = require('bus.Longpolling');\n\nvar session = require('web.session');\n\n/**\n * CrossTab\n *\n * This is an extension of the longpolling bus with browser cross-tab synchronization.\n * It uses a Master/Slaves with Leader Election architecture:\n * - a single tab handles longpolling.\n * - tabs are synchronized by means of the local storage.\n *\n * localStorage used keys are:\n * - {LOCAL_STORAGE_PREFIX}.{sanitizedOrigin}.channels : shared public channel list to listen during the poll\n * - {LOCAL_STORAGE_PREFIX}.{sanitizedOrigin}.options : shared options\n * - {LOCAL_STORAGE_PREFIX}.{sanitizedOrigin}.notification : the received notifications from the last poll\n * - {LOCAL_STORAGE_PREFIX}.{sanitizedOrigin}.tab_list : list of opened tab ids\n * - {LOCAL_STORAGE_PREFIX}.{sanitizedOrigin}.tab_master : generated id of the master tab\n *\n * trigger:\n * - window_focus : when the window is focused\n * - notification : when a notification is receive from the long polling\n * - become_master : when this tab became the master\n * - no_longer_master : when this tab is not longer the master (the user swith tab)\n */\nvar CrossTabBus = Longpolling.extend({\n    // constants\n    TAB_HEARTBEAT_PERIOD: 10000, // 10 seconds\n    MASTER_TAB_HEARTBEAT_PERIOD: 1500, // 1.5 seconds\n    HEARTBEAT_OUT_OF_DATE_PERIOD: 5000, // 5 seconds\n    HEARTBEAT_KILL_OLD_PERIOD: 15000, // 15 seconds\n    LOCAL_STORAGE_PREFIX: 'bus',\n\n    // properties\n    _isMasterTab: false,\n    _isRegistered: false,\n\n    /**\n     * @override\n     */\n    init: function () {\n        this._super.apply(this, arguments);\n        var now = new Date().getTime();\n        // used to prefix localStorage keys\n        this._sanitizedOrigin = session.origin.replace(/:\\/{0,2}/g, '_');\n        this._currentTabChannels = new Set();\n        // prevents collisions between different tabs and in tests\n        this._id = _.uniqueId(this.LOCAL_STORAGE_PREFIX) + ':' + now;\n        if (this._callLocalStorage('getItem', 'last_ts', 0) + 50000 < now) {\n            this._callLocalStorage('removeItem', 'last');\n        }\n        this._lastNotificationID = this._callLocalStorage('getItem', 'last', 0);\n        this.call('local_storage', 'onStorage', this, this._onStorage);\n    },\n    destroy: function () {\n        this._super();\n        clearTimeout(this._heartbeatTimeout);\n    },\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n    /**\n     * Share the bus channels with the others tab by the local storage\n     *\n     * @override\n     */\n    addChannel: function (channel) {\n        this._currentTabChannels.add(channel);\n        this._super.apply(this, arguments);\n        this._updateChannels();\n    },\n    /**\n     * Share the bus channels with the others tab by the local storage\n     *\n     * @override\n     */\n    deleteChannel: function (channel) {\n        this._currentTabChannels.delete(channel);\n        this._super.apply(this, arguments);\n        this._updateChannels();\n    },\n    /**\n     * @return {string}\n     */\n    getTabId: function () {\n        return this._id;\n    },\n    /**\n     * Tells whether this bus is related to the master tab.\n     *\n     * @returns {boolean}\n     */\n    isMasterTab: function () {\n        return this._isMasterTab;\n    },\n    /**\n     * Use the local storage to share the long polling from the master tab.\n     *\n     * @override\n     */\n    startPolling: function () {\n        if (this._isActive === null) {\n            this._heartbeat = this._heartbeat.bind(this);\n        }\n        if (!this._isRegistered) {\n            this._isRegistered = true;\n\n            var peers = this._callLocalStorage('getItem', 'peers', {});\n            peers[this._id] = new Date().getTime();\n            this._callLocalStorage('setItem', 'peers', peers);\n\n            this._registerWindowUnload();\n\n            if (!this._callLocalStorage('getItem', 'master')) {\n                this._startElection();\n            }\n\n            this._heartbeat();\n\n            if (this._isMasterTab) {\n                this._callLocalStorage('setItem', 'options', this._options);\n            } else {\n                this._options = this._callLocalStorage('getItem', 'options', this._options);\n            }\n            this._updateChannels();\n            return;  // startPolling will be called again on tab registration\n        }\n\n        if (this._isMasterTab) {\n            this._super.apply(this, arguments);\n        }\n    },\n    /**\n     * Share the option with the local storage\n     *\n     * @override\n     */\n    updateOption: function () {\n        this._super.apply(this, arguments);\n        this._callLocalStorage('setItem', 'options', this._options);\n    },\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n    /**\n     * Call local_storage service\n     *\n     * @private\n     * @param {string} method (getItem, setItem, removeItem, on)\n     * @param {string} key\n     * @param {any} param\n     * @returns service information\n     */\n    _callLocalStorage: function (method, key, param) {\n        return this.call('local_storage', method, this._generateKey(key), param);\n    },\n    /**\n     * Generates localStorage keys prefixed by bus. (LOCAL_STORAGE_PREFIX = the name\n     * of this addon), and the sanitized origin, to prevent keys from\n     * conflicting when several bus instances (polling different origins)\n     * co-exist.\n     *\n     * @private\n     * @param {string} key\n     * @returns key prefixed with the origin\n     */\n    _generateKey: function (key) {\n        return this.LOCAL_STORAGE_PREFIX + '.' + this._sanitizedOrigin + '.' + key;\n    },\n    /**\n     * @override\n     * @returns {integer} number of milliseconds since 1 January 1970 00:00:00\n     */\n    _getLastPresence: function () {\n        return this._callLocalStorage('getItem', 'lastPresence') || this._super();\n    },\n    /**\n     * Check all the time (according to the constants) if the tab is the master tab and\n     * check if it is active. Use the local storage for this checks.\n     *\n     * @private\n     * @see _startElection method\n     */\n    _heartbeat: function () {\n        var now = new Date().getTime();\n        var heartbeatValue = parseInt(this._callLocalStorage('getItem', 'heartbeat', 0));\n        var peers = this._callLocalStorage('getItem', 'peers', {});\n\n        if ((heartbeatValue + this.HEARTBEAT_OUT_OF_DATE_PERIOD) < now) {\n            // Heartbeat is out of date. Electing new master\n            this._startElection();\n            heartbeatValue = parseInt(this._callLocalStorage('getItem', 'heartbeat', 0));\n        }\n\n        if (this._isMasterTab) {\n            //walk through all peers and kill old\n            var cleanedPeers = {};\n            for (var peerName in peers) {\n                if (peers[peerName] + this.HEARTBEAT_KILL_OLD_PERIOD > now) {\n                    cleanedPeers[peerName] = peers[peerName];\n                }\n            }\n\n            if (heartbeatValue !== this.lastHeartbeat) {\n                // someone else is also master...\n                // it should not happen, except in some race condition situation.\n                this._isMasterTab = false;\n                this.lastHeartbeat = 0;\n                peers[this._id] = now;\n                this._callLocalStorage('setItem', 'peers', peers);\n                this.stopPolling();\n                this.trigger('no_longer_master');\n            } else {\n                this.lastHeartbeat = now;\n                this._callLocalStorage('setItem', 'heartbeat', now);\n                this._callLocalStorage('setItem', 'peers', cleanedPeers);\n            }\n        } else {\n            //update own heartbeat\n            peers[this._id] = now;\n            this._callLocalStorage('setItem', 'peers', peers);\n        }\n\n        // Write lastPresence in local storage if it has been updated since last heartbeat\n        var hbPeriod = this._isMasterTab ? this.MASTER_TAB_HEARTBEAT_PERIOD : this.TAB_HEARTBEAT_PERIOD;\n        if (this._lastPresenceTime + hbPeriod > now) {\n            this._callLocalStorage('setItem', 'lastPresence', this._lastPresenceTime);\n        }\n\n        this._heartbeatTimeout = setTimeout(this._heartbeat.bind(this), hbPeriod);\n    },\n    /**\n     * @private\n     */\n    _registerWindowUnload: function () {\n        $(window).on('unload.' + this._id, this._onUnload.bind(this));\n    },\n    /**\n     * Check with the local storage if the current tab is the master tab.\n     * If this tab became the master, trigger 'become_master' event\n     *\n     * @private\n     */\n    _startElection: function () {\n        if (this._isMasterTab) {\n            return;\n        }\n        //check who's next\n        var now = new Date().getTime();\n        var peers = this._callLocalStorage('getItem', 'peers', {});\n        var heartbeatKillOld = now - this.HEARTBEAT_KILL_OLD_PERIOD;\n        var newMaster;\n        for (var peerName in peers) {\n            //check for dead peers\n            if (peers[peerName] < heartbeatKillOld) {\n                continue;\n            }\n            newMaster = peerName;\n            break;\n        }\n\n        if (newMaster === this._id) {\n            //we're next in queue. Electing as master\n            this.lastHeartbeat = now;\n            this._callLocalStorage('setItem', 'heartbeat', this.lastHeartbeat);\n            this._callLocalStorage('setItem', 'master', true);\n            this._isMasterTab = true;\n            this.startPolling();\n            this.trigger('become_master');\n\n            //removing master peer from queue\n            delete peers[newMaster];\n            this._callLocalStorage('setItem', 'peers', peers);\n        }\n    },\n    /**\n     * Update localstorage channels of with the channels of this tab.\n     *\n     * @private\n     * @return {boolean} true if the aggregated channels has changed.\n     */\n    _updateChannels: function () {\n        const currentPeerIds = new Set(Object.keys(this._callLocalStorage('getItem', 'peers') || {}));\n        const peerChannels = this._callLocalStorage('getItem', 'channels')  || {};\n        const peerChannelsBefore = JSON.stringify(peerChannels);\n        peerChannels[this._id] = Array.from(this._currentTabChannels);\n\n        // Clean outdated channels.\n        for (const channelPeerId of Object.keys(peerChannels)) {\n            if (!currentPeerIds.has(channelPeerId)) {\n                delete peerChannels[channelPeerId];\n            }\n        }\n\n        const peerChannelsAfter = JSON.stringify(peerChannels);\n        if (peerChannelsBefore !== peerChannelsAfter) {\n            this._callLocalStorage('setItem', 'channels', peerChannels);\n        }\n\n        const allChannels = new Set();\n        for (const channels of Object.values(peerChannels)) {\n            for (const channel of channels) {\n                allChannels.add(channel);\n            }\n        }\n        // Insure the current tab channels are always in the aggregated channels\n        // in case this tab is not in the currentPeerIds nor peerChannels.\n        for (const channel of this._currentTabChannels) {\n            allChannels.add(channel);\n        }\n        const allChannelsSorted = Array.from(allChannels).sort();\n        if (JSON.stringify(allChannelsSorted) === JSON.stringify(this._channels.sort())) {\n            return false;\n        } else {\n            this._channels = allChannelsSorted;\n            return true;\n        };\n    },\n    //--------------------------------------------------------------------------\n    // Handlers\n    //--------------------------------------------------------------------------\n    /**\n     * @override\n     */\n    _onFocusChange: function (params) {\n        this._super.apply(this, arguments);\n        this._callLocalStorage('setItem', 'focus', params.focus);\n    },\n    /**\n     * If it's the master tab, the notifications ares broadcasted to other tabs by the\n     * local storage.\n     *\n     * @override\n     */\n    _onPoll: function (notifications) {\n        var notifs = this._super(notifications);\n        if (this._isMasterTab && notifs.length) {\n            this._callLocalStorage('setItem', 'last', this._lastNotificationID);\n            this._callLocalStorage('setItem', 'last_ts', new Date().getTime());\n            this._callLocalStorage('setItem', 'notification', notifs);\n        }\n    },\n    /**\n     * Handler when the local storage is updated\n     *\n     * @private\n     * @param {OdooEvent} event\n     * @param {string} event.key\n     * @param {string} event.newValue\n     */\n    _onStorage: function (e) {\n        var value = JSON.parse(e.newValue);\n        var key = e.key;\n\n        if (this._isRegistered && key === this._generateKey('master') && !value) {\n            //master was unloaded\n            this._startElection();\n        }\n\n        // last notification id changed\n        if (key === this._generateKey('last')) {\n            this._lastNotificationID = value || 0;\n        }\n        // notifications changed\n        else if (key === this._generateKey('notification')) {\n            if (!this._isMasterTab) {\n                this.trigger(\"notification\", value);\n            }\n        }\n        // update channels\n        else if (key === this._generateKey('channels')) {\n            if (this._updateChannels()) {\n                this._restartPolling();\n            };\n        }\n        // update options\n        else if (key === this._generateKey('options')) {\n            this._options = value;\n        }\n        // update focus\n        else if (key === this._generateKey('focus')) {\n            this._isOdooFocused = value;\n            this.trigger('window_focus', this._isOdooFocused);\n        }\n    },\n    /**\n     * Handler when unload the window\n     *\n     * @private\n     */\n    _onUnload: function () {\n        // unload peer\n        var peers = this._callLocalStorage('getItem', 'peers') || {};\n        delete peers[this._id];\n        this._callLocalStorage('setItem', 'peers', peers);\n        this._currentTabChannels.clear();\n        this._updateChannels();\n\n        // unload master\n        if (this._isMasterTab) {\n            this._callLocalStorage('removeItem', 'master');\n        }\n    },\n});\n\nreturn CrossTabBus;\n\n});\n\n", "odoo.define('bus.BusService', function (require) {\n\"use strict\";\n\nvar CrossTab = require('bus.CrossTab');\nvar core = require('web.core');\nvar ServicesMixin = require('web.ServicesMixin');\nconst session = require('web.session');\n\nvar BusService =  CrossTab.extend(ServicesMixin, {\n    dependencies : ['local_storage'],\n\n    // properties\n    _audio: null,\n\n    /**\n     * As the BusService doesn't extend AbstractService, we have to replicate\n     * here what is done in AbstractService\n     *\n     * @param {Object} env\n     */\n    init: function (env) {\n        this.env = env;\n        this._super();\n    },\n\n    /**\n     * Replicate the behavior of AbstractService:\n     *\n     * Directly calls the requested service, instead of triggering a\n     * 'call_service' event up, which wouldn't work as services have no parent.\n     *\n     * @param {OdooEvent} ev\n     */\n    _trigger_up: function (ev) {\n        if (ev.name === 'call_service') {\n            const payload = ev.data;\n            let args = payload.args || [];\n            if (payload.service === 'ajax' && payload.method === 'rpc') {\n                // ajax service uses an extra 'target' argument for rpc\n                args = args.concat(ev.target);\n            }\n            const service = this.env.services[payload.service];\n            const result = service[payload.method].apply(service, args);\n            payload.callback(result);\n        }\n    },\n    /**\n     * This method is necessary in order for this Class to be used to instantiate services\n     *\n     * @abstract\n     */\n    start: function () {},\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    /**\n     * Send a notification, and notify once per browser's tab\n     *\n     * @param {function} [callback] if given callback will be called when user clicks on notification\n     * @param {Object} options\n     * @param {string} options.message\n     * @param {string} options.title\n     * @param {string} [options.type] 'info', 'success', 'warning', 'danger' or ''\n     */\n    sendNotification(options, callback) {\n        if (window.Notification && Notification.permission === \"granted\") {\n            if (this.isMasterTab()) {\n                try {\n                    this._sendNativeNotification(options.title, options.message, callback);\n                } catch (error) {\n                    // Notification without Serviceworker in Chrome Android doesn't works anymore\n                    // So we fallback to displayNotification() in this case\n                    // https://bugs.chromium.org/p/chromium/issues/detail?id=481856\n                    if (error.message.indexOf('ServiceWorkerRegistration') > -1) {\n                        this.displayNotification(options);\n                        this._beep();\n                    } else {\n                        throw error;\n                    }\n                }\n            }\n        } else {\n            this.displayNotification(options);\n            if (this.isMasterTab()) {\n                this._beep();\n            }\n        }\n    },\n    /**\n     * Register listeners on notifications received on this bus service\n     *\n     * @param {Object} receiver\n     * @param {function} func\n     */\n    onNotification: function () {\n        this.on.apply(this, [\"notification\"].concat(Array.prototype.slice.call(arguments)));\n    },\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    /**\n     * Lazily play the 'beep' audio on sent notification\n     *\n     * @private\n     */\n    _beep: function () {\n        if (typeof(Audio) !== \"undefined\") {\n            if (!this._audio) {\n                this._audio = new Audio();\n                var ext = this._audio.canPlayType(\"audio/ogg; codecs=vorbis\") ? \".ogg\" : \".mp3\";\n                this._audio.src = session.url(\"/mail/static/src/audio/ting\" + ext);\n            }\n            Promise.resolve(this._audio.play()).catch(_.noop);\n        }\n    },\n    /**\n     * Show a browser notification\n     *\n     * @private\n     * @param {string} title\n     * @param {string} content\n     * @param {function} [callback] if given callback will be called when user clicks on notification\n     */\n    _sendNativeNotification: function (title, content, callback) {\n        var notification = new Notification(\n            // The native Notification API works with plain text and not HTML\n            // unescaping is safe because done only at the **last** step\n            _.unescape(title),\n            {\n                body: _.unescape(content),\n                icon: \"/mail/static/src/img/odoobot_transparent.png\"\n            });\n        notification.onclick = function () {\n            window.focus();\n            if (this.cancel) {\n                this.cancel();\n            } else if (this.close) {\n                this.close();\n            }\n            if (callback) {\n                callback();\n            }\n        };\n    },\n\n});\n\ncore.serviceRegistry.add('bus_service', BusService);\n\nreturn BusService;\n\n});\n", "odoo.define('web_tour.public.TourManager', function (require) {\n'use strict';\n\nvar TourManager = require('web_tour.TourManager');\nvar lazyloader = require('web.public.lazyloader');\n\nTourManager.include({\n    /**\n     * @override\n     */\n    _waitBeforeTourStart: function () {\n        return this._super.apply(this, arguments).then(function () {\n            return lazyloader.allScriptsLoaded;\n        }).then(function () {\n            return new Promise(function (resolve) {\n                setTimeout(resolve);\n            });\n        });\n    },\n});\n});\n", "odoo.define('wysiwyg.widgets.Dialog', function (require) {\n'use strict';\n\nvar config = require('web.config');\nvar core = require('web.core');\nvar Dialog = require('web.Dialog');\n\nvar _t = core._t;\n\n/**\n * Extend Dialog class to handle save/cancel of edition components.\n */\nvar WysiwygDialog = Dialog.extend({\n    /**\n     * @constructor\n     */\n    init: function (parent, options) {\n        this.options = options || {};\n        if (config.device.isMobile) {\n            options.fullscreen = true;\n        }\n        this._super(parent, _.extend({}, {\n            buttons: [{\n                    text: this.options.save_text || _t(\"Save\"),\n                    classes: 'btn-primary',\n                    click: this.save,\n                },\n                {\n                    text: _t(\"Discard\"),\n                    close: true,\n                }\n            ]\n        }, this.options));\n\n        this.destroyAction = 'cancel';\n\n        var self = this;\n        this.opened(function () {\n            const selector = options.focusField\n                ? `input[name=${options.focusField}]` \n                : 'input:visible:first';\n            self.$(selector).focus();\n            self.$el.closest('.modal').addClass('o_web_editor_dialog');\n            self.$el.closest('.modal').on('hidden.bs.modal', self.options.onClose);\n        });\n        this.on('closed', this, function () {\n            self._toggleFullScreen();\n            this.trigger(this.destroyAction, this.final_data || null);\n        });\n    },\n    /**\n     * Only use on config.device.isMobile, it's used by mass mailing to allow the dialog opening on fullscreen\n     * @private\n     */\n    _toggleFullScreen: function() {\n        if (config.device.isMobile && !this.hasFullScreen) {\n            $('#iframe_target[isMobile=\"true\"] #web_editor-top-edit .o_fullscreen').click();\n        }\n    },\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    /**\n     * Called when the dialog is saved. Set the destroy action type to \"save\"\n     * and should set the final_data variable correctly before closing.\n     */\n    save: function () {\n        this.destroyAction = \"save\";\n        this.close();\n    },\n    /**\n     * @override\n     * @returns {*}\n     */\n    open: function() {\n        this.hasFullScreen = $(window.top.document.body).hasClass('o_field_widgetTextHtml_fullscreen');\n        this._toggleFullScreen();\n        return this._super.apply(this, arguments);\n    },\n});\n\nreturn WysiwygDialog;\n});\n", "odoo.define('web_editor.loader', function (require) {\n'use strict';\n\nvar ajax = require('web.ajax');\n\nlet wysiwygPromise;\n\nconst exports = {};\n\nfunction loadWysiwyg(additionnalAssets=[]) {\n    return ajax.loadLibs({assetLibs: ['web_editor.compiled_assets_wysiwyg', ...additionnalAssets]}, undefined, '/web_editor/public_render_template');\n}\nexports.loadWysiwyg = loadWysiwyg;\n\n/**\n * Load the assets and create a wysiwyg.\n *\n * @param {Widget} parent The wysiwyg parent\n * @param {object} options The wysiwyg options\n */\nexports.createWysiwyg = async (parent, options, additionnalAssets = []) => {\n    const wysiwygAlias = options.wysiwygAlias || 'web_editor.wysiwyg';\n    if (!wysiwygPromise) {\n        wysiwygPromise = new Promise(async (resolve) => {\n            await loadWysiwyg(additionnalAssets);\n            // Wait the loading of the service and his dependencies (use string to\n            // avoid parsing of require function).\n            const stringFunction = `return new Promise(resolve => {\n                odoo.define('${wysiwygAlias}.loaded', require => {\n                    ` + 'require' + `('${wysiwygAlias}');\n                    resolve();\n                });\n            });`;\n            await new Function(stringFunction)();\n            resolve();\n        });\n    }\n    await wysiwygPromise;\n    const Wysiwyg = odoo.__DEBUG__.services[wysiwygAlias];\n    return new Wysiwyg(parent, options);\n};\n\nexports.loadFromTextarea = async (parent, textarea, options) => {\n    var loading = textarea.nextElementSibling;\n    if (loading && !loading.classList.contains('o_wysiwyg_loading')) {\n        loading = null;\n    }\n    const $textarea = $(textarea);\n    const currentOptions = Object.assign({}, options);\n    currentOptions.value = currentOptions.value || $textarea.val() || '';\n    if (!currentOptions.value.trim()) {\n        currentOptions.value = '<p><br></p>';\n    }\n    const wysiwyg = await exports.createWysiwyg(parent, currentOptions);\n\n    const $wysiwygWrapper = $textarea.closest('.o_wysiwyg_textarea_wrapper');\n    const $form = $textarea.closest('form');\n\n    // hide and append the $textarea in $form so it's value will be send\n    // through the form.\n    $textarea.hide();\n    $form.append($textarea);\n    $wysiwygWrapper.html('');\n\n    await wysiwyg.appendTo($wysiwygWrapper);\n    $form.find('.note-editable').data('wysiwyg', wysiwyg);\n\n    // o_we_selected_image has not always been removed when\n    // saving a post so we need the line below to remove it if it is present.\n    $form.find('.note-editable').find('img.o_we_selected_image').removeClass('o_we_selected_image');\n    $form.on('click', 'button[type=submit]', (e) => {\n        $form.find('.note-editable').find('img.o_we_selected_image').removeClass('o_we_selected_image');\n        // float-left class messes up the post layout OPW 769721\n        $form.find('.note-editable').find('img.float-left').removeClass('float-left');\n        $textarea.html(wysiwyg.getValue());\n    });\n\n    return wysiwyg;\n};\n\nreturn exports;\n});\n", "odoo.define('auth_signup.signup', function (require) {\n'use strict';\n\nvar publicWidget = require('web.public.widget');\n\npublicWidget.registry.SignUpForm = publicWidget.Widget.extend({\n    selector: '.oe_signup_form',\n    events: {\n        'submit': '_onSubmit',\n    },\n\n    //--------------------------------------------------------------------------\n    // Handlers\n    //--------------------------------------------------------------------------\n\n    /**\n     * @private\n     */\n    _onSubmit: function () {\n        var $btn = this.$('.oe_login_buttons > button[type=\"submit\"]');\n        $btn.attr('disabled', 'disabled');\n        $btn.prepend('<i class=\"fa fa-refresh fa-spin\"/> ');\n    },\n});\n});\n", "odoo.define('portal.portal', function (require) {\n'use strict';\n\nvar publicWidget = require('web.public.widget');\nconst Dialog = require('web.Dialog');\nconst {_t, qweb} = require('web.core');\nconst ajax = require('web.ajax');\nconst session = require('web.session');\n\npublicWidget.registry.portalDetails = publicWidget.Widget.extend({\n    selector: '.o_portal_details',\n    events: {\n        'change select[name=\"country_id\"]': '_onCountryChange',\n    },\n\n    /**\n     * @override\n     */\n    start: function () {\n        var def = this._super.apply(this, arguments);\n\n        this.$state = this.$('select[name=\"state_id\"]');\n        this.$stateOptions = this.$state.filter(':enabled').find('option:not(:first)');\n        this._adaptAddressForm();\n\n        return def;\n    },\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    /**\n     * @private\n     */\n    _adaptAddressForm: function () {\n        var $country = this.$('select[name=\"country_id\"]');\n        var countryID = ($country.val() || 0);\n        this.$stateOptions.detach();\n        var $displayedState = this.$stateOptions.filter('[data-country_id=' + countryID + ']');\n        var nb = $displayedState.appendTo(this.$state).show().length;\n        this.$state.parent().toggle(nb >= 1);\n    },\n\n    //--------------------------------------------------------------------------\n    // Handlers\n    //--------------------------------------------------------------------------\n\n    /**\n     * @private\n     */\n    _onCountryChange: function () {\n        this._adaptAddressForm();\n    },\n});\n\npublicWidget.registry.PortalHomeCounters = publicWidget.Widget.extend({\n    selector: '.o_portal_my_home',\n\n    /**\n     * @override\n     */\n    start: function () {\n        var def = this._super.apply(this, arguments);\n        this._updateCounters();\n        return def;\n    },\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    /**\n     * @private\n     */\n    async _updateCounters(elem) {\n        const numberRpc = 3;\n        const needed = this.$('[data-placeholder_count]')\n                                .map((i, o) => $(o).data('placeholder_count'))\n                                .toArray();\n        const counterByRpc = Math.ceil(needed.length / numberRpc);  // max counter, last can be less\n\n        const proms = [...Array(Math.min(numberRpc, needed.length)).keys()].map(async i => {\n            await this._rpc({\n                route: \"/my/counters\",\n                params: {\n                    counters: needed.slice(i * counterByRpc, (i + 1) * counterByRpc)\n                },\n            }).then(data => {\n                Object.keys(data).map(k => this.$(\"[data-placeholder_count='\" + k + \"']\").text(data[k]));\n            });\n        });\n        return Promise.all(proms);\n    },\n});\n\npublicWidget.registry.portalSearchPanel = publicWidget.Widget.extend({\n    selector: '.o_portal_search_panel',\n    events: {\n        'click .dropdown-item': '_onDropdownItemClick',\n        'submit': '_onSubmit',\n    },\n\n    /**\n     * @override\n     */\n    start: function () {\n        var def = this._super.apply(this, arguments);\n        this._adaptSearchLabel(this.$('.dropdown-item.active'));\n        return def;\n    },\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    /**\n     * @private\n     */\n    _adaptSearchLabel: function (elem) {\n        var $label = $(elem).clone();\n        $label.find('span.nolabel').remove();\n        this.$('input[name=\"search\"]').attr('placeholder', $label.text().trim());\n    },\n    /**\n     * @private\n     */\n    _search: function () {\n        var search = $.deparam(window.location.search.substring(1));\n        search['search_in'] = this.$('.dropdown-item.active').attr('href').replace('#', '');\n        search['search'] = this.$('input[name=\"search\"]').val();\n        window.location.search = $.param(search);\n    },\n\n    //--------------------------------------------------------------------------\n    // Handlers\n    //--------------------------------------------------------------------------\n\n    /**\n     * @private\n     */\n    _onDropdownItemClick: function (ev) {\n        ev.preventDefault();\n        var $item = $(ev.currentTarget);\n        $item.closest('.dropdown-menu').find('.dropdown-item').removeClass('active');\n        $item.addClass('active');\n\n        this._adaptSearchLabel(ev.currentTarget);\n    },\n    /**\n     * @private\n     */\n    _onSubmit: function (ev) {\n        ev.preventDefault();\n        this._search();\n    },\n});\n\npublicWidget.registry.NewAPIKeyButton = publicWidget.Widget.extend({\n    selector: '.o_portal_new_api_key',\n    events: {\n        click: '_onClick'\n    },\n\n    async _onClick(e){\n        e.preventDefault();\n        // This call is done just so it asks for the password confirmation before starting displaying the\n        // dialog forms, to mimic the behavior from the backend, in which it asks for the password before\n        // displaying the wizard.\n        // The result of the call is unused. But it's required to call a method with the decorator `@check_identity`\n        // in order to use `handleCheckIdentity`.\n        await handleCheckIdentity(this.proxy('_rpc'), this._rpc({\n            model: 'res.users',\n            method: 'api_key_wizard',\n            args: [session.user_id],\n        }));\n        await ajax.loadXML('/portal/static/src/xml/portal_security.xml', qweb);\n        const self = this;\n        const d_description = new Dialog(self, {\n            title: _t('New API Key'),\n            $content: qweb.render('portal.keydescription'),\n            buttons: [{text: _t('Confirm'), classes: 'btn-primary', close: true, click: async () => {\n                var description = d_description.el.querySelector('[name=\"description\"]').value;\n                var wizard_id = await this._rpc({\n                    model: 'res.users.apikeys.description',\n                    method: 'create',\n                    args: [{name: description}],\n                });\n                var res = await handleCheckIdentity(\n                    this.proxy('_rpc'),\n                    this._rpc({\n                        model: 'res.users.apikeys.description',\n                        method: 'make_key',\n                        args: [wizard_id],\n                    })\n                );\n                const d_show = new Dialog(self, {\n                    title: _t('API Key Ready'),\n                    $content: qweb.render('portal.keyshow', {key: res.context.default_key}),\n                    buttons: [{text: _t('Close'), clases: 'btn-primary', close: true}],\n                });\n                d_show.on('closed', this, () => {\n                    window.location = window.location;\n                });\n                d_show.open();\n            }}, {text: _t('Discard'), close: true}],\n        });\n        d_description.opened(() => {\n            const input = d_description.el.querySelector('[name=\"description\"]');\n            input.focus();\n            d_description.el.addEventListener('submit', (e) => {\n                e.preventDefault();\n                d_description.$footer.find('.btn-primary').click();\n            });\n        });\n        d_description.open();\n    }\n});\n\npublicWidget.registry.RemoveAPIKeyButton = publicWidget.Widget.extend({\n    selector: '.o_portal_remove_api_key',\n    events: {\n        click: '_onClick'\n    },\n\n    async _onClick(e){\n        e.preventDefault();\n        await handleCheckIdentity(\n            this.proxy('_rpc'),\n            this._rpc({\n                model: 'res.users.apikeys',\n                method: 'remove',\n                args: [parseInt(this.target.id)]\n            })\n        );\n        window.location = window.location;\n    }\n});\n\n/**\n * Wraps an RPC call in a check for the result being an identity check action\n * descriptor. If no such result is found, just returns the wrapped promise's\n * result as-is; otherwise shows an identity check dialog and resumes the call\n * on success.\n *\n * Warning: does not in and of itself trigger an identity check, a promise which\n * never triggers and identity check internally will do nothing of use.\n *\n * @param {Function} rpc Widget#_rpc bound do the widget\n * @param {Promise} wrapped promise to check for an identity check request\n * @returns {Promise} result of the original call\n */\nfunction handleCheckIdentity(rpc, wrapped) {\n    return wrapped.then((r) => {\n        if (!_.isMatch(r, {type: 'ir.actions.act_window', res_model: 'res.users.identitycheck'})) {\n            return r;\n        }\n        const check_id = r.res_id;\n        return ajax.loadXML('/portal/static/src/xml/portal_security.xml', qweb).then(() => new Promise((resolve, reject) => {\n            const d = new Dialog(null, {\n                title: _t(\"Security Control\"),\n                $content: qweb.render('portal.identitycheck'),\n                buttons: [{\n                    text: _t(\"Confirm Password\"), classes: 'btn btn-primary',\n                    // nb: if click & close, waits for click to resolve before closing\n                    click() {\n                        const password_input = this.el.querySelector('[name=password]');\n                        if (!password_input.reportValidity()) {\n                            password_input.classList.add('is-invalid');\n                            return;\n                        }\n                        return rpc({\n                            model: 'res.users.identitycheck',\n                            method: 'write',\n                            args: [check_id, {password: password_input.value}]\n                        }).then(() => rpc({\n                            model: 'res.users.identitycheck',\n                            method: 'run_check',\n                            args: [check_id]\n                        })).then((r) => {\n                            this.close();\n                            resolve(r);\n                        }, (err) => {\n                            err.event.preventDefault(); // suppress crashmanager\n                            password_input.classList.add('is-invalid');\n                            password_input.setCustomValidity(_t(\"Check failed\"));\n                            password_input.reportValidity();\n                        });\n                    }\n                }, {\n                    text: _t('Cancel'), close: true\n                }]\n            }).on('close', null, () => {\n                // unlink wizard object?\n                reject();\n            });\n            d.opened(() => {\n                const pw = d.el.querySelector('[name=\"password\"]');\n                pw.focus();\n                pw.addEventListener('input', () => {\n                    pw.classList.remove('is-invalid');\n                    pw.setCustomValidity('');\n                });\n                d.el.addEventListener('submit', (e) => {\n                    e.preventDefault();\n                    d.$footer.find('.btn-primary').click();\n                });\n            });\n            d.open();\n        }));\n    });\n}\nreturn {\n    handleCheckIdentity,\n}\n});\n", "odoo.define('portal.chatter', function (require) {\n'use strict';\n\nvar core = require('web.core');\nconst dom = require('web.dom');\nvar publicWidget = require('web.public.widget');\nvar time = require('web.time');\nvar portalComposer = require('portal.composer');\nconst {Markup} = require('web.utils');\n\nvar qweb = core.qweb;\nvar _t = core._t;\n\n/**\n * Widget PortalChatter\n *\n * - Fetch message fron controller\n * - Display chatter: pager, total message, composer (according to access right)\n * - Provider API to filter displayed messages\n */\nvar PortalChatter = publicWidget.Widget.extend({\n    template: 'portal.Chatter',\n    xmlDependencies: ['/portal/static/src/xml/portal_chatter.xml'],\n    events: {\n        'click .o_portal_chatter_pager_btn': '_onClickPager',\n        'click .o_portal_chatter_js_is_internal': 'async _onClickUpdateIsInternal',\n    },\n\n    /**\n     * @constructor\n     */\n    init: function (parent, options) {\n        var self = this;\n        this.options = {};\n        this._super.apply(this, arguments);\n\n        this._setOptions(options);\n\n        this.set('messages', []);\n        this.set('message_count', this.options['message_count']);\n        this.set('pager', {});\n        this.set('domain', this.options['domain']);\n        this._currentPage = this.options['pager_start'];\n    },\n    /**\n     * @override\n     */\n    willStart: function () {\n        return Promise.all([\n            this._super.apply(this, arguments),\n            this._chatterInit()\n        ]);\n    },\n    /**\n     * @override\n     */\n    start: function () {\n        // bind events\n        this.on(\"change:messages\", this, this._renderMessages);\n        this.on(\"change:message_count\", this, function () {\n            this._renderMessageCount();\n            this.set('pager', this._pager(this._currentPage));\n        });\n        this.on(\"change:pager\", this, this._renderPager);\n        this.on(\"change:domain\", this, this._onChangeDomain);\n        // set options and parameters\n        this.set('message_count', this.options['message_count']);\n        this.set('messages', this.preprocessMessages(this.result['messages']));\n        // bind bus event: this (portal.chatter) and 'portal.rating.composer' in portal_rating\n        // are separate and sibling widgets, this event is to be triggered from portal.rating.composer,\n        // hence bus event is bound to achieve usage of the event in another widget.\n        core.bus.on('reload_chatter_content', this, this._reloadChatterContent);\n\n        return Promise.all([this._super.apply(this, arguments), this._reloadComposer()]);\n    },\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    /**\n     * Fetch the messages and the message count from the server for the\n     * current page and current domain.\n     *\n     * @param {Array} domain\n     * @returns {Promise}\n     */\n    messageFetch: function (domain) {\n        var self = this;\n        return this._rpc({\n            route: '/mail/chatter_fetch',\n            params: self._messageFetchPrepareParams(),\n        }).then(function (result) {\n            self.set('messages', self.preprocessMessages(result['messages']));\n            self.set('message_count', result['message_count']);\n            return result;\n        });\n    },\n    /**\n     * Update the messages format\n     *\n     * @param {Array<Object>} messages\n     * @returns {Array}\n     */\n    preprocessMessages(messages) {\n        _.each(messages, function (m) {\n            m['author_avatar_url'] = _.str.sprintf('/web/image/%s/%s/author_avatar/50x50', 'mail.message', m.id);\n            m['published_date_str'] = _.str.sprintf(_t('Published on %s'), moment(time.str_to_datetime(m.date)).format('MMMM Do YYYY, h:mm:ss a'));\n            m['body'] = Markup(m.body);\n        });\n        return messages;\n    },\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    /**\n     * Set options\n     *\n     * @param {Array<string>} options: new options to set\n     */\n    _setOptions: function (options) {\n        // underscorize the camelcased option keys\n        const defaultOptions = Object.assign({\n            'allow_composer': true,\n            'display_composer': false,\n            'csrf_token': odoo.csrf_token,\n            'message_count': 0,\n            'pager_step': 10,\n            'pager_scope': 5,\n            'pager_start': 1,\n            'is_user_public': true,\n            'is_user_employee': false,\n            'is_user_publisher': false,\n            'hash': false,\n            'pid': false,\n            'domain': [],\n            'two_columns': false,\n        }, this.options || {});\n\n        this.options = Object.entries(options).reduce(\n            (acc, [key, value]) => {\n                acc[_.str.underscored(key)] = value;\n                return acc;\n            },\n            defaultOptions);\n    },\n\n    /**\n     * Reloads chatter and message count after posting message\n     *\n     * @private\n     */\n    _reloadChatterContent: function (data) {\n        this.messageFetch();\n        this._reloadComposer();\n    },\n    _createComposerWidget: function () {\n        return new portalComposer.PortalComposer(this, this.options);\n    },\n    /**\n     * Destroy current composer widget and initialize and insert new widget\n     *\n     * @private\n     */\n    _reloadComposer: async function () {\n        if (this._composer) {\n            this._composer.destroy();\n        }\n        if (this.options.display_composer) {\n            this._composer = this._createComposerWidget();\n            await this._composer.appendTo(this.$('.o_portal_chatter_composer'));\n        }\n    },\n    /**\n     * @private\n     * @returns {Deferred}\n     */\n    _chatterInit: function () {\n        var self = this;\n        return this._rpc({\n            route: '/mail/chatter_init',\n            params: this._messageFetchPrepareParams()\n        }).then(function (result) {\n            self.result = result;\n            self.options = _.extend(self.options, self.result['options'] || {});\n            return result;\n        });\n    },\n    /**\n     * Change the current page by refreshing current domain\n     *\n     * @private\n     * @param {Number} page\n     * @param {Array} domain\n     */\n    _changeCurrentPage: function (page, domain) {\n        this._currentPage = page;\n        var d = domain ? domain : _.clone(this.get('domain'));\n        this.set('domain', d); // trigger fetch message\n    },\n    _messageFetchPrepareParams: function () {\n        var self = this;\n        var data = {\n            'res_model': this.options['res_model'],\n            'res_id': this.options['res_id'],\n            'limit': this.options['pager_step'],\n            'offset': (this._currentPage - 1) * this.options['pager_step'],\n            'allow_composer': this.options['allow_composer'],\n        };\n        // add token field to allow to post comment without being logged\n        if (self.options['token']) {\n            data['token'] = self.options['token'];\n        }\n        // add domain\n        if (this.get('domain')) {\n            data['domain'] = this.get('domain');\n        }\n        return data;\n    },\n    /**\n     * Generate the pager data for the given page number\n     *\n     * @private\n     * @param {Number} page\n     * @returns {Object}\n     */\n    _pager: function (page) {\n        page = page || 1;\n        var total = this.get('message_count');\n        var scope = this.options['pager_scope'];\n        var step = this.options['pager_step'];\n\n        // Compute Pager\n        var pageCount = Math.ceil(parseFloat(total) / step);\n\n        page = Math.max(1, Math.min(parseInt(page), pageCount));\n        scope -= 1;\n\n        var pmin = Math.max(page - parseInt(Math.floor(scope / 2)), 1);\n        var pmax = Math.min(pmin + scope, pageCount);\n\n        if (pmax - scope > 0) {\n            pmin = pmax - scope;\n        } else {\n            pmin = 1;\n        }\n\n        var pages = [];\n        _.each(_.range(pmin, pmax + 1), function (index) {\n            pages.push(index);\n        });\n\n        return {\n            \"page_count\": pageCount,\n            \"offset\": (page - 1) * step,\n            \"page\": page,\n            \"page_start\": pmin,\n            \"page_previous\": Math.max(pmin, page - 1),\n            \"page_next\": Math.min(pmax, page + 1),\n            \"page_end\": pmax,\n            \"pages\": pages\n        };\n    },\n    _renderMessages: function () {\n        this.$('.o_portal_chatter_messages').html(qweb.render(\"portal.chatter_messages\", {widget: this}));\n    },\n    _renderMessageCount: function () {\n        this.$('.o_message_counter').replaceWith(qweb.render(\"portal.chatter_message_count\", {widget: this}));\n    },\n    _renderPager: function () {\n        this.$('.o_portal_chatter_pager').replaceWith(qweb.render(\"portal.pager\", {widget: this}));\n    },\n\n    //--------------------------------------------------------------------------\n    // Handlers\n    //--------------------------------------------------------------------------\n\n    _onChangeDomain: function () {\n        var self = this;\n        this.messageFetch().then(function () {\n            var p = self._currentPage;\n            self.set('pager', self._pager(p));\n        });\n    },\n    /**\n     * @private\n     * @param {MouseEvent} event\n     */\n    _onClickPager: function (ev) {\n        ev.preventDefault();\n        var page = $(ev.currentTarget).data('page');\n        this._changeCurrentPage(page);\n    },\n\n    /**\n     * Toggle is_internal state of message. Update both node data and\n     * classes to ensure DOM is updated accordingly to RPC call result.\n     * @private\n     * @returns {Promise}\n     */\n    _onClickUpdateIsInternal: function (ev) {\n        ev.preventDefault();\n\n        var $elem = $(ev.currentTarget);\n        return this._rpc({\n            route: '/mail/update_is_internal',\n            params: {\n                message_id: $elem.data('message-id'),\n                is_internal: ! $elem.data('is-internal'),\n            },\n        }).then(function (result) {\n            $elem.data('is-internal', result);\n            if (result === true) {\n                $elem.addClass('o_portal_message_internal_on');\n                $elem.removeClass('o_portal_message_internal_off');\n            } else {\n                $elem.addClass('o_portal_message_internal_off');\n                $elem.removeClass('o_portal_message_internal_on');\n            }\n        });\n    },\n});\n\npublicWidget.registry.portalChatter = publicWidget.Widget.extend({\n    selector: '.o_portal_chatter',\n\n    /**\n     * @override\n     */\n    async start() {\n        const proms = [this._super.apply(this, arguments)];\n        const chatter = new PortalChatter(this, this.$el.data());\n        proms.push(chatter.appendTo(this.$el));\n        await Promise.all(proms);\n        // scroll to the right place after chatter loaded\n        if (window.location.hash === `#${this.el.id}`) {\n            dom.scrollTo(this.el, {duration: 0});\n        }\n    },\n});\n\nreturn {\n    PortalChatter: PortalChatter,\n};\n});\n", "odoo.define('portal.composer', function (require) {\n'use strict';\n\nvar ajax = require('web.ajax');\nvar core = require('web.core');\nvar publicWidget = require('web.public.widget');\n\nvar qweb = core.qweb;\nvar _t = core._t;\n\n/**\n * Widget PortalComposer\n *\n * Display the composer (according to access right)\n *\n */\nvar PortalComposer = publicWidget.Widget.extend({\n    template: 'portal.Composer',\n    xmlDependencies: ['/portal/static/src/xml/portal_chatter.xml'],\n    events: {\n        'change .o_portal_chatter_file_input': '_onFileInputChange',\n        'click .o_portal_chatter_attachment_btn': '_onAttachmentButtonClick',\n        'click .o_portal_chatter_attachment_delete': 'async _onAttachmentDeleteClick',\n        'click .o_portal_chatter_composer_btn': 'async _onSubmitButtonClick',\n    },\n\n    /**\n     * @constructor\n     */\n    init: function (parent, options) {\n        this._super.apply(this, arguments);\n        this.options = _.defaults(options || {}, {\n            'allow_composer': true,\n            'display_composer': false,\n            'csrf_token': odoo.csrf_token,\n            'token': false,\n            'res_model': false,\n            'res_id': false,\n        });\n        this.attachments = [];\n    },\n    /**\n     * @override\n     */\n    start: function () {\n        var self = this;\n        this.$attachmentButton = this.$('.o_portal_chatter_attachment_btn');\n        this.$fileInput = this.$('.o_portal_chatter_file_input');\n        this.$sendButton = this.$('.o_portal_chatter_composer_btn');\n        this.$attachments = this.$('.o_portal_chatter_composer_input .o_portal_chatter_attachments');\n        this.$inputTextarea = this.$('.o_portal_chatter_composer_input textarea[name=\"message\"]');\n\n        return this._super.apply(this, arguments).then(function () {\n            if (self.options.default_attachment_ids) {\n                self.attachments = self.options.default_attachment_ids || [];\n                _.each(self.attachments, function(attachment) {\n                    attachment.state = 'done';\n                });\n                self._updateAttachments();\n            }\n            return Promise.resolve();\n        });\n    },\n\n    //--------------------------------------------------------------------------\n    // Handlers\n    //--------------------------------------------------------------------------\n\n    /**\n     * @private\n     */\n    _onAttachmentButtonClick: function () {\n        this.$fileInput.click();\n    },\n    /**\n     * @private\n     * @param {Event} ev\n     * @returns {Promise}\n     */\n    _onAttachmentDeleteClick: function (ev) {\n        var self = this;\n        var attachmentId = $(ev.currentTarget).closest('.o_portal_chatter_attachment').data('id');\n        var accessToken = _.find(this.attachments, {'id': attachmentId}).access_token;\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        this.$sendButton.prop('disabled', true);\n\n        return this._rpc({\n            route: '/portal/attachment/remove',\n            params: {\n                'attachment_id': attachmentId,\n                'access_token': accessToken,\n            },\n        }).then(function () {\n            self.attachments = _.reject(self.attachments, {'id': attachmentId});\n            self._updateAttachments();\n            self.$sendButton.prop('disabled', false);\n        });\n    },\n    _prepareAttachmentData: function (file) {\n        return {\n            'name': file.name,\n            'file': file,\n            'res_id': this.options.res_id,\n            'res_model': this.options.res_model,\n            'access_token': this.options.token,\n        };\n    },\n    /**\n     * @private\n     * @returns {Promise}\n     */\n    _onFileInputChange: function () {\n        var self = this;\n\n        this.$sendButton.prop('disabled', true);\n\n        return Promise.all(_.map(this.$fileInput[0].files, function (file) {\n            return new Promise(function (resolve, reject) {\n                var data = self._prepareAttachmentData(file);\n                ajax.post('/portal/attachment/add', data).then(function (attachment) {\n                    attachment.state = 'pending';\n                    self.attachments.push(attachment);\n                    self._updateAttachments();\n                    resolve();\n                }).guardedCatch(function (error) {\n                    self.displayNotification({\n                        message: _.str.sprintf(_t(\"Could not save file <strong>%s</strong>\"),\n                            _.escape(file.name)),\n                        type: 'warning',\n                        sticky: true,\n                    });\n                    resolve();\n                });\n            });\n        })).then(function () {\n            // ensures any selection triggers a change, even if the same files are selected again\n            self.$fileInput[0].value = null;\n            self.$sendButton.prop('disabled', false);\n        });\n    },\n    /**\n     * prepares data to send message\n     *\n     * @private\n     */\n    _prepareMessageData: function () {\n        return Object.assign(this.options || {}, {\n            'message': this.$('textarea[name=\"message\"]').val(),\n            'attachment_ids': _.pluck(this.attachments, 'id'),\n            'attachment_tokens': _.pluck(this.attachments, 'access_token'),\n        });\n    },\n    /**\n     * @private\n     * @param {Event} ev\n     */\n    _onSubmitButtonClick: function (ev) {\n        ev.preventDefault();\n        if (!this.$inputTextarea.val().trim() && !this.attachments.length) {\n            this.$inputTextarea.addClass('border-danger');\n            const error = _t('Some fields are required. Please make sure to write a message or attach a document');\n            this.$(\".o_portal_chatter_composer_error\").text(error).removeClass('d-none');\n            return Promise.reject();\n        } else {\n            return this._chatterPostMessage(ev.currentTarget.getAttribute('data-action'));\n        }\n    },\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    /**\n     * @private\n     */\n    _updateAttachments: function () {\n        this.$attachments.html(qweb.render('portal.Chatter.Attachments', {\n            attachments: this.attachments,\n            showDelete: true,\n        }));\n    },\n    /**\n     * post message using rpc call and display new message and message count\n     *\n     * @private\n     * @param {String} route\n     * @returns {Promise}\n     */\n    _chatterPostMessage: async function (route) {\n        const result = await this._rpc({\n            route: route,\n            params: this._prepareMessageData(),\n        });\n        core.bus.trigger('reload_chatter_content', result);\n        return result;\n    },\n});\n\nreturn {\n    PortalComposer: PortalComposer,\n};\n});\n", "odoo.define('portal.signature_form', function (require) {\n'use strict';\n\nvar core = require('web.core');\nvar publicWidget = require('web.public.widget');\nvar NameAndSignature = require('web.name_and_signature').NameAndSignature;\nvar qweb = core.qweb;\n\nvar _t = core._t;\n\n/**\n * This widget is a signature request form. It uses\n * @see NameAndSignature for the input fields, adds a submit\n * button, and handles the RPC to save the result.\n */\nvar SignatureForm = publicWidget.Widget.extend({\n    template: 'portal.portal_signature',\n    xmlDependencies: ['/portal/static/src/xml/portal_signature.xml'],\n    events: {\n        'click .o_portal_sign_submit': 'async _onClickSignSubmit',\n    },\n    custom_events: {\n        'signature_changed': '_onChangeSignature',\n    },\n\n    /**\n     * Overridden to allow options.\n     *\n     * @constructor\n     * @param {Widget} parent\n     * @param {Object} options\n     * @param {string} options.callUrl - make RPC to this url\n     * @param {string} [options.sendLabel='Accept & Sign'] - label of the\n     *  send button\n     * @param {Object} [options.rpcParams={}] - params for the RPC\n     * @param {Object} [options.nameAndSignatureOptions={}] - options for\n     *  @see NameAndSignature.init()\n     */\n    init: function (parent, options) {\n        this._super.apply(this, arguments);\n\n        this.csrf_token = odoo.csrf_token;\n\n        this.callUrl = options.callUrl || '';\n        this.rpcParams = options.rpcParams || {};\n        this.sendLabel = options.sendLabel || _t(\"Accept & Sign\");\n\n        this.nameAndSignature = new NameAndSignature(this,\n            options.nameAndSignatureOptions || {});\n    },\n    /**\n     * Overridden to get the DOM elements\n     * and to insert the name and signature.\n     *\n     * @override\n     */\n    start: function () {\n        var self = this;\n        this.$confirm_btn = this.$('.o_portal_sign_submit');\n        this.$controls = this.$('.o_portal_sign_controls');\n        var subWidgetStart = this.nameAndSignature.replace(this.$('.o_web_sign_name_and_signature'));\n        return Promise.all([subWidgetStart, this._super.apply(this, arguments)]).then(function () {\n            self.nameAndSignature.resetSignature();\n        });\n    },\n\n    //----------------------------------------------------------------------\n    // Public\n    //----------------------------------------------------------------------\n\n    /**\n     * Focuses the name.\n     *\n     * @see NameAndSignature.focusName();\n     */\n    focusName: function () {\n        this.nameAndSignature.focusName();\n    },\n    /**\n     * Resets the signature.\n     *\n     * @see NameAndSignature.resetSignature();\n     */\n    resetSignature: function () {\n        return this.nameAndSignature.resetSignature();\n    },\n\n    //----------------------------------------------------------------------\n    // Handlers\n    //----------------------------------------------------------------------\n\n    /**\n     * Handles click on the submit button.\n     *\n     * This will get the current name and signature and validate them.\n     * If they are valid, they are sent to the server, and the reponse is\n     * handled. If they are invalid, it will display the errors to the user.\n     *\n     * @private\n     * @param {Event} ev\n     * @returns {Deferred}\n     */\n    _onClickSignSubmit: function (ev) {\n        var self = this;\n        ev.preventDefault();\n\n        if (!this.nameAndSignature.validateSignature()) {\n            return;\n        }\n\n        var name = this.nameAndSignature.getName();\n        var signature = this.nameAndSignature.getSignatureImage()[1];\n\n        return this._rpc({\n            route: this.callUrl,\n            params: _.extend(this.rpcParams, {\n                'name': name,\n                'signature': signature,\n            }),\n        }).then(function (data) {\n            if (data.error) {\n                self.$('.o_portal_sign_error_msg').remove();\n                self.$controls.prepend(qweb.render('portal.portal_signature_error', {widget: data}));\n            } else if (data.success) {\n                var $success = qweb.render('portal.portal_signature_success', {widget: data});\n                self.$el.empty().append($success);\n            }\n            if (data.force_refresh) {\n                if (data.redirect_url) {\n                    window.location = data.redirect_url;\n                } else {\n                    window.location.reload();\n                }\n                // no resolve if we reload the page\n                return new Promise(function () { });\n            }\n        });\n    },\n    /**\n     * Toggles the submit button depending on the signature state.\n     *\n     * @private\n     */\n    _onChangeSignature: function () {\n        var isEmpty = this.nameAndSignature.isSignatureEmpty();\n        this.$confirm_btn.prop('disabled', isEmpty);\n    },\n});\n\npublicWidget.registry.SignatureForm = publicWidget.Widget.extend({\n    selector: '.o_portal_signature_form',\n\n    /**\n     * @private\n     */\n    start: function () {\n        var hasBeenReset = false;\n\n        var callUrl = this.$el.data('call-url');\n        var nameAndSignatureOptions = {\n            defaultName: this.$el.data('default-name'),\n            mode: this.$el.data('mode'),\n            displaySignatureRatio: this.$el.data('signature-ratio'),\n            signatureType: this.$el.data('signature-type'),\n            fontColor: this.$el.data('font-color')  || 'black',\n        };\n        var sendLabel = this.$el.data('send-label');\n\n        var form = new SignatureForm(this, {\n            callUrl: callUrl,\n            nameAndSignatureOptions: nameAndSignatureOptions,\n            sendLabel: sendLabel,\n        });\n\n        // Correctly set up the signature area if it is inside a modal\n        this.$el.closest('.modal').on('shown.bs.modal', function (ev) {\n            if (!hasBeenReset) {\n                // Reset it only the first time it is open to get correct\n                // size. After we want to keep its content on reopen.\n                hasBeenReset = true;\n                form.resetSignature();\n            } else {\n                form.focusName();\n            }\n        });\n\n        return Promise.all([\n            this._super.apply(this, arguments),\n            form.appendTo(this.$el)\n        ]);\n    },\n});\n\nreturn {\n    SignatureForm: SignatureForm,\n};\n});\n", "odoo.define('portal.PortalSidebar', function (require) {\n'use strict';\n\nvar core = require('web.core');\nvar publicWidget = require('web.public.widget');\nvar time = require('web.time');\nvar session = require('web.session');\n\nvar _t = core._t;\n\nvar PortalSidebar = publicWidget.Widget.extend({\n    /**\n     * @override\n     */\n    start: function () {\n        this._setDelayLabel();\n        return this._super.apply(this, arguments);\n    },\n\n    //--------------------------------------------------------------------------\n    // Private\n    //---------------------------------------------------------------------------\n\n    /**\n     * Set the due/delay information according to the given date\n     * like : <span class=\"o_portal_sidebar_timeago\" t-att-datetime=\"invoice.date_due\"/>\n     *\n     * @private\n     */\n    _setDelayLabel: function () {\n        var $sidebarTimeago = this.$el.find('.o_portal_sidebar_timeago');\n        _.each($sidebarTimeago, function (el) {\n            var dateTime = moment(time.auto_str_to_date($(el).attr('datetime'))),\n                today = moment().startOf('day'),\n                diff = dateTime.diff(today, 'days', true),\n                displayStr;\n\n            session.is_bound.then(function (){\n                if (diff === 0) {\n                    displayStr = _t('Due today');\n                } else if (diff > 0) {\n                    // Workaround: force uniqueness of these two translations. We use %1d because the string\n                    // with %d is already used in mail and mail's translations are not sent to the frontend.\n                    displayStr = _.str.sprintf(_t('Due in %1d days'), Math.abs(diff));\n                } else {\n                    displayStr = _.str.sprintf(_t('%1d days overdue'), Math.abs(diff));\n                }\n                $(el).text(displayStr);\n            });\n        });\n    },\n    /**\n     * @private\n     * @param {string} href\n     */\n    _printIframeContent: function (href) {\n        // due to this issue : https://bugzilla.mozilla.org/show_bug.cgi?id=911444\n        // open a new window with pdf for print in Firefox (in other system: http://printjs.crabbly.com)\n        if ($.browser.mozilla) {\n            window.open(href, '_blank');\n            return;\n        }\n        if (!this.printContent) {\n            this.printContent = $('<iframe id=\"print_iframe_content\" src=\"' + href + '\" style=\"display:none\"></iframe>');\n            this.$el.append(this.printContent);\n            this.printContent.on('load', function () {\n                $(this).get(0).contentWindow.print();\n            });\n        } else {\n            this.printContent.get(0).contentWindow.print();\n        }\n    },\n});\nreturn PortalSidebar;\n});\n", "odoo.define('account.AccountPortalSidebar', function (require) {\n'use strict';\n\nconst dom = require('web.dom');\nvar publicWidget = require('web.public.widget');\nvar PortalSidebar = require('portal.PortalSidebar');\nvar utils = require('web.utils');\n\npublicWidget.registry.AccountPortalSidebar = PortalSidebar.extend({\n    selector: '.o_portal_invoice_sidebar',\n    events: {\n        'click .o_portal_invoice_print': '_onPrintInvoice',\n    },\n\n    /**\n     * @override\n     */\n    start: function () {\n        var def = this._super.apply(this, arguments);\n\n        var $invoiceHtml = this.$el.find('iframe#invoice_html');\n        var updateIframeSize = this._updateIframeSize.bind(this, $invoiceHtml);\n\n        $(window).on('resize', updateIframeSize);\n\n        var iframeDoc = $invoiceHtml[0].contentDocument || $invoiceHtml[0].contentWindow.document;\n        if (iframeDoc.readyState === 'complete') {\n            updateIframeSize();\n        } else {\n            $invoiceHtml.on('load', updateIframeSize);\n        }\n\n        return def;\n    },\n\n    //--------------------------------------------------------------------------\n    // Handlers\n    //--------------------------------------------------------------------------\n\n    /**\n     * Called when the iframe is loaded or the window is resized on customer portal.\n     * The goal is to expand the iframe height to display the full report without scrollbar.\n     *\n     * @private\n     * @param {object} $el: the iframe\n     */\n    _updateIframeSize: function ($el) {\n        var $wrapwrap = $el.contents().find('div#wrapwrap');\n        // Set it to 0 first to handle the case where scrollHeight is too big for its content.\n        $el.height(0);\n        $el.height($wrapwrap[0].scrollHeight);\n\n        // scroll to the right place after iframe resize\n        if (!utils.isValidAnchor(window.location.hash)) {\n            return;\n        }\n        var $target = $(window.location.hash);\n        if (!$target.length) {\n            return;\n        }\n        dom.scrollTo($target[0], {duration: 0});\n    },\n    /**\n     * @private\n     * @param {MouseEvent} ev\n     */\n    _onPrintInvoice: function (ev) {\n        ev.preventDefault();\n        var href = $(ev.currentTarget).attr('href');\n        this._printIframeContent(href);\n    },\n});\n});\n", "// Generated by CoffeeScript 1.7.1\n(function() {\n  var $, cardFromNumber, cardFromType, cards, defaultFormat, formatBackCardNumber, formatBackExpiry, formatCardNumber, formatExpiry, formatForwardExpiry, formatForwardSlashAndSpace, hasTextSelected, luhnCheck, reFormatCVC, reFormatCardNumber, reFormatExpiry, reFormatNumeric, replaceFullWidthChars, restrictCVC, restrictCardNumber, restrictExpiry, restrictNumeric, safeVal, setCardType,\n    __slice = [].slice,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  $ = window.jQuery || window.Zepto || window.$;\n\n  $.payment = {};\n\n  $.payment.fn = {};\n\n  $.fn.payment = function() {\n    var args, method;\n    method = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    return $.payment.fn[method].apply(this, args);\n  };\n\n  defaultFormat = /(\\d{1,4})/g;\n\n  $.payment.cards = cards = [\n    {\n      type: 'maestro',\n      patterns: [5018, 502, 503, 506, 56, 58, 639, 6220, 67],\n      format: defaultFormat,\n      length: [12, 13, 14, 15, 16, 17, 18, 19],\n      cvcLength: [3],\n      luhn: true\n    }, {\n      type: 'forbrugsforeningen',\n      patterns: [600],\n      format: defaultFormat,\n      length: [16],\n      cvcLength: [3],\n      luhn: true\n    }, {\n      type: 'dankort',\n      patterns: [5019],\n      format: defaultFormat,\n      length: [16],\n      cvcLength: [3],\n      luhn: true\n    }, {\n      type: 'visa',\n      patterns: [4],\n      format: defaultFormat,\n      length: [13, 16],\n      cvcLength: [3],\n      luhn: true\n    }, {\n      type: 'mastercard',\n      patterns: [51, 52, 53, 54, 55, 22, 23, 24, 25, 26, 27],\n      format: defaultFormat,\n      length: [16],\n      cvcLength: [3],\n      luhn: true\n    }, {\n      type: 'amex',\n      patterns: [34, 37],\n      format: /(\\d{1,4})(\\d{1,6})?(\\d{1,5})?/,\n      length: [15],\n      cvcLength: [3, 4],\n      luhn: true\n    }, {\n      type: 'dinersclub',\n      patterns: [30, 36, 38, 39],\n      format: /(\\d{1,4})(\\d{1,6})?(\\d{1,4})?/,\n      length: [14],\n      cvcLength: [3],\n      luhn: true\n    }, {\n      type: 'discover',\n      patterns: [60, 64, 65, 622],\n      format: defaultFormat,\n      length: [16],\n      cvcLength: [3],\n      luhn: true\n    }, {\n      type: 'unionpay',\n      patterns: [62, 88],\n      format: defaultFormat,\n      length: [16, 17, 18, 19],\n      cvcLength: [3],\n      luhn: false\n    }, {\n      type: 'jcb',\n      patterns: [35],\n      format: defaultFormat,\n      length: [16],\n      cvcLength: [3],\n      luhn: true\n    }\n  ];\n\n  cardFromNumber = function(num) {\n    var card, p, pattern, _i, _j, _len, _len1, _ref;\n    num = (num + '').replace(/\\D/g, '');\n    for (_i = 0, _len = cards.length; _i < _len; _i++) {\n      card = cards[_i];\n      _ref = card.patterns;\n      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n        pattern = _ref[_j];\n        p = pattern + '';\n        if (num.substr(0, p.length) === p) {\n          return card;\n        }\n      }\n    }\n  };\n\n  cardFromType = function(type) {\n    var card, _i, _len;\n    for (_i = 0, _len = cards.length; _i < _len; _i++) {\n      card = cards[_i];\n      if (card.type === type) {\n        return card;\n      }\n    }\n  };\n\n  luhnCheck = function(num) {\n    var digit, digits, odd, sum, _i, _len;\n    odd = true;\n    sum = 0;\n    digits = (num + '').split('').reverse();\n    for (_i = 0, _len = digits.length; _i < _len; _i++) {\n      digit = digits[_i];\n      digit = parseInt(digit, 10);\n      if ((odd = !odd)) {\n        digit *= 2;\n      }\n      if (digit > 9) {\n        digit -= 9;\n      }\n      sum += digit;\n    }\n    return sum % 10 === 0;\n  };\n\n  hasTextSelected = function($target) {\n    var _ref;\n    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== $target.prop('selectionEnd')) {\n      return true;\n    }\n    if ((typeof document !== \"undefined\" && document !== null ? (_ref = document.selection) != null ? _ref.createRange : void 0 : void 0) != null) {\n      if (document.selection.createRange().text) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  safeVal = function(value, $target) {\n    var currPair, cursor, digit, error, last, prevPair;\n    try {\n      cursor = $target.prop('selectionStart');\n    } catch (_error) {\n      error = _error;\n      cursor = null;\n    }\n    last = $target.val();\n    $target.val(value);\n    if (cursor !== null && $target.is(\":focus\")) {\n      if (cursor === last.length) {\n        cursor = value.length;\n      }\n      if (last !== value) {\n        prevPair = last.slice(cursor - 1, +cursor + 1 || 9e9);\n        currPair = value.slice(cursor - 1, +cursor + 1 || 9e9);\n        digit = value[cursor];\n        if (/\\d/.test(digit) && prevPair === (\"\" + digit + \" \") && currPair === (\" \" + digit)) {\n          cursor = cursor + 1;\n        }\n      }\n      $target.prop('selectionStart', cursor);\n      return $target.prop('selectionEnd', cursor);\n    }\n  };\n\n  replaceFullWidthChars = function(str) {\n    var chars, chr, fullWidth, halfWidth, idx, value, _i, _len;\n    if (str == null) {\n      str = '';\n    }\n    fullWidth = '\\uff10\\uff11\\uff12\\uff13\\uff14\\uff15\\uff16\\uff17\\uff18\\uff19';\n    halfWidth = '0123456789';\n    value = '';\n    chars = str.split('');\n    for (_i = 0, _len = chars.length; _i < _len; _i++) {\n      chr = chars[_i];\n      idx = fullWidth.indexOf(chr);\n      if (idx > -1) {\n        chr = halfWidth[idx];\n      }\n      value += chr;\n    }\n    return value;\n  };\n\n  reFormatNumeric = function(e) {\n    var $target;\n    $target = $(e.currentTarget);\n    return setTimeout(function() {\n      var value;\n      value = $target.val();\n      value = replaceFullWidthChars(value);\n      value = value.replace(/\\D/g, '');\n      return safeVal(value, $target);\n    });\n  };\n\n  reFormatCardNumber = function(e) {\n    var $target;\n    $target = $(e.currentTarget);\n    return setTimeout(function() {\n      var value;\n      value = $target.val();\n      value = replaceFullWidthChars(value);\n      value = $.payment.formatCardNumber(value);\n      return safeVal(value, $target);\n    });\n  };\n\n  formatCardNumber = function(e) {\n    var $target, card, digit, length, re, upperLength, value;\n    digit = String.fromCharCode(e.which);\n    if (!/^\\d+$/.test(digit)) {\n      return;\n    }\n    $target = $(e.currentTarget);\n    value = $target.val();\n    card = cardFromNumber(value + digit);\n    length = (value.replace(/\\D/g, '') + digit).length;\n    upperLength = 16;\n    if (card) {\n      upperLength = card.length[card.length.length - 1];\n    }\n    if (length >= upperLength) {\n      return;\n    }\n    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {\n      return;\n    }\n    if (card && card.type === 'amex') {\n      re = /^(\\d{4}|\\d{4}\\s\\d{6})$/;\n    } else {\n      re = /(?:^|\\s)(\\d{4})$/;\n    }\n    if (re.test(value)) {\n      e.preventDefault();\n      return setTimeout(function() {\n        return $target.val(value + ' ' + digit);\n      });\n    } else if (re.test(value + digit)) {\n      e.preventDefault();\n      return setTimeout(function() {\n        return $target.val(value + digit + ' ');\n      });\n    }\n  };\n\n  formatBackCardNumber = function(e) {\n    var $target, value;\n    $target = $(e.currentTarget);\n    value = $target.val();\n    if (e.which !== 8) {\n      return;\n    }\n    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {\n      return;\n    }\n    if (/\\d\\s$/.test(value)) {\n      e.preventDefault();\n      return setTimeout(function() {\n        return $target.val(value.replace(/\\d\\s$/, ''));\n      });\n    } else if (/\\s\\d?$/.test(value)) {\n      e.preventDefault();\n      return setTimeout(function() {\n        return $target.val(value.replace(/\\d$/, ''));\n      });\n    }\n  };\n\n  reFormatExpiry = function(e) {\n    var $target;\n    $target = $(e.currentTarget);\n    return setTimeout(function() {\n      var value;\n      value = $target.val();\n      value = replaceFullWidthChars(value);\n      value = $.payment.formatExpiry(value);\n      return safeVal(value, $target);\n    });\n  };\n\n  formatExpiry = function(e) {\n    var $target, digit, val;\n    digit = String.fromCharCode(e.which);\n    if (!/^\\d+$/.test(digit)) {\n      return;\n    }\n    $target = $(e.currentTarget);\n    val = $target.val() + digit;\n    if (/^\\d$/.test(val) && (val !== '0' && val !== '1')) {\n      e.preventDefault();\n      return setTimeout(function() {\n        return $target.val(\"0\" + val + \" / \");\n      });\n    } else if (/^\\d\\d$/.test(val)) {\n      e.preventDefault();\n      return setTimeout(function() {\n        var m1, m2;\n        m1 = parseInt(val[0], 10);\n        m2 = parseInt(val[1], 10);\n        if (m2 > 2 && m1 !== 0) {\n          return $target.val(\"0\" + m1 + \" / \" + m2);\n        } else {\n          return $target.val(\"\" + val + \" / \");\n        }\n      });\n    }\n  };\n\n  formatForwardExpiry = function(e) {\n    var $target, digit, val;\n    digit = String.fromCharCode(e.which);\n    if (!/^\\d+$/.test(digit)) {\n      return;\n    }\n    $target = $(e.currentTarget);\n    val = $target.val();\n    if (/^\\d\\d$/.test(val)) {\n      return $target.val(\"\" + val + \" / \");\n    }\n  };\n\n  formatForwardSlashAndSpace = function(e) {\n    var $target, val, which;\n    which = String.fromCharCode(e.which);\n    if (!(which === '/' || which === ' ')) {\n      return;\n    }\n    $target = $(e.currentTarget);\n    val = $target.val();\n    if (/^\\d$/.test(val) && val !== '0') {\n      return $target.val(\"0\" + val + \" / \");\n    }\n  };\n\n  formatBackExpiry = function(e) {\n    var $target, value;\n    $target = $(e.currentTarget);\n    value = $target.val();\n    if (e.which !== 8) {\n      return;\n    }\n    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {\n      return;\n    }\n    if (/\\d\\s\\/\\s$/.test(value)) {\n      e.preventDefault();\n      return setTimeout(function() {\n        return $target.val(value.replace(/\\d\\s\\/\\s$/, ''));\n      });\n    }\n  };\n\n  reFormatCVC = function(e) {\n    var $target;\n    $target = $(e.currentTarget);\n    return setTimeout(function() {\n      var value;\n      value = $target.val();\n      value = replaceFullWidthChars(value);\n      value = value.replace(/\\D/g, '').slice(0, 4);\n      return safeVal(value, $target);\n    });\n  };\n\n  restrictNumeric = function(e) {\n    var input;\n    if (e.metaKey || e.ctrlKey) {\n      return true;\n    }\n    if (e.which === 32) {\n      return false;\n    }\n    if (e.which === 0) {\n      return true;\n    }\n    if (e.which < 33) {\n      return true;\n    }\n    input = String.fromCharCode(e.which);\n    return !!/[\\d\\s]/.test(input);\n  };\n\n  restrictCardNumber = function(e) {\n    var $target, card, digit, value;\n    $target = $(e.currentTarget);\n    digit = String.fromCharCode(e.which);\n    if (!/^\\d+$/.test(digit)) {\n      return;\n    }\n    if (hasTextSelected($target)) {\n      return;\n    }\n    value = ($target.val() + digit).replace(/\\D/g, '');\n    card = cardFromNumber(value);\n    if (card) {\n      return value.length <= card.length[card.length.length - 1];\n    } else {\n      return value.length <= 16;\n    }\n  };\n\n  restrictExpiry = function(e) {\n    var $target, digit, value;\n    $target = $(e.currentTarget);\n    digit = String.fromCharCode(e.which);\n    if (!/^\\d+$/.test(digit)) {\n      return;\n    }\n    if (hasTextSelected($target)) {\n      return;\n    }\n    value = $target.val() + digit;\n    value = value.replace(/\\D/g, '');\n    if (value.length > 6) {\n      return false;\n    }\n  };\n\n  restrictCVC = function(e) {\n    var $target, digit, val;\n    $target = $(e.currentTarget);\n    digit = String.fromCharCode(e.which);\n    if (!/^\\d+$/.test(digit)) {\n      return;\n    }\n    if (hasTextSelected($target)) {\n      return;\n    }\n    val = $target.val() + digit;\n    return val.length <= 4;\n  };\n\n  setCardType = function(e) {\n    var $target, allTypes, card, cardType, val;\n    $target = $(e.currentTarget);\n    val = $target.val();\n    cardType = $.payment.cardType(val) || 'unknown';\n    if (!$target.hasClass(cardType)) {\n      allTypes = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = cards.length; _i < _len; _i++) {\n          card = cards[_i];\n          _results.push(card.type);\n        }\n        return _results;\n      })();\n      $target.removeClass('unknown');\n      $target.removeClass(allTypes.join(' '));\n      $target.addClass(cardType);\n      $target.toggleClass('identified', cardType !== 'unknown');\n      return $target.trigger('payment.cardType', cardType);\n    }\n  };\n\n  $.payment.fn.formatCardCVC = function() {\n    this.on('keypress', restrictNumeric);\n    this.on('keypress', restrictCVC);\n    this.on('paste', reFormatCVC);\n    this.on('change', reFormatCVC);\n    this.on('input', reFormatCVC);\n    return this;\n  };\n\n  $.payment.fn.formatCardExpiry = function() {\n    this.on('keypress', restrictNumeric);\n    this.on('keypress', restrictExpiry);\n    this.on('keypress', formatExpiry);\n    this.on('keypress', formatForwardSlashAndSpace);\n    this.on('keypress', formatForwardExpiry);\n    this.on('keydown', formatBackExpiry);\n    this.on('change', reFormatExpiry);\n    this.on('input', reFormatExpiry);\n    return this;\n  };\n\n  $.payment.fn.formatCardNumber = function() {\n    this.on('keypress', restrictNumeric);\n    this.on('keypress', restrictCardNumber);\n    this.on('keypress', formatCardNumber);\n    this.on('keydown', formatBackCardNumber);\n    this.on('keyup', setCardType);\n    this.on('paste', reFormatCardNumber);\n    this.on('change', reFormatCardNumber);\n    this.on('input', reFormatCardNumber);\n    this.on('input', setCardType);\n    return this;\n  };\n\n  $.payment.fn.restrictNumeric = function() {\n    this.on('keypress', restrictNumeric);\n    this.on('paste', reFormatNumeric);\n    this.on('change', reFormatNumeric);\n    this.on('input', reFormatNumeric);\n    return this;\n  };\n\n  $.payment.fn.cardExpiryVal = function() {\n    return $.payment.cardExpiryVal($(this).val());\n  };\n\n  $.payment.cardExpiryVal = function(value) {\n    var month, prefix, year, _ref;\n    _ref = value.split(/[\\s\\/]+/, 2), month = _ref[0], year = _ref[1];\n    if ((year != null ? year.length : void 0) === 2 && /^\\d+$/.test(year)) {\n      prefix = (new Date).getFullYear();\n      prefix = prefix.toString().slice(0, 2);\n      year = prefix + year;\n    }\n    month = parseInt(month, 10);\n    year = parseInt(year, 10);\n    return {\n      month: month,\n      year: year\n    };\n  };\n\n  $.payment.validateCardNumber = function(num) {\n    var card, _ref;\n    num = (num + '').replace(/\\s+|-/g, '');\n    if (!/^\\d+$/.test(num)) {\n      return false;\n    }\n    card = cardFromNumber(num);\n    if (!card) {\n      return false;\n    }\n    return (_ref = num.length, __indexOf.call(card.length, _ref) >= 0) && (card.luhn === false || luhnCheck(num));\n  };\n\n  $.payment.validateCardExpiry = function(month, year) {\n    var currentTime, expiry, _ref;\n    if (typeof month === 'object' && 'month' in month) {\n      _ref = month, month = _ref.month, year = _ref.year;\n    }\n    if (!(month && year)) {\n      return false;\n    }\n    month = $.trim(month);\n    year = $.trim(year);\n    if (!/^\\d+$/.test(month)) {\n      return false;\n    }\n    if (!/^\\d+$/.test(year)) {\n      return false;\n    }\n    if (!((1 <= month && month <= 12))) {\n      return false;\n    }\n    if (year.length === 2) {\n      if (year < 70) {\n        year = \"20\" + year;\n      } else {\n        year = \"19\" + year;\n      }\n    }\n    if (year.length !== 4) {\n      return false;\n    }\n    expiry = new Date(year, month);\n    currentTime = new Date;\n    expiry.setMonth(expiry.getMonth() - 1);\n    expiry.setMonth(expiry.getMonth() + 1, 1);\n    return expiry > currentTime;\n  };\n\n  $.payment.validateCardCVC = function(cvc, type) {\n    var card, _ref;\n    cvc = $.trim(cvc);\n    if (!/^\\d+$/.test(cvc)) {\n      return false;\n    }\n    card = cardFromType(type);\n    if (card != null) {\n      return _ref = cvc.length, __indexOf.call(card.cvcLength, _ref) >= 0;\n    } else {\n      return cvc.length >= 3 && cvc.length <= 4;\n    }\n  };\n\n  $.payment.cardType = function(num) {\n    var _ref;\n    if (!num) {\n      return null;\n    }\n    return ((_ref = cardFromNumber(num)) != null ? _ref.type : void 0) || null;\n  };\n\n  $.payment.formatCardNumber = function(num) {\n    var card, groups, upperLength, _ref;\n    num = num.replace(/\\D/g, '');\n    card = cardFromNumber(num);\n    if (!card) {\n      return num;\n    }\n    upperLength = card.length[card.length.length - 1];\n    num = num.slice(0, upperLength);\n    if (card.format.global) {\n      return (_ref = num.match(card.format)) != null ? _ref.join(' ') : void 0;\n    } else {\n      groups = card.format.exec(num);\n      if (groups == null) {\n        return;\n      }\n      groups.shift();\n      groups = $.grep(groups, function(n) {\n        return n;\n      });\n      return groups.join(' ');\n    }\n  };\n\n  $.payment.formatExpiry = function(expiry) {\n    var mon, parts, sep, year;\n    parts = expiry.match(/^\\D*(\\d{1,2})(\\D+)?(\\d{1,4})?/);\n    if (!parts) {\n      return '';\n    }\n    mon = parts[1] || '';\n    sep = parts[2] || '';\n    year = parts[3] || '';\n    if (year.length > 0) {\n      sep = ' / ';\n    } else if (sep === ' /') {\n      mon = mon.substring(0, 1);\n      sep = '';\n    } else if (mon.length === 2 || sep.length > 0) {\n      sep = ' / ';\n    } else if (mon.length === 1 && (mon !== '0' && mon !== '1')) {\n      mon = \"0\" + mon;\n      sep = ' / ';\n    }\n    return mon + sep + year;\n  };\n\n}).call(this);\n", "odoo.define('payment.checkout_form', require => {\n    'use strict';\n\n    const publicWidget = require('web.public.widget');\n\n    const paymentFormMixin = require('payment.payment_form_mixin');\n\n    publicWidget.registry.PaymentCheckoutForm = publicWidget.Widget.extend(paymentFormMixin, {\n        selector: 'form[name=\"o_payment_checkout\"]',\n        events: Object.assign({}, publicWidget.Widget.prototype.events, {\n                'click div[name=\"o_payment_option_card\"]': '_onClickPaymentOption',\n                'click a[name=\"o_payment_icon_more\"]': '_onClickMorePaymentIcons',\n                'click a[name=\"o_payment_icon_less\"]': '_onClickLessPaymentIcons',\n                'click button[name=\"o_payment_submit_button\"]': '_onClickPay',\n                'submit': '_onSubmit',\n            }),\n\n        /**\n         * @constructor\n         */\n        init: function () {\n            const preventDoubleClick = handlerMethod => {\n                return _.debounce(handlerMethod, 500, true);\n            };\n            this._super(...arguments);\n            // Prevent double-clicks and browser glitches on all inputs\n            this._onClickLessPaymentIcons = preventDoubleClick(this._onClickLessPaymentIcons);\n            this._onClickMorePaymentIcons = preventDoubleClick(this._onClickMorePaymentIcons);\n            this._onClickPay = preventDoubleClick(this._onClickPay);\n            this._onClickPaymentOption = preventDoubleClick(this._onClickPaymentOption);\n            this._onSubmit = preventDoubleClick(this._onSubmit);\n        },\n\n        //--------------------------------------------------------------------------\n        // Handlers\n        //--------------------------------------------------------------------------\n\n        /**\n         * Handle a direct payment, a payment with redirection, or a payment by token.\n         *\n         * Called when clicking on the 'Pay' button or when submitting the form.\n         *\n         * @private\n         * @param {Event} ev\n         * @return {undefined}\n         */\n        _onClickPay: async function (ev) {\n            ev.stopPropagation();\n            ev.preventDefault();\n\n            // Check that the user has selected a payment option\n            const $checkedRadios = this.$('input[name=\"o_payment_radio\"]:checked');\n            if (!this._ensureRadioIsChecked($checkedRadios)) {\n                return;\n            }\n            const checkedRadio = $checkedRadios[0];\n\n            // Extract contextual values from the radio button\n            const provider = this._getProviderFromRadio(checkedRadio);\n            const paymentOptionId = this._getPaymentOptionIdFromRadio(checkedRadio);\n            const flow = this._getPaymentFlowFromRadio(checkedRadio);\n\n            // Update the tx context with the value of the \"Save my payment details\" checkbox\n            if (flow !== 'token') {\n                const $tokenizeCheckbox = this.$(\n                    `#o_payment_acquirer_inline_form_${paymentOptionId}` // Only match acq. radios\n                ).find('input[name=\"o_payment_save_as_token\"]');\n                this.txContext.tokenizationRequested = $tokenizeCheckbox.length === 1\n                    && $tokenizeCheckbox[0].checked;\n            } else {\n                this.txContext.tokenizationRequested = false;\n            }\n\n            // Make the payment\n            this._hideError(); // Don't keep the error displayed if the user is going through 3DS2\n            this._disableButton(true); // Disable until it is needed again\n            $('body').block({\n                message: false,\n                overlayCSS: {backgroundColor: \"#000\", opacity: 0, zIndex: 1050},\n            });\n            this._processPayment(provider, paymentOptionId, flow);\n        },\n\n        /**\n         * Delegate the handling of the payment request to `_onClickPay`.\n         *\n         * Called when submitting the form (e.g. through the Return key).\n         *\n         * @private\n         * @param {Event} ev\n         * @return {undefined}\n         */\n        _onSubmit: function (ev) {\n            ev.stopPropagation();\n            ev.preventDefault();\n\n            this._onClickPay(ev);\n        },\n\n    });\n    return publicWidget.registry.PaymentCheckoutForm;\n});\n", "odoo.define('payment.manage_form', require => {\n    'use strict';\n\n    const core = require('web.core');\n    const publicWidget = require('web.public.widget');\n    const Dialog = require('web.Dialog');\n\n    const paymentFormMixin = require('payment.payment_form_mixin');\n\n    const _t = core._t;\n\n    publicWidget.registry.PaymentManageForm = publicWidget.Widget.extend(paymentFormMixin, {\n        selector: 'form[name=\"o_payment_manage\"]',\n        events: Object.assign({}, publicWidget.Widget.prototype.events, {\n            'click div[name=\"o_payment_option_card\"]': '_onClickPaymentOption',\n            'click a[name=\"o_payment_icon_more\"]': '_onClickMorePaymentIcons',\n            'click a[name=\"o_payment_icon_less\"]': '_onClickLessPaymentIcons',\n            'click button[name=\"o_payment_submit_button\"]': '_onClickSaveToken',\n            'click button[name=\"o_payment_delete_token\"]': '_onClickDeleteToken',\n            'submit': '_onSubmit',\n        }),\n\n        /**\n         * @constructor\n         */\n        init: function () {\n            const preventDoubleClick = handlerMethod => {\n                return _.debounce(handlerMethod, 500, true);\n            };\n            this._super(...arguments);\n            // Prevent double-clicks and browser glitches on all inputs\n            this._onClickDeleteToken = preventDoubleClick(this._onClickDeleteToken);\n            this._onClickLessPaymentIcons = preventDoubleClick(this._onClickLessPaymentIcons);\n            this._onClickMorePaymentIcons = preventDoubleClick(this._onClickMorePaymentIcons);\n            this._onClickPaymentOption = preventDoubleClick(this._onClickPaymentOption);\n            this._onClickSaveToken = preventDoubleClick(this._onClickSaveToken);\n            this._onSubmit = preventDoubleClick(this._onSubmit);\n        },\n\n        //--------------------------------------------------------------------------\n        // Private\n        //--------------------------------------------------------------------------\n\n        /**\n         * Assign the token to a record.\n         *\n         * @private\n         * @param {number} tokenId - The id of the token to assign\n         * @return {undefined}\n         */\n        _assignToken: function (tokenId) {\n            // Call the assign route to assign the token to a record\n            this._rpc({\n                route: this.txContext.assignTokenRoute,\n                params: {\n                    'token_id': tokenId,\n                    'csrf_token': core.csrf_token,\n                }\n            }).then(() => {\n                window.location = this.txContext.landingRoute;\n            }).guardedCatch(error => {\n                error.event.preventDefault();\n                this._displayError(\n                    _t(\"Server Error\"),\n                    _t(\"We are not able to save your payment method.\"),\n                    error.message.data.message\n                );\n            });\n        },\n\n        /**\n         * Search for documents linked to the token and ask the user for confirmation.\n         *\n         * If any such document is found, a confirmation dialog is shown.\n         *\n         * @private\n         * @param {number} tokenId - The id of the token to delete\n         * @return {undefined}\n         */\n        _deleteToken: function (tokenId) {\n            const execute = () => {\n                this._rpc({\n                    route: '/payment/archive_token',\n                    params: {\n                        'token_id': tokenId,\n                    },\n                }).then(() => {\n                    const $tokenCard = this.$(\n                        `input[name=\"o_payment_radio\"][data-payment-option-id=\"${tokenId}\"]` +\n                        `[data-payment-option-type=\"token\"]`\n                    ).closest('div[name=\"o_payment_option_card\"]');\n                    $tokenCard.siblings(`#o_payment_token_inline_form_${tokenId}`).remove();\n                    $tokenCard.remove();\n                    this._disableButton(false);\n                }).guardedCatch(error => {\n                    error.event.preventDefault();\n                    this._displayError(\n                        _t(\"Server Error\"),\n                        _t(\"We are not able to delete your payment method.\"),\n                        error.message.data.message\n                    );\n                });\n            };\n\n            // Fetch documents linked to the token\n            this._rpc({\n                model: 'payment.token',\n                method: 'get_linked_records_info',\n                args: [tokenId],\n            }).then(result => {\n                const $dialogContentMessage = $(\n                    '<span>', {text: _t(\"Are you sure you want to delete this payment method?\")}\n                );\n                if (result.length > 0) { // There are documents linked to the token, list them\n                    $dialogContentMessage.append($('<br>'));\n                    $dialogContentMessage.append($(\n                        '<span>', {text: _t(\"It is currently linked to the following documents:\")}\n                    ));\n                    const $documentInfoList = $('<ul>');\n                    result.forEach(documentInfo => {\n                        $documentInfoList.append($('<li>').append($(\n                            '<a>', {\n                                href: documentInfo.url,\n                                target: '_blank',\n                                title: documentInfo.description,\n                                text: documentInfo.name\n                            }\n                        )));\n                    });\n                    $dialogContentMessage.append($documentInfoList);\n                }\n                new Dialog(this, {\n                    title: _t(\"Warning!\"),\n                    size: 'medium',\n                    $content: $('<div>').append($dialogContentMessage),\n                    buttons: [\n                        {\n                            text: _t(\"Confirm Deletion\"), classes: 'btn-primary', close: true,\n                            click: execute\n                        },\n                        {\n                            text: _t(\"Cancel\"), close: true\n                        },\n                    ],\n                }).open();\n            }).guardedCatch(error => {\n                this._displayError(\n                    _t(\"Server Error\"),\n                    _t(\"We are not able to delete your payment method.\"),\n                    error.message.data.message\n                );\n            });\n        },\n\n        //--------------------------------------------------------------------------\n        // Handlers\n        //--------------------------------------------------------------------------\n\n        /**\n         * Find the radio button linked to the click 'Delete' button and trigger the token deletion.\n         *\n         * Let `_onClickPaymentOption` select the radio button and display the inline form.\n         *\n         * Called when clicking on the 'Delete' button of a token.\n         *\n         * @private\n         * @param {Event} ev\n         * @return {undefined}\n         */\n        _onClickDeleteToken: function (ev) {\n            ev.preventDefault();\n\n            // Extract contextual values from the delete button\n            const linkedRadio = $(ev.currentTarget).siblings().find('input[name=\"o_payment_radio\"]')[0];\n            const tokenId = this._getPaymentOptionIdFromRadio(linkedRadio);\n\n            // Delete the token\n            this._deleteToken(tokenId);\n        },\n\n        /**\n         * Handle the creation of a new token or the assignation of a token to a record.\n         *\n         * Called when clicking on the 'Save Payment Method' button of when submitting the form.\n         *\n         * @private\n         * @param {Event} ev\n         * @return {undefined}\n         */\n        _onClickSaveToken: async function (ev) {\n            ev.stopPropagation();\n            ev.preventDefault();\n\n            // Check that the user has selected a payment option\n            const $checkedRadios = this.$('input[name=\"o_payment_radio\"]:checked');\n            if (!this._ensureRadioIsChecked($checkedRadios)) {\n                return;\n            }\n            const checkedRadio = $checkedRadios[0];\n\n            // Extract contextual values from the radio button\n            const provider = this._getProviderFromRadio(checkedRadio);\n            const paymentOptionId = this._getPaymentOptionIdFromRadio(checkedRadio);\n            const flow = this._getPaymentFlowFromRadio(checkedRadio);\n\n            // Save the payment method\n            this._hideError(); // Don't keep the error displayed if the user is going through 3DS2\n            this._disableButton(true); // Disable until it is needed again\n            $('body').block({\n                message: false,\n                overlayCSS: {backgroundColor: \"#000\", opacity: 0, zIndex: 1050},\n            });\n            if (flow !== 'token') { // Creation of a new token\n                this.txContext.tokenizationRequested = true;\n                this.txContext.isValidation = true;\n                this._processPayment(provider, paymentOptionId, flow);\n            } else if (this.txContext.allowTokenSelection) { // Assignation of a token to a record\n                this._assignToken(paymentOptionId);\n            }\n        },\n\n        /**\n         * Delegate the handling of the token to `_onClickSaveToken`.\n         *\n         * Called when submitting the form (e.g. through the Return key).\n         *\n         * @private\n         * @param {Event} ev\n         * @return {undefined}\n         */\n        _onSubmit: function (ev) {\n            ev.stopPropagation();\n            ev.preventDefault();\n\n            this._onClickSaveToken(ev);\n        },\n\n    });\n    return publicWidget.registry.PaymentManageForm;\n});\n", "odoo.define('payment.payment_form_mixin', require => {\n    'use strict';\n\n    const core = require('web.core');\n    const Dialog = require('web.Dialog');\n\n    const _t = core._t;\n\n    return {\n\n        /**\n         * @override\n         */\n        start: async function () {\n            this.txContext = {}; // Synchronously initialize txContext before any await.\n            Object.assign(this.txContext, this.$el.data());\n            await this._super(...arguments);\n            window.addEventListener('pageshow', function (event) {\n                if (event.persisted) {\n                    window.location.reload();\n                }\n            });\n            this.$('[data-toggle=\"tooltip\"]').tooltip();\n            const $checkedRadios = this.$('input[name=\"o_payment_radio\"]:checked');\n            if ($checkedRadios.length === 1) {\n                const checkedRadio = $checkedRadios[0];\n                this._displayInlineForm(checkedRadio);\n                this._enableButton();\n            } else {\n                this._setPaymentFlow(); // Initialize the payment flow to let acquirers overwrite it\n            }\n        },\n\n        //--------------------------------------------------------------------------\n        // Private\n        //--------------------------------------------------------------------------\n\n        /**\n         * Disable the submit button.\n         *\n         * The icons are updated to either show that an action is processing or that the button is\n         * not ready, depending on the value of `showLoadingAnimation`.\n         *\n         * @private\n         * @param {boolean} showLoadingAnimation - Whether a spinning loader should be shown\n         * @return {undefined}\n         */\n        _disableButton: (showLoadingAnimation = true) => {\n            const $submitButton = this.$('button[name=\"o_payment_submit_button\"]');\n            const iconClass = $submitButton.data('icon-class');\n            $submitButton.attr('disabled', true);\n            if (showLoadingAnimation) {\n                $submitButton.find('i').removeClass(iconClass);\n                $submitButton.prepend(\n                    '<span class=\"o_loader\"><i class=\"fa fa-refresh fa-spin\"></i>&nbsp;</span>'\n                );\n            }\n        },\n\n        /**\n         * Display an error in the payment form.\n         *\n         * If no payment option is selected, the error is displayed in a dialog. If exactly one\n         * payment option is selected, the error is displayed in the inline form of that payment\n         * option and the view is focused on the error.\n         *\n         * @private\n         * @param {string} title - The title of the error\n         * @param {string} description - The description of the error\n         * @param {string} error - The raw error message\n         * @return {(Dialog|undefined)} A dialog showing the error if no payment option is selected,\n         *                              undefined otherwise.\n         */\n        _displayError: function (title, description = '', error = '') {\n            const $checkedRadios = this.$('input[name=\"o_payment_radio\"]:checked');\n            if ($checkedRadios.length !== 1) { // Cannot find selected payment option, show dialog\n                return new Dialog(null, {\n                    title: _.str.sprintf(_t(\"Error: %s\"), title),\n                    size: 'medium',\n                    $content: `<p>${_.str.escapeHTML(description) || ''}</p>`,\n                    buttons: [{text: _t(\"Ok\"), close: true}]\n                }).open();\n            } else { // Show error in inline form\n                this._hideError(); // Remove any previous error\n\n                // Build the html for the error\n                let errorHtml = `<div class=\"alert alert-danger mb4\" name=\"o_payment_error\">\n                                 <b>${_.str.escapeHTML(title)}</b>`;\n                if (description !== '') {\n                    errorHtml += `</br>${_.str.escapeHTML(description)}`;\n                }\n                if (error !== '') {\n                    errorHtml += `</br>${_.str.escapeHTML(error)}`;\n                }\n                errorHtml += '</div>';\n\n                // Append error to inline form and center the page on the error\n                const checkedRadio = $checkedRadios[0];\n                const paymentOptionId = this._getPaymentOptionIdFromRadio(checkedRadio);\n                const formType = $(checkedRadio).data('payment-option-type');\n                const $inlineForm = this.$(`#o_payment_${formType}_inline_form_${paymentOptionId}`);\n                $inlineForm.removeClass('d-none'); // Show the inline form even if it was empty\n                $inlineForm.append(errorHtml).find('div[name=\"o_payment_error\"]')[0]\n                    .scrollIntoView({behavior: 'smooth', block: 'center'});\n            }\n            this._enableButton(); // Enable button back after it was disabled before processing\n            $('body').unblock(); // The page is blocked at this point, unblock it\n        },\n\n        /**\n         * Display the inline form of the selected payment option and hide others.\n         *\n         * @private\n         * @param {HTMLInputElement} radio - The radio button linked to the payment option\n         * @return {undefined}\n         */\n        _displayInlineForm: function (radio) {\n            this._hideInlineForms(); // Collapse previously opened inline forms\n            this._hideError(); // The error is only relevant until it is hidden with its inline form\n            this._setPaymentFlow(); // Reset the payment flow to let acquirers overwrite it\n\n            // Extract contextual values from the radio button\n            const provider = this._getProviderFromRadio(radio);\n            const paymentOptionId = this._getPaymentOptionIdFromRadio(radio);\n            const flow = this._getPaymentFlowFromRadio(radio);\n\n            // Prepare the inline form of the selected payment option and display it if not empty\n            this._prepareInlineForm(provider, paymentOptionId, flow);\n            const formType = $(radio).data('payment-option-type');\n            const $inlineForm = this.$(`#o_payment_${formType}_inline_form_${paymentOptionId}`);\n            if ($inlineForm.children().length > 0) {\n                $inlineForm.removeClass('d-none');\n            }\n        },\n\n        /**\n         * Check if the submit button can be enabled and do it if so.\n         *\n         * The icons are updated to show that the button is ready.\n         *\n         * @private\n         * @return {boolean} Whether the button was enabled.\n         */\n        _enableButton: function () {\n            if (this._isButtonReady()) {\n                const $submitButton = this.$('button[name=\"o_payment_submit_button\"]');\n                const iconClass = $submitButton.data('icon-class');\n                $submitButton.attr('disabled', false);\n                $submitButton.find('i').addClass(iconClass);\n                $submitButton.find('span.o_loader').remove();\n                return true;\n            }\n            return false;\n        },\n\n        /**\n         * Verify that exactly one radio button is checked and display an error otherwise.\n         *\n         * @private\n         * @param {jQuery} $checkedRadios - The currently check radio buttons\n         *\n         * @return {boolean} Whether exactly one radio button among the provided radios is checked\n         */\n        _ensureRadioIsChecked: function ($checkedRadios) {\n            if ($checkedRadios.length === 0) {\n                this._displayError(\n                    _t(\"No payment option selected\"),\n                    _t(\"Please select a payment option.\")\n                );\n                return false;\n            } else if ($checkedRadios.length > 1) {\n                this._displayError(\n                    _t(\"Multiple payment options selected\"),\n                    _t(\"Please select only one payment option.\")\n                );\n                return false;\n            }\n            return true;\n        },\n\n        /**\n         * Determine and return the online payment flow of the selected payment option.\n         *\n         * As some acquirers implement both the direct payment and the payment with redirection, the\n         * flow cannot be inferred from the radio button only. The radio button only indicates\n         * whether the payment option is a token. If not, the transaction context is looked up to\n         * determine whether the flow is 'direct' or 'redirect'.\n         *\n         * @private\n         * @param {HTMLInputElement} radio - The radio button linked to the payment option\n         * @return {string} The flow of the selected payment option. redirect, direct or token.\n         */\n        _getPaymentFlowFromRadio: function (radio) {\n            if (\n                $(radio).data('payment-option-type') === 'token'\n                || this.txContext.flow === 'token'\n            ) {\n                return 'token';\n            } else if (this.txContext.flow === 'redirect') {\n                return 'redirect';\n            } else {\n                return 'direct';\n            }\n        },\n\n        /**\n         * Determine and return the id of the selected payment option.\n         *\n         * @private\n         * @param {HTMLInputElement} radio - The radio button linked to the payment option\n         * @return {number} The acquirer id or the token id or of the payment option linked to the\n         *                  radio button.\n         */\n        _getPaymentOptionIdFromRadio: radio => $(radio).data('payment-option-id'),\n\n        /**\n         * Determine and return the provider of the selected payment option.\n         *\n         * @private\n         * @param {HTMLInputElement} radio - The radio button linked to the payment option\n         * @return {number} The provider of the payment option linked to the radio button.\n         */\n        _getProviderFromRadio: radio => $(radio).data('provider'),\n\n        /**\n         * Remove the error in the acquirer form.\n         *\n         * @private\n         * @return {jQuery} The removed error\n         */\n        _hideError: () => this.$('div[name=\"o_payment_error\"]').remove(),\n\n        /**\n         * Collapse all inline forms.\n         *\n         * @private\n         * @return {undefined}.\n         */\n        _hideInlineForms: () => this.$('[name=\"o_payment_inline_form\"]').addClass('d-none'),\n\n        /**\n         * Hide the \"Save my payment details\" label and checkbox, and the submit button.\n         *\n         * The inputs should typically be hidden when the customer has to perform additional actions\n         * in the inline form. All inputs are automatically shown again when the customer clicks on\n         * another inline form.\n         *\n         * @private\n         * @return {undefined}\n         */\n        _hideInputs: function () {\n            const $submitButton = this.$('button[name=\"o_payment_submit_button\"]');\n            const $tokenizeCheckboxes = this.$('input[name=\"o_payment_save_as_token\"]');\n            $submitButton.addClass('d-none');\n            $tokenizeCheckboxes.closest('label').addClass('d-none');\n        },\n\n        /**\n         * Verify that the submit button is ready to be enabled.\n         *\n         * For a module to support a custom behavior for the submit button, it must override this\n         * method and only return true if the result of this method is true and if nothing prevents\n         * enabling the submit button for that custom behavior.\n         *\n         * @private\n         *\n         * @return {boolean} Whether the submit button can be enabled\n         */\n        _isButtonReady: function () {\n            const $checkedRadios = this.$('input[name=\"o_payment_radio\"]:checked');\n            if ($checkedRadios.length === 1) {\n                const checkedRadio = $checkedRadios[0];\n                const flow = this._getPaymentFlowFromRadio(checkedRadio);\n                return flow !== 'token' || this.txContext.allowTokenSelection;\n            } else {\n                return false;\n            }\n        },\n\n        /**\n         * Prepare the params to send to the transaction route.\n         *\n         * For an acquirer to overwrite generic params or to add acquirer-specific ones, it must\n         * override this method and return the extended transaction route params.\n         *\n         * @private\n         * @param {string} provider - The provider of the selected payment option's acquirer\n         * @param {number} paymentOptionId - The id of the selected payment option\n         * @param {string} flow - The online payment flow of the selected payment option\n         * @return {object} The transaction route params\n         */\n        _prepareTransactionRouteParams: function (provider, paymentOptionId, flow) {\n            return {\n                'payment_option_id': paymentOptionId,\n                'reference_prefix': this.txContext.referencePrefix !== undefined\n                    ? this.txContext.referencePrefix.toString() : null,\n                'amount': this.txContext.amount !== undefined\n                    ? parseFloat(this.txContext.amount) : null,\n                'currency_id': this.txContext.currencyId\n                    ? parseInt(this.txContext.currencyId) : null,\n                'partner_id': parseInt(this.txContext.partnerId),\n                'invoice_id': this.txContext.invoiceId\n                    ? parseInt(this.txContext.invoiceId) : null,\n                'flow': flow,\n                'tokenization_requested': this.txContext.tokenizationRequested,\n                'landing_route': this.txContext.landingRoute,\n                'is_validation': this.txContext.isValidation,\n                'access_token': this.txContext.accessToken\n                    ? this.txContext.accessToken : undefined,\n                'csrf_token': core.csrf_token,\n            };\n        },\n\n        /**\n         * Prepare the acquirer-specific inline form of the selected payment option.\n         *\n         * For an acquirer to manage an inline form, it must override this method. When the override\n         * is called, it must lookup the parameters to decide whether it is necessary to prepare its\n         * inline form. Otherwise, the call must be sent back to the parent method.\n         *\n         * @private\n         * @param {string} provider - The provider of the selected payment option's acquirer\n         * @param {number} paymentOptionId - The id of the selected payment option\n         * @param {string} flow - The online payment flow of the selected payment option\n         * @return {Promise}\n         */\n        _prepareInlineForm: (provider, paymentOptionId, flow) => Promise.resolve(),\n\n        /**\n         * Process the payment.\n         *\n         * For an acquirer to do pre-processing work on the transaction processing flow, or to\n         * define its entire own flow that requires re-scheduling the RPC to the transaction route,\n         * it must override this method.\n         * If only post-processing work is needed, an override of `_processRedirectPayment`,\n         * `_processDirectPayment` or `_processTokenPayment` might be more appropriate.\n         *\n         * @private\n         * @param {string} provider - The provider of the payment option's acquirer\n         * @param {number} paymentOptionId - The id of the payment option handling the transaction\n         * @param {string} flow - The online payment flow of the transaction\n         * @return {Promise}\n         */\n        _processPayment: function (provider, paymentOptionId, flow) {\n            // Call the transaction route to create a tx and retrieve the processing values\n            return this._rpc({\n                route: this.txContext.transactionRoute,\n                params: this._prepareTransactionRouteParams(provider, paymentOptionId, flow),\n            }).then(processingValues => {\n                if (flow === 'redirect') {\n                    return this._processRedirectPayment(\n                        provider, paymentOptionId, processingValues\n                    );\n                } else if (flow === 'direct') {\n                    return this._processDirectPayment(provider, paymentOptionId, processingValues);\n                } else if (flow === 'token') {\n                    return this._processTokenPayment(provider, paymentOptionId, processingValues);\n                }\n            }).guardedCatch(error => {\n                error.event.preventDefault();\n                this._displayError(\n                    _t(\"Server Error\"),\n                    _t(\"We are not able to process your payment.\"),\n                    error.message.data.message\n                );\n            });\n        },\n\n        /**\n         * Execute the acquirer-specific implementation of the direct payment flow.\n         *\n         * For an acquirer to redefine the processing of the direct payment flow, it must override\n         * this method.\n         *\n         * @private\n         * @param {string} provider - The provider of the acquirer\n         * @param {number} acquirerId - The id of the acquirer handling the transaction\n         * @param {object} processingValues - The processing values of the transaction\n         * @return {Promise}\n         */\n        _processDirectPayment: (provider, acquirerId, processingValues) => Promise.resolve(),\n\n        /**\n         * Redirect the customer by submitting the redirect form included in the processing values.\n         *\n         * For an acquirer to redefine the processing of the payment with redirection flow, it must\n         * override this method.\n         *\n         * @private\n         * @param {string} provider - The provider of the acquirer\n         * @param {number} acquirerId - The id of the acquirer handling the transaction\n         * @param {object} processingValues - The processing values of the transaction\n         * @return {undefined}\n         */\n        _processRedirectPayment: (provider, acquirerId, processingValues) => {\n            // Append the redirect form to the body\n            const $redirectForm = $(processingValues.redirect_form_html).attr(\n                'id', 'o_payment_redirect_form'\n            );\n            $(document.getElementsByTagName('body')[0]).append($redirectForm);\n\n            // Submit the form\n            $redirectForm.submit();\n        },\n\n        /**\n         * Redirect the customer to the status route.\n         *\n         * For an acquirer to redefine the processing of the payment by token flow, it must override\n         * this method.\n         *\n         * @private\n         * @param {string} provider - The provider of the token's acquirer\n         * @param {number} tokenId - The id of the token handling the transaction\n         * @param {object} processingValues - The processing values of the transaction\n         * @return {undefined}\n         */\n        _processTokenPayment: (provider, tokenId, processingValues) => {\n            // The flow is already completed as payments by tokens are immediately processed\n            window.location = '/payment/status';\n        },\n\n        /**\n         * Set the online payment flow for the selected payment option.\n         *\n         * For an acquirer to manage direct payments, it must call this method from within its\n         * override of `_prepareInlineForm` to declare its payment flow for the selected payment\n         * option.\n         *\n         * @private\n         * @param {string} flow - The flow for the selected payment option. Either 'redirect',\n         *                        'direct' or 'token'\n         * @return {undefined}\n         */\n        _setPaymentFlow: function (flow = 'redirect') {\n            if (flow !== 'redirect' && flow !== 'direct' && flow !== 'token') {\n                console.warn(\n                    `payment_form_mixin: method '_setPaymentFlow' was called with invalid flow: \n                    ${flow}. Falling back to 'redirect'.`\n                );\n                this.txContext.flow = 'redirect';\n            } else {\n                this.txContext.flow = flow;\n            }\n        },\n\n        /**\n         * Show the \"Save my payment details\" label and checkbox, and the submit button.\n         *\n         * @private\n         * @return {undefined}.\n         */\n        _showInputs: function () {\n            const $submitButton = this.$('button[name=\"o_payment_submit_button\"]');\n            const $tokenizeCheckboxes = this.$('input[name=\"o_payment_save_as_token\"]');\n            $submitButton.removeClass('d-none');\n            $tokenizeCheckboxes.closest('label').removeClass('d-none');\n        },\n\n        //--------------------------------------------------------------------------\n        // Handlers\n        //--------------------------------------------------------------------------\n\n        /**\n         * Hide all extra payment icons of the acquirer linked to the clicked button.\n         *\n         * Called when clicking on the \"show less\" button.\n         *\n         * @private\n         * @param {Event} ev\n         * @return {undefined}\n         */\n        _onClickLessPaymentIcons: ev => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            // Hide the extra payment icons, and the \"show less\" button\n            const $itemList = $(ev.currentTarget).parents('ul');\n            const maxIconNumber = $itemList.data('max-icons');\n            $itemList.children('li').slice(maxIconNumber).addClass('d-none');\n            // Show the \"show more\" button\n            $itemList.find('a[name=\"o_payment_icon_more\"]').parents('li').removeClass('d-none');\n        },\n\n        /**\n         * Display all the payment icons of the acquirer linked to the clicked button.\n         *\n         * Called when clicking on the \"show more\" button.\n         *\n         * @private\n         * @param {Event} ev\n         * @return {undefined}\n         */\n        _onClickMorePaymentIcons: ev => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            // Display all the payment icons, and the \"show less\" button\n            $(ev.currentTarget).parents('ul').children('li').removeClass('d-none');\n            // Hide the \"show more\" button\n            $(ev.currentTarget).parents('li').addClass('d-none');\n        },\n\n        /**\n         * Mark the clicked card radio button as checked and open the inline form, if any.\n         *\n         * Called when clicking on the card of a payment option.\n         *\n         * @private\n         * @param {Event} ev\n         * @return {undefined}\n         */\n        _onClickPaymentOption: function (ev) {\n            // Uncheck all radio buttons\n            this.$('input[name=\"o_payment_radio\"]').prop('checked', false);\n            // Check radio button linked to selected payment option\n            const checkedRadio = $(ev.currentTarget).find('input[name=\"o_payment_radio\"]')[0];\n            $(checkedRadio).prop('checked', true);\n\n            // Show the inputs in case they had been hidden\n            this._showInputs();\n\n            // Disable the submit button while building the content\n            this._disableButton(false);\n\n            // Unfold and prepare the inline form of selected payment option\n            this._displayInlineForm(checkedRadio);\n\n            // Re-enable the submit button\n            this._enableButton();\n        },\n\n    };\n\n});\n", "odoo.define('payment.post_processing', function (require) {\n    'use strict';\n\n    var publicWidget = require('web.public.widget');\n    var core = require('web.core');\n    const {Markup} = require('web.utils');\n\n    var _t = core._t;\n\n    $.blockUI.defaults.css.border = '0';\n    $.blockUI.defaults.css[\"background-color\"] = '';\n    $.blockUI.defaults.overlayCSS[\"opacity\"] = '0.9';\n\n    publicWidget.registry.PaymentPostProcessing = publicWidget.Widget.extend({\n        selector: 'div[name=\"o_payment_status\"]',\n        xmlDependencies: ['/payment/static/src/xml/payment_post_processing.xml'],\n\n        _pollCount: 0,\n\n        start: function() {\n            this.displayLoading();\n            this.poll();\n            return this._super.apply(this, arguments);\n        },\n        /* Methods */\n        startPolling: function () {\n            var timeout = 3000;\n            //\n            if(this._pollCount >= 10 && this._pollCount < 20) {\n                timeout = 10000;\n            }\n            else if(this._pollCount >= 20) {\n                timeout = 30000;\n            }\n            //\n            setTimeout(this.poll.bind(this), timeout);\n            this._pollCount ++;\n        },\n        poll: function () {\n            var self = this;\n            this._rpc({\n                route: '/payment/status/poll',\n                params: {\n                    'csrf_token': core.csrf_token,\n                }\n            }).then(function(data) {\n                if(data.success === true) {\n                    self.processPolledData(data.display_values_list);\n                }\n                else {\n                    switch(data.error) {\n                    case \"tx_process_retry\":\n                        break;\n                    case \"no_tx_found\":\n                        self.displayContent(\"payment.no_tx_found\", {});\n                        break;\n                    default: // if an exception is raised\n                        self.displayContent(\"payment.exception\", {exception_msg: data.error});\n                        break;\n                    }\n                }\n                self.startPolling();\n\n            }).guardedCatch(function() {\n                self.displayContent(\"payment.rpc_error\", {});\n                self.startPolling();\n            });\n        },\n        processPolledData: function (display_values_list) {\n            var render_values = {\n                'tx_draft': [],\n                'tx_pending': [],\n                'tx_authorized': [],\n                'tx_done': [],\n                'tx_cancel': [],\n                'tx_error': [],\n            };\n\n            if (display_values_list.length > 0) {\n                // In almost every cases there will be a single transaction to display. If there are\n                // more than one transaction, the last one will most likely be the one that was\n                // confirmed. We use this one to redirect the user to the final page.\n                window.location = display_values_list[0].landing_route;\n                return;\n            }\n\n            // group the transaction according to their state\n            display_values_list.forEach(function (display_values) {\n                var key = 'tx_' + display_values.state;\n                if(key in render_values) {\n                    if (display_values[\"display_message\"]) {\n                        display_values.display_message = Markup(display_values.display_message)\n                    }\n                    render_values[key].push(display_values);\n                }\n            });\n\n            function countTxInState(states) {\n                var nbTx = 0;\n                for (var prop in render_values) {\n                    if (states.indexOf(prop) > -1 && render_values.hasOwnProperty(prop)) {\n                        nbTx += render_values[prop].length;\n                    }\n                }\n                return nbTx;\n            }\n                       \n            /*\n            * When the server sends the list of monitored transactions, it tries to post-process \n            * all the successful ones. If it succeeds or if the post-process has already been made, \n            * the transaction is removed from the list of monitored transactions and won't be \n            * included in the next response. We assume that successful and post-process \n            * transactions should always prevail on others, regardless of their number or state.\n            */\n            if (render_values['tx_done'].length === 1 &&\n                render_values['tx_done'][0].is_post_processed) {\n                    window.location = render_values['tx_done'][0].landing_route;\n                    return;\n            }\n            // If there are multiple transactions monitored, display them all to the customer. If\n            // there is only one transaction monitored, redirect directly the customer to the\n            // landing route.\n            if(countTxInState(['tx_done', 'tx_error', 'tx_pending', 'tx_authorized']) === 1) {\n                // We don't want to redirect customers to the landing page when they have a pending\n                // transaction. The successful transactions are dealt with before.\n                var tx = render_values['tx_authorized'][0] || render_values['tx_error'][0];\n                if (tx) {\n                    window.location = tx.landing_route;\n                    return;\n                }\n            }\n\n            this.displayContent(\"payment.display_tx_list\", render_values);\n        },\n        displayContent: function (xmlid, render_values) {\n            var html = core.qweb.render(xmlid, render_values);\n            $.unblockUI();\n            this.$el.find('div[name=\"o_payment_status_content\"]').html(html);\n        },\n        displayLoading: function () {\n            var msg = _t(\"We are processing your payment, please wait ...\");\n            $.blockUI({\n                'message': '<h2 class=\"text-white\"><img src=\"/web/static/img/spin.png\" class=\"fa-pulse\"/>' +\n                    '    <br />' + msg +\n                    '</h2>'\n            });\n        },\n    });\n});\n", "odoo.define('sale.SalePortalSidebar', function (require) {\n'use strict';\n\nvar publicWidget = require('web.public.widget');\nvar PortalSidebar = require('portal.PortalSidebar');\n\npublicWidget.registry.SalePortalSidebar = PortalSidebar.extend({\n    selector: '.o_portal_sale_sidebar',\n\n    /**\n     * @constructor\n     */\n    init: function (parent, options) {\n        this._super.apply(this, arguments);\n        this.authorizedTextTag = ['em', 'b', 'i', 'u'];\n        this.spyWatched = $('body[data-target=\".navspy\"]');\n    },\n    /**\n     * @override\n     */\n    start: function () {\n        var def = this._super.apply(this, arguments);\n        var $spyWatcheElement = this.$el.find('[data-id=\"portal_sidebar\"]');\n        this._setElementId($spyWatcheElement);\n        // Nav Menu ScrollSpy\n        this._generateMenu();\n        // After singature, automatically open the popup for payment\n        if ($.bbq.getState('allow_payment') === 'yes' && this.$('#o_sale_portal_paynow').length) {\n            this.$('#o_sale_portal_paynow').trigger('click');\n            $.bbq.removeState('allow_payment');\n        }\n        return def;\n    },\n\n    //--------------------------------------------------------------------------\n    // Private\n    //---------------------------------------------------------------------------\n\n    /**\n     * create an unique id and added as a attribute of spyWatched element\n     *\n     * @private\n     * @param {string} prefix\n     * @param {Object} $el\n     *\n     */\n    _setElementId: function (prefix, $el) {\n        var id = _.uniqueId(prefix);\n        this.spyWatched.find($el).attr('id', id);\n        return id;\n    },\n    /**\n     * generate the new spy menu\n     *\n     * @private\n     *\n     */\n    _generateMenu: function () {\n        var self = this,\n            lastLI = false,\n            lastUL = null,\n            $bsSidenav = this.$el.find('.bs-sidenav');\n\n        $(\"#quote_content [id^=quote_header_], #quote_content [id^=quote_]\", this.spyWatched).attr(\"id\", \"\");\n        _.each(this.spyWatched.find(\"#quote_content h2, #quote_content h3\"), function (el) {\n            var id, text;\n            switch (el.tagName.toLowerCase()) {\n                case \"h2\":\n                    id = self._setElementId('quote_header_', el);\n                    text = self._extractText($(el));\n                    if (!text) {\n                        break;\n                    }\n                    lastLI = $(\"<li class='nav-item'>\").append($('<a class=\"nav-link\" style=\"max-width: 200px;\" href=\"#' + id + '\"/>').text(text)).appendTo($bsSidenav);\n                    lastUL = false;\n                    break;\n                case \"h3\":\n                    id = self._setElementId('quote_', el);\n                    text = self._extractText($(el));\n                    if (!text) {\n                        break;\n                    }\n                    if (lastLI) {\n                        if (!lastUL) {\n                            lastUL = $(\"<ul class='nav flex-column'>\").appendTo(lastLI);\n                        }\n                        $(\"<li class='nav-item'>\").append($('<a class=\"nav-link\" style=\"max-width: 200px;\" href=\"#' + id + '\"/>').text(text)).appendTo(lastUL);\n                    }\n                    break;\n            }\n            el.setAttribute('data-anchor', true);\n        });\n        this.trigger_up('widgets_start_request', {$target: $bsSidenav});\n    },\n    /**\n     * extract text of menu title for sidebar\n     *\n     * @private\n     * @param {Object} $node\n     *\n     */\n    _extractText: function ($node) {\n        var self = this;\n        var rawText = [];\n        _.each($node.contents(), function (el) {\n            var current = $(el);\n            if ($.trim(current.text())) {\n                var tagName = current.prop(\"tagName\");\n                if (_.isUndefined(tagName) || (!_.isUndefined(tagName) && _.contains(self.authorizedTextTag, tagName.toLowerCase()))) {\n                    rawText.push($.trim(current.text()));\n                }\n            }\n        });\n        return rawText.join(' ');\n    },\n});\n});\n", "odoo.define('sale.payment_form', require => {\n    'use strict';\n\n    const checkoutForm = require('payment.checkout_form');\n    const manageForm = require('payment.manage_form');\n\n    const salePaymentMixin = {\n\n        //--------------------------------------------------------------------------\n        // Private\n        //--------------------------------------------------------------------------\n\n        /**\n         * Add `sale_order_id` to the transaction route params if it is provided.\n         *\n         * @override method from payment.payment_form_mixin\n         * @private\n         * @param {string} provider - The provider of the selected payment option's acquirer\n         * @param {number} paymentOptionId - The id of the selected payment option\n         * @param {string} flow - The online payment flow of the selected payment option\n         * @return {object} The extended transaction route params\n         */\n        _prepareTransactionRouteParams: function (provider, paymentOptionId, flow) {\n            const transactionRouteParams = this._super(...arguments);\n            return {\n                ...transactionRouteParams,\n                'sale_order_id': this.txContext.saleOrderId\n                    ? parseInt(this.txContext.saleOrderId) : undefined,\n            };\n        },\n\n    };\n\n    checkoutForm.include(salePaymentMixin);\n    manageForm.include(salePaymentMixin);\n\n});\n", "odoo.define('sale_management.sale_management', function (require) {\n'use strict';\n\nvar publicWidget = require('web.public.widget');\n\npublicWidget.registry.SaleUpdateLineButton = publicWidget.Widget.extend({\n    selector: '.o_portal_sale_sidebar',\n    events: {\n        'click a.js_update_line_json': '_onClick',\n        'click a.js_add_optional_products': '_onClickOptionalProduct',\n        'change .js_quantity': '_onChangeQuantity'\n    },\n    /**\n     * @override\n     */\n    async start() {\n        await this._super(...arguments);\n        this.orderDetail = this.$el.find('table#sales_order_table').data();\n    },\n    /**\n     * Process the change in line quantity\n     *\n     * @private\n     * @param {Event} ev\n     */\n    _onChangeQuantity(ev) {\n        ev.preventDefault();\n        let self = this,\n            $target = $(ev.currentTarget),\n            quantity = parseInt($target.val());\n\n        this._callUpdateLineRoute(self.orderDetail.orderId, {\n            'line_id': $target.data('lineId'),\n            'input_quantity': quantity >= 0 ? quantity : false,\n            'access_token': self.orderDetail.token\n        }).then((data) => {\n            window.location.reload();\n        });\n    },\n    /**\n     * Reacts to the click on the -/+ buttons\n     *\n     * @param {Event} ev\n     */\n    _onClick(ev) {\n        ev.preventDefault();\n        let self = this,\n            $target = $(ev.currentTarget);\n        this._callUpdateLineRoute(self.orderDetail.orderId, {\n            'line_id': $target.data('lineId'),\n            'remove': $target.data('remove'),\n            'unlink': $target.data('unlink'),\n            'access_token': self.orderDetail.token\n        }).then((data) => {\n            window.location.reload();\n        });\n    },\n    /**\n     * trigger when optional product added to order from portal.\n     *\n     * @private\n     * @param {Event} ev\n     */\n    _onClickOptionalProduct(ev) {\n        ev.preventDefault();\n        let self = this,\n            $target = $(ev.currentTarget);\n        // to avoid double click on link with href.\n        $target.css('pointer-events', 'none');\n\n        this._rpc({\n            route: \"/my/orders/\" + self.orderDetail.orderId + \"/add_option/\" + $target.data('optionId'),\n            params: {access_token: self.orderDetail.token}\n        }).then((data) => {\n            window.location.reload();\n        });\n    },\n    /**\n     * Calls the route to get updated values of the line and order\n     * when the quantity of a product has changed\n     *\n     * @private\n     * @param {integer} order_id\n     * @param {Object} params\n     * @return {Deferred}\n     */\n    _callUpdateLineRoute(order_id, params) {\n        return this._rpc({\n            route: \"/my/orders/\" + order_id + \"/update_line_dict\",\n            params: params,\n        });\n    },\n});\n});\n", "$(function () {\n    $('input.o-purchase-datetimepicker').datetimepicker();\n    $('input.o-purchase-datetimepicker').on(\"hide.datetimepicker\", function () {\n        $(this).parents('form').submit();\n    });\n})\n", "odoo.define('purchase.PurchasePortalSidebar', function (require) {\n'use strict';\n\nvar publicWidget = require('web.public.widget');\nvar PortalSidebar = require('portal.PortalSidebar');\n\npublicWidget.registry.PurchasePortalSidebar = PortalSidebar.extend({\n    selector: '.o_portal_purchase_sidebar',\n\n    /**\n     * @constructor\n     */\n    init: function (parent, options) {\n        this._super.apply(this, arguments);\n        this.authorizedTextTag = ['em', 'b', 'i', 'u'];\n        this.spyWatched = $('body[data-target=\".navspy\"]');\n    },\n    /**\n     * @override\n     */\n    start: function () {\n        var def = this._super.apply(this, arguments);\n        var $spyWatcheElement = this.$el.find('[data-id=\"portal_sidebar\"]');\n        this._setElementId($spyWatcheElement);\n        // Nav Menu ScrollSpy\n        this._generateMenu();\n        return def;\n    },\n\n    //--------------------------------------------------------------------------\n    // Private\n    //---------------------------------------------------------------------------\n\n    /**\n     * create an unique id and added as a attribute of spyWatched element\n     *\n     * @private\n     * @param {string} prefix\n     * @param {Object} $el\n     *\n     */\n    _setElementId: function (prefix, $el) {\n        var id = _.uniqueId(prefix);\n        this.spyWatched.find($el).attr('id', id);\n        return id;\n    },\n    /**\n     * generate the new spy menu\n     *\n     * @private\n     *\n     */\n    _generateMenu: function () {\n        var self = this,\n            lastLI = false,\n            lastUL = null,\n            $bsSidenav = this.$el.find('.bs-sidenav');\n\n        $(\"#quote_content [id^=quote_header_], #quote_content [id^=quote_]\", this.spyWatched).attr(\"id\", \"\");\n        _.each(this.spyWatched.find(\"#quote_content h2, #quote_content h3\"), function (el) {\n            var id, text;\n            switch (el.tagName.toLowerCase()) {\n                case \"h2\":\n                    id = self._setElementId('quote_header_', el);\n                    text = self._extractText($(el));\n                    if (!text) {\n                        break;\n                    }\n                    lastLI = $(\"<li class='nav-item'>\").append($('<a class=\"nav-link\" style=\"max-width: 200px;\" href=\"#' + id + '\"/>').text(text)).appendTo($bsSidenav);\n                    lastUL = false;\n                    break;\n                case \"h3\":\n                    id = self._setElementId('quote_', el);\n                    text = self._extractText($(el));\n                    if (!text) {\n                        break;\n                    }\n                    if (lastLI) {\n                        if (!lastUL) {\n                            lastUL = $(\"<ul class='nav flex-column'>\").appendTo(lastLI);\n                        }\n                        $(\"<li class='nav-item'>\").append($('<a class=\"nav-link\" style=\"max-width: 200px;\" href=\"#' + id + '\"/>').text(text)).appendTo(lastUL);\n                    }\n                    break;\n            }\n            el.setAttribute('data-anchor', true);\n        });\n        this.trigger_up('widgets_start_request', {$target: $bsSidenav});\n    },\n    /**\n     * extract text of menu title for sidebar\n     *\n     * @private\n     * @param {Object} $node\n     *\n     */\n    _extractText: function ($node) {\n        var self = this;\n        var rawText = [];\n        _.each($node.contents(), function (el) {\n            var current = $(el);\n            if ($.trim(current.text())) {\n                var tagName = current.prop(\"tagName\");\n                if (_.isUndefined(tagName) || (!_.isUndefined(tagName) && _.contains(self.authorizedTextTag, tagName.toLowerCase()))) {\n                    rawText.push($.trim(current.text()));\n                }\n            }\n        });\n        return rawText.join(' ');\n    },\n});\n});\n", "/** @odoo-module **/\n\nimport time from 'web.time';\nimport publicWidget from 'web.public.widget';\n\npublicWidget.registry.ProjectRatingImage = publicWidget.Widget.extend({\n    selector: '.o_portal_project_rating .o_rating_image',\n\n    /**\n     * @override\n     */\n    start: function () {\n        this.$el.popover({\n            placement: 'bottom',\n            trigger: 'hover',\n            html: true,\n            content: function () {\n                var $elem = $(this);\n                var id = $elem.data('id');\n                var ratingDate = $elem.data('rating-date');\n                var baseDate = time.auto_str_to_date(ratingDate);\n                var duration = moment(baseDate).fromNow();\n                var $rating = $('#rating_' + id);\n                $rating.find('.rating_timeduration').text(duration);\n                return $rating.html();\n            },\n        });\n        return this._super.apply(this, arguments);\n    },\n});\n", "odoo.define('auth_totp_portal.button', function (require) {\n'use strict';\n\nconst {_t} = require('web.core');\nconst publicWidget = require('web.public.widget');\nconst Dialog = require('web.Dialog');\nconst {handleCheckIdentity} = require('portal.portal');\n\n/**\n * Replaces specific <field> elements by normal HTML, strip out the rest entirely\n */\nfunction fromField(f, record) {\n    switch (f.getAttribute('name')) {\n    case 'qrcode':\n        const qrcode = document.createElement('img');\n        qrcode.setAttribute('class', 'img img-fluid');\n        qrcode.setAttribute('src', 'data:image/png;base64,' + record['qrcode']);\n        return qrcode;\n    case 'url':\n        const url = document.createElement('a');\n        url.setAttribute('href', record['url']);\n        url.textContent = f.getAttribute('text') || record['url'];\n        return url;\n    case 'code':\n        const code = document.createElement('input');\n        code.setAttribute('name', 'code');\n        code.setAttribute('class', 'form-control col-10 col-md-6');\n        code.setAttribute('placeholder', '6-digit code');\n        code.required = true;\n        code.maxLength = 6;\n        code.minLength = 6;\n        return code;\n    case 'secret':\n        // As CopyClipboard wizard is backend only, mimic his behaviour to use it in frontend.\n        // Field\n        const secretSpan = document.createElement('span');\n        secretSpan.setAttribute('name', 'secret');\n        secretSpan.setAttribute('class', 'o_field_copy_url');\n        secretSpan.textContent = record['secret'];\n\n        // Copy Button\n        const copySpanIcon = document.createElement('span');\n        copySpanIcon.setAttribute('class', 'fa fa-clipboard');\n        const copySpanText = document.createElement('span');\n        copySpanText.textContent = _t(' Copy');\n\n        const copyButton = document.createElement('button');\n        copyButton.setAttribute('class', 'btn btn-sm btn-primary o_clipboard_button o_btn_char_copy py-0 px-2');\n        copyButton.onclick = function(event) {\n            event.preventDefault();\n            $(copyButton).tooltip({title: _t(\"Copied !\"), trigger: \"manual\", placement: \"bottom\"});\n            var clipboard = new ClipboardJS('.o_clipboard_button', {\n                target: function () {\n                    return $(secretSpan)[0];\n                },\n                container: this.el\n            });\n            clipboard.on('success', function () {\n                clipboard.destroy();\n                $(copyButton).tooltip('show');\n                _.delay(function () {\n                    $(copyButton).tooltip(\"hide\");\n                }, 800);\n            });\n            clipboard.on('error', function (e) {\n                clipboard.destroy();\n            });\n        };\n\n        copyButton.appendChild(copySpanIcon);\n        copyButton.appendChild(copySpanText);\n\n        // CopyClipboard Div\n        const secretDiv = document.createElement('div');\n        secretDiv.setAttribute('class', 'o_field_copy d-flex justify-content-center align-items-center');\n        secretDiv.appendChild(secretSpan);\n        secretDiv.appendChild(copyButton);\n\n        return secretDiv;\n    default: // just display the field's data\n        return document.createTextNode(record[f.getAttribute('name')] || '');\n    }\n}\n\n/**\n * Apparently chrome literally absolutely can't handle parsing XML and using\n * those nodes in an HTML document (even when parsing as application/xhtml+xml),\n * this results in broken rendering and a number of things not working (e.g.\n * classes) without any specific warning in the console or anything, things are\n * just broken with no indication of why.\n *\n * So... rebuild the entire f'ing body using document.createElement to ensure\n * we have HTML elements.\n *\n * This is a recursive implementation so it's not super efficient but the views\n * to fixup *should* be relatively simple.\n */\nfunction fixupViewBody(oldNode, record) {\n    let qrcode = null, code = null, node = null;\n\n    switch (oldNode.nodeType) {\n        case 1: // element\n            if (oldNode.tagName === 'field') {\n                node = fromField(oldNode, record);\n                switch (oldNode.getAttribute('name')) {\n                case 'qrcode':\n                    qrcode = node;\n                    break;\n                case 'code':\n                    code = node;\n                    break\n                }\n                break; // no need to recurse here\n            }\n            node = document.createElement(oldNode.tagName);\n            for(let i=0; i<oldNode.attributes.length; ++i) {\n                const attr = oldNode.attributes[i];\n                node.setAttribute(attr.name, attr.value);\n            }\n            for(let j=0; j<oldNode.childNodes.length; ++j) {\n                const [ch, qr, co] = fixupViewBody(oldNode.childNodes[j], record);\n                if (ch) { node.appendChild(ch); }\n                if (qr) { qrcode = qr; }\n                if (co) { code = co; }\n            }\n            break;\n        case 3: case 4: // text, cdata\n            node = document.createTextNode(oldNode.data);\n            break;\n        default:\n            // don't care about PI & al\n    }\n\n    return [node, qrcode, code]\n}\n\n/**\n * Converts a backend <button> element and a bunch of metadata into a structure\n * which can kinda be of use to Dialog.\n */\nclass Button {\n    constructor(parent, model, record_id, input_node, button_node) {\n        this._parent = parent;\n        this.model = model;\n        this.record_id = record_id;\n        this.input = input_node;\n        this.text = button_node.getAttribute('string');\n        this.classes = button_node.getAttribute('class') || null;\n        this.action = button_node.getAttribute('name');\n        if (button_node.getAttribute('special') === 'cancel') {\n            this.close = true;\n            this.click = null;\n        } else {\n            this.close = false;\n            // because Dialog doesnt' call() click on the descriptor object\n            this.click = this._click.bind(this);\n        }\n    }\n    async _click() {\n        if (!this.input.reportValidity()) {\n            this.input.classList.add('is-invalid');\n            return;\n        }\n\n        try {\n            await this.callAction(this.record_id, {code: this.input.value});\n        } catch (e) {\n            this.input.classList.add('is-invalid');\n            // show custom validity error message\n            this.input.setCustomValidity(e.message);\n            this.input.reportValidity();\n            return;\n        }\n        this.input.classList.remove('is-invalid');\n        // reloads page, avoid window.location.reload() because it re-posts forms\n        window.location = window.location;\n    }\n    async callAction(id, update) {\n        try {\n            await this._parent._rpc({model: this.model, method: 'write', args: [id, update]});\n            await handleCheckIdentity(\n                this._parent.proxy('_rpc'),\n                this._parent._rpc({model: this.model, method: this.action, args: [id]})\n            );\n        } catch(e) {\n            // avoid error toast (crashmanager)\n            e.event.preventDefault();\n            // try to unwrap mess of an error object to a usable error message\n            throw new Error(\n                !e.message ? e.toString()\n              : !e.message.data ? e.message.message\n              : e.message.data.message || _t(\"Operation failed for unknown reason.\")\n            );\n        }\n    }\n}\n\npublicWidget.registry.TOTPButton = publicWidget.Widget.extend({\n    selector: '#auth_totp_portal_enable',\n    events: {\n        click: '_onClick',\n    },\n\n    async _onClick(e) {\n        e.preventDefault();\n\n        const w = await handleCheckIdentity(this.proxy('_rpc'), this._rpc({\n            model: 'res.users',\n            method: 'action_totp_enable_wizard',\n            args: [this.getSession().user_id]\n        }));\n\n        if (!w) {\n            // TOTP probably already enabled, just reload page\n            window.location = window.location;\n            return;\n        }\n\n        const {res_model: model, res_id: wizard_id} = w;\n\n        const record = await this._rpc({\n            model, method: 'read', args: [wizard_id, []]\n        }).then(ar => ar[0]);\n\n        const doc = new DOMParser().parseFromString(\n            document.getElementById('totp_wizard_view').textContent,\n            'application/xhtml+xml'\n        );\n\n        const xmlBody = doc.querySelector('sheet *');\n        const [body, , codeInput] = fixupViewBody(xmlBody, record);\n        // remove custom validity error message any time the field changes\n        // otherwise it sticks and browsers suppress submit\n        codeInput.addEventListener('input', () => codeInput.setCustomValidity(''));\n\n        const buttons = [];\n        for(const button of doc.querySelectorAll('footer button')) {\n            buttons.push(new Button(this, model, record.id, codeInput, button));\n        }\n\n        // wrap in a root host of .modal-body otherwise it breaks our neat flex layout\n        const $content = document.createElement('form');\n        $content.appendChild(body);\n        // implicit submission by pressing [return] from within input\n        $content.addEventListener('submit', (e) => {\n            e.preventDefault();\n            // sadness: footer not available as normal element\n            dialog.$footer.find('.btn-primary').click();\n        });\n        var dialog = new Dialog(this, {$content, buttons}).open();\n    }\n});\npublicWidget.registry.DisableTOTPButton = publicWidget.Widget.extend({\n    selector: '#auth_totp_portal_disable',\n    events: {\n        click: '_onClick'\n    },\n\n    async _onClick(e) {\n        e.preventDefault();\n        await handleCheckIdentity(\n            this.proxy('_rpc'),\n            this._rpc({model: 'res.users', method: 'action_totp_disable', args: [this.getSession().user_id]})\n        )\n        window.location = window.location;\n    }\n});\npublicWidget.registry.RevokeTrustedDeviceButton = publicWidget.Widget.extend({\n    selector: '#totp_wizard_view + * .fa.fa-trash.text-danger',\n    events: {\n        click: '_onClick'\n    },\n\n    async _onClick(e){\n        e.preventDefault();\n        await handleCheckIdentity(\n            this.proxy('_rpc'),\n            this._rpc({\n                model: 'auth_totp.device',\n                method: 'remove',\n                args: [parseInt(this.target.id)]\n            })\n        );\n        window.location = window.location;\n    }\n});\npublicWidget.registry.RevokeAllTrustedDevicesButton = publicWidget.Widget.extend({\n    selector: '#auth_totp_portal_revoke_all_devices',\n    events: {\n        click: '_onClick'\n    },\n\n    async _onClick(e){\n        e.preventDefault();\n        await handleCheckIdentity(\n            this.proxy('_rpc'),\n            this._rpc({\n                model: 'res.users',\n                method: 'revoke_all_devices',\n                args: [this.getSession().user_id]\n            })\n        );\n        window.location = window.location;\n    }\n});\n});\n", "odoo.define('rating.portal.chatter', function (require) {\n'use strict';\n\nvar core = require('web.core');\nvar portalChatter = require('portal.chatter');\nvar utils = require('web.utils');\nvar time = require('web.time');\n\nvar _t = core._t;\nvar PortalChatter = portalChatter.PortalChatter;\nvar qweb = core.qweb;\n\n/**\n * PortalChatter\n *\n * Extends Frontend Chatter to handle rating\n */\nPortalChatter.include({\n    events: _.extend({}, PortalChatter.prototype.events, {\n        // star based control\n        'click .o_website_rating_select': '_onClickStarDomain',\n        'click .o_website_rating_select_text': '_onClickStarDomainReset',\n        // publisher comments\n        'click .o_wrating_js_publisher_comment_btn': '_onClickPublisherComment',\n        'click .o_wrating_js_publisher_comment_edit': '_onClickPublisherComment',\n        'click .o_wrating_js_publisher_comment_delete': '_onClickPublisherCommentDelete',\n        'click .o_wrating_js_publisher_comment_submit': '_onClickPublisherCommentSubmit',\n        'click .o_wrating_js_publisher_comment_cancel': '_onClickPublisherCommentCancel',\n    }),\n    xmlDependencies: (PortalChatter.prototype.xmlDependencies || [])\n        .concat([\n            '/portal_rating/static/src/xml/portal_tools.xml',\n            '/portal_rating/static/src/xml/portal_chatter.xml'\n        ]),\n\n    /**\n     * @constructor\n     */\n    init: function (parent, options) {\n        this._super.apply(this, arguments);\n        // options\n        if (!_.contains(this.options, 'display_rating')) {\n            this.options = _.defaults(this.options, {\n                'display_rating': false,\n                'rating_default_value': 0.0,\n            });\n        }\n        // rating card\n        this.set('rating_card_values', {});\n        this.set('rating_value', false);\n        this.on(\"change:rating_value\", this, this._onChangeRatingDomain);\n    },\n    /**\n     * @override\n     */\n    start: function () {\n        this._super.apply(this, arguments);\n        this.on(\"change:rating_card_values\", this, this._renderRatingCard);\n    },\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    /**\n     * Update the messages format\n     *\n     * @param {Array<Object>} messages\n     * @returns {Array}\n     */\n    preprocessMessages: function (messages) {\n        var self = this;\n        messages = this._super.apply(this, arguments);\n        if (this.options['display_rating']) {\n            _.each(messages, function (m, i) {\n                m.rating_value = self.roundToHalf(m['rating_value']);\n                m.rating = self._preprocessCommentData(m.rating, i);\n            });\n        }\n        // save messages in the widget to process correctly the publisher comment templates\n        this.messages = messages;\n        return messages;\n    },\n    /**\n     * Round the given value with a precision of 0.5.\n     *\n     * Examples:\n     * - 1.2 --> 1.0\n     * - 1.7 --> 1.5\n     * - 1.9 --> 2.0\n     *\n     * @param {Number} value\n     * @returns Number\n     **/\n    roundToHalf: function (value) {\n        var converted = parseFloat(value); // Make sure we have a number\n        var decimal = (converted - parseInt(converted, 10));\n        decimal = Math.round(decimal * 10);\n        if (decimal === 5) {\n            return (parseInt(converted, 10) + 0.5);\n        }\n        if ((decimal < 3) || (decimal > 7)) {\n            return Math.round(converted);\n        } else {\n            return (parseInt(converted, 10) + 0.5);\n        }\n    },\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    /**\n     * @override\n     * @returns {Promise}\n     */\n    _chatterInit: async function () {\n        const result = await this._super(...arguments);\n        this._updateRatingCardValues(result);\n        return result;\n    },\n    /**\n     * @override\n     * @param {Array} domain\n     * @returns {Promise}\n     */\n    messageFetch: async function (domain) {\n        const result = await this._super(...arguments);\n        this._updateRatingCardValues(result);\n        return result;\n    },\n    /**\n     * Calculates and Updates rating values i.e. average, percentage\n     *\n     * @private\n     */\n    _updateRatingCardValues: function (result) {\n        if (!result['rating_stats']) {\n            return;\n        }\n        const ratingData = {\n            'avg': Math.round(result['rating_stats']['avg'] * 100) / 100,\n            'percent': [],\n        };\n        _.each(_.keys(result['rating_stats']['percent']).reverse(), function (rating) {\n            ratingData['percent'].push({\n                'num': rating,\n                'percent': utils.round_precision(result['rating_stats']['percent'][rating], 0.01),\n            });\n        });\n        this.set('rating_card_values', ratingData);\n    },\n    /**\n     * @override\n     */\n    _messageFetchPrepareParams: function () {\n        var params = this._super.apply(this, arguments);\n        if (this.options['display_rating']) {\n            params['rating_include'] = true;\n        }\n        return params;\n    },\n\n    /**\n     * render rating card\n     *\n     * @private\n     */\n    _renderRatingCard: function () {\n        this.$('.o_website_rating_card_container').replaceWith(qweb.render(\"portal_rating.rating_card\", {widget: this}));\n    },\n    /**\n     * Default rating data for publisher comment qweb template\n     * @private\n     * @param {Integer} messageIndex \n     */\n    _newPublisherCommentData: function (messageIndex) {\n        return {\n            mes_index: messageIndex,\n            publisher_id: this.options.partner_id,\n            publisher_avatar: _.str.sprintf('/web/image/res.partner/%s/avatar_128/50x50', this.options.partner_id),\n            publisher_name: _t(\"Write your comment\"),\n            publisher_datetime: '',\n            publisher_comment: '',\n        };\n    }, \n\n     /**\n     * preprocess the rating data comming from /website/rating/comment or the chatter_init\n     * Can be also use to have new rating data for a new publisher comment\n     * @param {JSON} rawRating \n     * @returns {JSON} the process rating data\n     */\n    _preprocessCommentData: function (rawRating, messageIndex) {\n        var ratingData = {\n            id: rawRating.id,\n            mes_index: messageIndex,\n            publisher_datetime: rawRating.publisher_datetime ? moment(time.str_to_datetime(rawRating.publisher_datetime)).format('MMMM Do YYYY, h:mm:ss a') : \"\",\n            publisher_comment: rawRating.publisher_comment ? rawRating.publisher_comment : '',\n        };\n\n        // split array (id, display_name) of publisher_id into publisher_id and publisher_name\n        if (rawRating.publisher_id && rawRating.publisher_id.length >= 2) {\n            ratingData.publisher_id = rawRating.publisher_id[0];\n            ratingData.publisher_name = rawRating.publisher_id[1];\n            ratingData.publisher_avatar = _.str.sprintf('/web/image/res.partner/%s/avatar_128/50x50', ratingData.publisher_id);\n        }\n        var commentData = _.extend(this._newPublisherCommentData(messageIndex), ratingData);\n        return commentData;\n    },\n\n    /** ---------------\n     * Selection of elements for the publisher comment feature\n     * Only available from a source in a publisher_comment or publisher_comment_form template\n     */\n\n    _getCommentContainer: function ($source) {\n        return $source.parents(\".o_wrating_publisher_container\").first().find(\".o_wrating_publisher_comment\").first();\n    },\n\n    _getCommentButton: function ($source) {\n        return $source.parents(\".o_wrating_publisher_container\").first().find(\".o_wrating_js_publisher_comment_btn\").first();\n    },\n\n    _getCommentTextarea: function ($source) {\n        return $source.parents(\".o_wrating_publisher_container\").first().find(\".o_portal_rating_comment_input\").first();\n    },\n\n    _focusTextComment: function ($source) {\n        this._getCommentTextarea($source).focus();\n    },\n\n    //--------------------------------------------------------------------------\n    // Handlers\n    //--------------------------------------------------------------------------\n\n    /**\n     * @private\n     * @param {MouseEvent} ev\n     */\n    _onClickStarDomain: function (ev) {\n        var $tr = this.$(ev.currentTarget);\n        var num = $tr.data('star');\n        if ($tr.css('opacity') === '1') {\n            this.set('rating_value', num);\n            this.$('.o_website_rating_select').css({\n                'opacity': 0.5,\n            });\n            this.$('.o_website_rating_select_text[data-star=\"' + num + '\"]').css({\n                'visibility': 'visible',\n                'opacity': 1,\n            });\n            this.$('.o_website_rating_select[data-star=\"' + num + '\"]').css({\n                'opacity': 1,\n            });\n        }\n    },\n    /**\n     * @private\n     * @param {MouseEvent} ev\n     */\n    _onClickStarDomainReset: function (ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n        this.set('rating_value', false);\n        this.$('.o_website_rating_select_text').css('visibility', 'hidden');\n        this.$('.o_website_rating_select').css({\n            'opacity': 1,\n        });\n    },\n\n    /**\n     * @private\n     * @param {MouseEvent} ev\n     */\n    _onClickPublisherComment: function (ev) {\n        var $source = this.$(ev.currentTarget);\n        // If the form is already present => like cancel remove the form\n        if (this._getCommentTextarea($source).length === 1) {\n            this._getCommentContainer($source).empty();\n            return;\n        }\n        var messageIndex = $source.data(\"mes_index\");\n        var data = {is_publisher: this.options['is_user_publisher']}; \n        data.rating = this._newPublisherCommentData(messageIndex);\n        \n        var oldRating = this.messages[messageIndex].rating;\n        data.rating.publisher_comment = oldRating.publisher_comment ? oldRating.publisher_comment : '';\n        this._getCommentContainer($source).html($(qweb.render(\"portal_rating.chatter_rating_publisher_form\", data)));\n        this._focusTextComment($source);\n    },\n\n    /**\n     * @private\n     * @param {MouseEvent} ev\n     */\n    _onClickPublisherCommentDelete: function (ev) {\n        var self = this;\n        var $source = this.$(ev.currentTarget);\n\n        var messageIndex = $source.data(\"mes_index\");\n        var ratingId = this.messages[messageIndex].rating.id;\n\n        this._rpc({\n            route: '/website/rating/comment',\n            params: {\n                \"rating_id\": ratingId,\n                \"publisher_comment\": '' // Empty publisher comment means no comment\n            }\n        }).then(function (res) {\n            self.messages[messageIndex].rating = self._preprocessCommentData(res, messageIndex);\n            self._getCommentButton($source).removeClass(\"d-none\");\n            self._getCommentContainer($source).empty();\n        });\n    },  \n\n     /**\n     * @private\n     * @param {MouseEvent} ev\n     */\n    _onClickPublisherCommentSubmit: function (ev) {\n        var self = this;\n        var $source = this.$(ev.currentTarget);\n\n        var messageIndex = $source.data(\"mes_index\");\n        var comment = this._getCommentTextarea($source).val();\n        var ratingId = this.messages[messageIndex].rating.id;\n\n        this._rpc({\n            route: '/website/rating/comment',\n            params: {\n                \"rating_id\": ratingId,\n                \"publisher_comment\": comment\n            }\n        }).then(function (res) {\n\n            // Modify the related message\n            self.messages[messageIndex].rating = self._preprocessCommentData(res, messageIndex);\n            if (self.messages[messageIndex].rating.publisher_comment !== '') {\n                // Remove the button comment if exist and render the comment\n                self._getCommentButton($source).addClass('d-none');\n                self._getCommentContainer($source).html($(qweb.render(\"portal_rating.chatter_rating_publisher_comment\", { \n                    rating: self.messages[messageIndex].rating,\n                    is_publisher: self.options.is_user_publisher\n                })));\n            } else {\n                // Empty string or false considers as no comment\n                self._getCommentButton($source).removeClass(\"d-none\");\n                self._getCommentContainer($source).empty();       \n            }\n        });\n    },\n\n     /**\n     * @private\n     * @param {MouseEvent} ev\n     */\n    _onClickPublisherCommentCancel: function (ev) {\n        var $source = this.$(ev.currentTarget);\n        var messageIndex = $source.data(\"mes_index\");\n\n        var comment = this.messages[messageIndex].rating.publisher_comment;\n        if (comment) {\n            var data = {\n                rating: this.messages[messageIndex].rating,\n                is_publisher: this.options.is_user_publisher\n            };\n            this._getCommentContainer($source).html($(qweb.render(\"portal_rating.chatter_rating_publisher_comment\", data)));\n        } else {\n            this._getCommentContainer($source).empty();\n        }\n    },\n\n    /**\n     * @private\n     */\n    _onChangeRatingDomain: function () {\n        var domain = [];\n        if (this.get('rating_value')) {\n            domain = [['rating_value', '=', this.get('rating_value')]];\n        }\n        this._changeCurrentPage(1, domain);\n    },\n});\n});\n", "odoo.define('rating.portal.composer', function (require) {\n'use strict';\n\nvar core = require('web.core');\nvar portalComposer = require('portal.composer');\n\nvar _t = core._t;\n\nvar PortalComposer = portalComposer.PortalComposer;\n\n/**\n * PortalComposer\n *\n * Extends Portal Composer to handle rating submission\n */\nPortalComposer.include({\n    events: _.extend({}, PortalComposer.prototype.events, {\n        'click .stars i': '_onClickStar',\n        'mouseleave .stars': '_onMouseleaveStarBlock',\n        'mousemove .stars i': '_onMoveStar',\n        'mouseleave .stars i': '_onMoveLeaveStar',\n    }),\n\n    /**\n     * @constructor\n     */\n    init: function (parent, options) {\n        this._super.apply(this, arguments);\n\n        // apply ratio to default rating value\n        if (options.default_rating_value) {\n            options.default_rating_value = parseFloat(options.default_rating_value);\n        }\n\n        // default options\n        this.options = _.defaults(this.options, {\n            'default_message': false,\n            'default_message_id': false,\n            'default_rating_value': 0.0,\n            'force_submit_url': false,\n        });\n        // star input widget\n        this.labels = {\n            '0': \"\",\n            '1': _t(\"I hate it\"),\n            '2': _t(\"I don't like it\"),\n            '3': _t(\"It's okay\"),\n            '4': _t(\"I like it\"),\n            '5': _t(\"I love it\"),\n        };\n        this.user_click = false; // user has click or not\n        this.set(\"star_value\", this.options.default_rating_value);\n        this.on(\"change:star_value\", this, this._onChangeStarValue);\n    },\n    /**\n     * @override\n     */\n    start: function () {\n        var self = this;\n        return this._super.apply(this, arguments).then(function () {\n            // rating stars\n            self.$input = self.$('input[name=\"rating_value\"]');\n            self.$star_list = self.$('.stars').find('i');\n\n            // set the default value to trigger the display of star widget and update the hidden input value.\n            self.set(\"star_value\", self.options.default_rating_value); \n            self.$input.val(self.options.default_rating_value);\n        });\n    },\n\n    //--------------------------------------------------------------------------\n    // Handlers\n    //--------------------------------------------------------------------------\n\n    /**\n     * @override\n     * @private\n     */\n    _prepareMessageData: function () {\n        return Object.assign(this._super(...arguments) || {}, {\n            'message_id': this.options.default_message_id,\n            'rating_value': this.$input.val()\n        });\n    },\n    /**\n     * @private\n     */\n    _onChangeStarValue: function () {\n        var val = this.get(\"star_value\");\n        var index = Math.floor(val);\n        var decimal = val - index;\n        // reset the stars\n        this.$star_list.removeClass('fa-star fa-star-half-o').addClass('fa-star-o');\n\n        this.$('.stars').find(\"i:lt(\" + index + \")\").removeClass('fa-star-o fa-star-half-o').addClass('fa-star');\n        if (decimal) {\n            this.$('.stars').find(\"i:eq(\" + index + \")\").removeClass('fa-star-o fa-star fa-star-half-o').addClass('fa-star-half-o');\n        }\n        this.$('.rate_text .badge').text(this.labels[index]);\n    },\n    /**\n     * @private\n     */\n    _onClickStar: function (ev) {\n        var index = this.$('.stars i').index(ev.currentTarget);\n        this.set(\"star_value\", index + 1);\n        this.user_click = true;\n        this.$input.val(this.get(\"star_value\"));\n    },\n    /**\n     * @private\n     */\n    _onMouseleaveStarBlock: function () {\n        this.$('.rate_text').hide();\n    },\n    /**\n     * @private\n     * @param {MouseEvent} ev\n     */\n    _onMoveStar: function (ev) {\n        var index = this.$('.stars i').index(ev.currentTarget);\n        this.$('.rate_text').show();\n        this.set(\"star_value\", index + 1);\n    },\n    /**\n     * @private\n     */\n    _onMoveLeaveStar: function () {\n        if (!this.user_click) {\n            this.set(\"star_value\", parseInt(this.$input.val()));\n        }\n        this.user_click = false;\n    },\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    /**\n     * @override\n     * @private\n     */\n    _onSubmitButtonClick: function (ev) {\n        return this._super(...arguments).then((result) => {\n            const $modal = this.$el.closest('#ratingpopupcomposer');\n            $modal.on('hidden.bs.modal', () => {\n              this.trigger_up('reload_rating_popup_composer', result);\n            });\n            $modal.modal('hide');\n        });\n    },\n});\n});\n", "odoo.define('portal.rating.composer', function (require) {\n'use strict';\n\nconst publicWidget = require('web.public.widget');\nconst session = require('web.session');\nconst portalComposer = require('portal.composer');\nconst {_t, qweb} = require('web.core');\n\nconst PortalComposer = portalComposer.PortalComposer;\n\n/**\n * RatingPopupComposer\n *\n * Display the rating average with a static star widget, and open\n * a popup with the portal composer when clicking on it.\n **/\nconst RatingPopupComposer = publicWidget.Widget.extend({\n    selector: '.o_rating_popup_composer',\n    custom_events: {\n        reload_rating_popup_composer: '_onReloadRatingPopupComposer',\n    },\n    xmlDependencies: [\n        '/portal/static/src/xml/portal_chatter.xml',\n        '/portal_rating/static/src/xml/portal_chatter.xml',\n        '/portal_rating/static/src/xml/portal_tools.xml',\n        '/portal_rating/static/src/xml/portal_rating_composer.xml',\n    ],\n\n    willStart: function (parent) {\n        const def = this._super.apply(this, arguments);\n\n        const options = this.$el.data();\n        this.rating_avg = Math.round(options['rating_avg'] * 100) / 100 || 0.0;\n        this.rating_count = options['rating_count'] || 0.0;\n\n        this.options = _.defaults({}, options, {\n            'token': false,\n            'res_model': false,\n            'res_id': false,\n            'pid': 0,\n            'display_rating': true,\n            'csrf_token': odoo.csrf_token,\n            'user_id': session.user_id,\n        });\n\n        return def;\n    },\n\n    /**\n     * @override\n     */\n    start: function () {\n        return Promise.all([\n            this._super.apply(this, arguments),\n            this._reloadRatingPopupComposer(),\n        ]);\n    },\n\n    /**\n     * Destroy existing ratingPopup and insert new ratingPopup widget\n     *\n     * @private\n     * @param {Object} data\n     */\n    _reloadRatingPopupComposer: function () {\n        if (this.options.hide_rating_avg) {\n            this.$('.o_rating_popup_composer_stars').empty();\n        } else {\n            const ratingAverage = qweb.render(\n                'portal_rating.rating_stars_static', {\n                inline_mode: true,\n                widget: this,\n                val: this.rating_avg,\n            });\n            this.$('.o_rating_popup_composer_stars').empty().html(ratingAverage);\n        }\n\n        // Append the modal\n        const modal = qweb.render(\n            'portal_rating.PopupComposer', {\n            inline_mode: true,\n            widget: this,\n            val: this.rating_avg,\n        });\n        this.$('.o_rating_popup_composer_modal').html(modal);\n\n        if (this._composer) {\n            this._composer.destroy();\n        }\n\n        // Instantiate the \"Portal Composer\" widget and insert it into the modal\n        this._composer = new PortalComposer(this, this.options);\n        return this._composer.appendTo(this.$('.o_rating_popup_composer_modal .o_portal_chatter_composer')).then(() => {\n            // Change the text of the button\n            this.$('.o_rating_popup_composer_text').text(\n                this.options.default_message_id ?\n                _t('Modify your review') : _t('Add a review')\n            );\n        });\n    },\n\n    //--------------------------------------------------------------------------\n    // Handlers\n    //--------------------------------------------------------------------------\n\n    /**\n     * @private\n     * @param {OdooEvent} event\n     */\n    _onReloadRatingPopupComposer: function (event) {\n        const data = event.data;\n\n        // Refresh the internal state of the widget\n        this.rating_avg = data.rating_avg;\n        this.rating_count = data.rating_count;\n        this.rating_value = data.rating_value;\n\n        // Clean the dictionary\n        delete data.rating_avg;\n        delete data.rating_count;\n        delete data.rating_value;\n\n        this.options = _.extend(this.options, data);\n\n        this._reloadRatingPopupComposer();\n    }\n});\n\npublicWidget.registry.RatingPopupComposer = RatingPopupComposer;\n\nreturn RatingPopupComposer;\n\n});\n", "odoo.define('web_unsplash.beacon', function (require) {\n'use strict';\n\nvar publicWidget = require('web.public.widget');\n\npublicWidget.registry.UnsplashBeacon = publicWidget.Widget.extend({\n    // /!\\ To adapt the day the beacon makes sense for backend customizations\n    selector: '#wrapwrap',\n\n    /**\n     * @override\n     */\n    start: function () {\n        var unsplashImages = _.map(this.$('img[src*=\"/unsplash/\"]'), function (img) {\n            // get image id from URL (`http://www.domain.com:1234/unsplash/xYdf5feoI/lion.jpg` -> `xYdf5feoI`)\n            return img.src.split('/unsplash/')[1].split('/')[0];\n        });\n        if (unsplashImages.length) {\n            this._rpc({\n                route: '/web_unsplash/get_app_id',\n            }).then(function (appID) {\n                if (!appID) {\n                    return;\n                }\n                $.get('https://views.unsplash.com/v', {\n                    'photo_id': unsplashImages.join(','),\n                    'app_id': appID,\n                });\n            });\n        }\n        return this._super.apply(this, arguments);\n    },\n});\n});\n"], "file": "/web/assets/743-6b38b4e/web.assets_frontend_lazy.js", "sourceRoot": "../../../"}